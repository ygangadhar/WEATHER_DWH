<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="10/5/2019 8:28:02 AM"
  DTS:CreationName="Microsoft.Package"
  DTS:CreatorComputerName="MYLAPTOP"
  DTS:CreatorName="MYLAPTOP\ygang"
  DTS:DTSID="{A0584775-6C42-4597-B828-97CCDFBB0664}"
  DTS:ExecutableType="Microsoft.Package"
  DTS:LastModifiedProductVersion="15.0.1301.433"
  DTS:LocaleID="16393"
  DTS:ObjectName="CurrentData"
  DTS:PackageType="5"
  DTS:VersionBuild="67"
  DTS:VersionGUID="{D64F545F-92D8-4A70-852B-A1B35DB302D2}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">8</DTS:Property>
  <DTS:Variables>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{28D7C6D5-2E71-4DC0-9482-174D21FD67EB}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="Citi_CountryName">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{1BD90D8F-F31E-4B91-9FC7-BE0EDE6C7CAA}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="City_CountryList">
      <DTS:VariableValue
        DTS:DataSubType="ManagedSerializable"
        DTS:DataType="13">
        <SOAP-ENV:Envelope xmlns:clr="http://schemas.microsoft.com/soap/encoding/clr/1.0" xmlns:SOAP-ENC="http://schemas.xmlsoap.org/soap/encoding/" xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
          SOAP-ENV:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/">
          <SOAP-ENV:Body>
            <xsd:anyType
              id="ref-1"></xsd:anyType>
          </SOAP-ENV:Body>
        </SOAP-ENV:Envelope>
      </DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{36E1592A-E993-470E-BCB2-59A0879A2EB4}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="CurrentAPIURL">
      <DTS:VariableValue
        DTS:DataType="8">https://api.openweathermap.org/data/2.5/weather?q=</DTS:VariableValue>
    </DTS:Variable>
  </DTS:Variables>
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\Foreach Loop  - Loop through Cities"
      DTS:CreationName="STOCK:FOREACHLOOP"
      DTS:Description="Foreach Loop Container"
      DTS:DTSID="{3CFA00A1-9B17-413F-B6DF-7B95F428CE6C}"
      DTS:ExecutableType="STOCK:FOREACHLOOP"
      DTS:LocaleID="-1"
      DTS:ObjectName="Foreach Loop  - Loop through Cities">
      <DTS:ForEachEnumerator
        DTS:CreationName="Microsoft.ForEachADOEnumerator"
        DTS:DTSID="{C8D3D32C-DD0B-4ED3-BAD0-803731E9C898}"
        DTS:ObjectName="{C8D3D32C-DD0B-4ED3-BAD0-803731E9C898}">
        <DTS:ObjectData>
          <FEEADO
            EnumType="EnumerateAllRows"
            VarName="User::City_CountryList" />
        </DTS:ObjectData>
      </DTS:ForEachEnumerator>
      <DTS:Variables />
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package\Foreach Loop  - Loop through Cities\DFT - Extract Load Current Data"
          DTS:CreationName="Microsoft.Pipeline"
          DTS:Description="Data Flow Task"
          DTS:DTSID="{588B3E28-881A-4B46-BBA7-4CF36A7C3160}"
          DTS:ExecutableType="Microsoft.Pipeline"
          DTS:LocaleID="-1"
          DTS:ObjectName="DFT - Extract Load Current Data"
          DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
          <DTS:Variables />
          <DTS:ObjectData>
            <pipeline
              version="1">
              <components>
                <component
                  refId="Package\Foreach Loop  - Loop through Cities\DFT - Extract Load Current Data\OLEDB_Dest - Load Stagging_CurrentData"
                  componentClassID="Microsoft.OLEDBDestination"
                  contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
                  description="OLE DB Destination"
                  name="OLEDB_Dest - Load Stagging_CurrentData"
                  usesDispositions="true"
                  version="4">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the database object used to open a rowset."
                      name="OpenRowset">[Staging].[CurrentData]</property>
                    <property
                      dataType="System.String"
                      description="Specifies the variable that contains the name of the database object used to open a rowset."
                      name="OpenRowsetVariable"></property>
                    <property
                      dataType="System.String"
                      description="The SQL command to be executed."
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1252</property>
                    <property
                      dataType="System.Boolean"
                      description="Forces the use of the DefaultCodePage property value when describing character data."
                      name="AlwaysUseDefaultCodePage">false</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the mode used to access the database."
                      name="AccessMode"
                      typeConverter="AccessMode">3</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepIdentity">false</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepNulls">false</property>
                    <property
                      dataType="System.String"
                      description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                      name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                      name="FastLoadMaxInsertCommitSize">2147483647</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Foreach Loop  - Loop through Cities\DFT - Extract Load Current Data\OLEDB_Dest - Load Stagging_CurrentData.Connections[OleDbConnection]"
                      connectionManagerID="{2F0B9ABE-B0F6-4174-9360-6F341960A908}:external"
                      connectionManagerRefId="Project.ConnectionManagers[WeatherDWH_DBConnection]"
                      description="The OLE DB runtime connection used to access the database."
                      name="OleDbConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Foreach Loop  - Loop through Cities\DFT - Extract Load Current Data\OLEDB_Dest - Load Stagging_CurrentData.Inputs[OLE DB Destination Input]"
                      errorOrTruncationOperation="Insert"
                      errorRowDisposition="FailComponent"
                      hasSideEffects="true"
                      name="OLE DB Destination Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach Loop  - Loop through Cities\DFT - Extract Load Current Data\OLEDB_Dest - Load Stagging_CurrentData.Inputs[OLE DB Destination Input].Columns[Latitude]"
                          cachedDataType="wstr"
                          cachedLength="16"
                          cachedName="Latitude"
                          externalMetadataColumnId="Package\Foreach Loop  - Loop through Cities\DFT - Extract Load Current Data\OLEDB_Dest - Load Stagging_CurrentData.Inputs[OLE DB Destination Input].ExternalColumns[Latitude]"
                          lineageId="Package\Foreach Loop  - Loop through Cities\DFT - Extract Load Current Data\SCR - Extract Current Data from OWM API.Outputs[Output 0].Columns[Latitude]" />
                        <inputColumn
                          refId="Package\Foreach Loop  - Loop through Cities\DFT - Extract Load Current Data\OLEDB_Dest - Load Stagging_CurrentData.Inputs[OLE DB Destination Input].Columns[Longitude]"
                          cachedDataType="wstr"
                          cachedLength="16"
                          cachedName="Longitude"
                          externalMetadataColumnId="Package\Foreach Loop  - Loop through Cities\DFT - Extract Load Current Data\OLEDB_Dest - Load Stagging_CurrentData.Inputs[OLE DB Destination Input].ExternalColumns[Longitude]"
                          lineageId="Package\Foreach Loop  - Loop through Cities\DFT - Extract Load Current Data\SCR - Extract Current Data from OWM API.Outputs[Output 0].Columns[Longitude]" />
                        <inputColumn
                          refId="Package\Foreach Loop  - Loop through Cities\DFT - Extract Load Current Data\OLEDB_Dest - Load Stagging_CurrentData.Inputs[OLE DB Destination Input].Columns[CountryCode]"
                          cachedDataType="wstr"
                          cachedLength="2"
                          cachedName="CountryCode"
                          externalMetadataColumnId="Package\Foreach Loop  - Loop through Cities\DFT - Extract Load Current Data\OLEDB_Dest - Load Stagging_CurrentData.Inputs[OLE DB Destination Input].ExternalColumns[CountryCode]"
                          lineageId="Package\Foreach Loop  - Loop through Cities\DFT - Extract Load Current Data\SCR - Extract Current Data from OWM API.Outputs[Output 0].Columns[CountryCode]" />
                        <inputColumn
                          refId="Package\Foreach Loop  - Loop through Cities\DFT - Extract Load Current Data\OLEDB_Dest - Load Stagging_CurrentData.Inputs[OLE DB Destination Input].Columns[TimeZone]"
                          cachedDataType="i4"
                          cachedName="TimeZone"
                          externalMetadataColumnId="Package\Foreach Loop  - Loop through Cities\DFT - Extract Load Current Data\OLEDB_Dest - Load Stagging_CurrentData.Inputs[OLE DB Destination Input].ExternalColumns[TimeZone]"
                          lineageId="Package\Foreach Loop  - Loop through Cities\DFT - Extract Load Current Data\SCR - Extract Current Data from OWM API.Outputs[Output 0].Columns[TimeZone]" />
                        <inputColumn
                          refId="Package\Foreach Loop  - Loop through Cities\DFT - Extract Load Current Data\OLEDB_Dest - Load Stagging_CurrentData.Inputs[OLE DB Destination Input].Columns[Sunrise]"
                          cachedDataType="i4"
                          cachedName="Sunrise"
                          externalMetadataColumnId="Package\Foreach Loop  - Loop through Cities\DFT - Extract Load Current Data\OLEDB_Dest - Load Stagging_CurrentData.Inputs[OLE DB Destination Input].ExternalColumns[Sunrise]"
                          lineageId="Package\Foreach Loop  - Loop through Cities\DFT - Extract Load Current Data\SCR - Extract Current Data from OWM API.Outputs[Output 0].Columns[Sunrise]" />
                        <inputColumn
                          refId="Package\Foreach Loop  - Loop through Cities\DFT - Extract Load Current Data\OLEDB_Dest - Load Stagging_CurrentData.Inputs[OLE DB Destination Input].Columns[Sunset]"
                          cachedDataType="i4"
                          cachedName="Sunset"
                          externalMetadataColumnId="Package\Foreach Loop  - Loop through Cities\DFT - Extract Load Current Data\OLEDB_Dest - Load Stagging_CurrentData.Inputs[OLE DB Destination Input].ExternalColumns[Sunset]"
                          lineageId="Package\Foreach Loop  - Loop through Cities\DFT - Extract Load Current Data\SCR - Extract Current Data from OWM API.Outputs[Output 0].Columns[Sunset]" />
                        <inputColumn
                          refId="Package\Foreach Loop  - Loop through Cities\DFT - Extract Load Current Data\OLEDB_Dest - Load Stagging_CurrentData.Inputs[OLE DB Destination Input].Columns[WeatherID]"
                          cachedDataType="i4"
                          cachedName="WeatherID"
                          externalMetadataColumnId="Package\Foreach Loop  - Loop through Cities\DFT - Extract Load Current Data\OLEDB_Dest - Load Stagging_CurrentData.Inputs[OLE DB Destination Input].ExternalColumns[WeatherID]"
                          lineageId="Package\Foreach Loop  - Loop through Cities\DFT - Extract Load Current Data\SCR - Extract Current Data from OWM API.Outputs[Output 0].Columns[WeatherID]" />
                        <inputColumn
                          refId="Package\Foreach Loop  - Loop through Cities\DFT - Extract Load Current Data\OLEDB_Dest - Load Stagging_CurrentData.Inputs[OLE DB Destination Input].Columns[WeatherMain]"
                          cachedDataType="wstr"
                          cachedLength="60"
                          cachedName="WeatherMain"
                          externalMetadataColumnId="Package\Foreach Loop  - Loop through Cities\DFT - Extract Load Current Data\OLEDB_Dest - Load Stagging_CurrentData.Inputs[OLE DB Destination Input].ExternalColumns[WeatherMain]"
                          lineageId="Package\Foreach Loop  - Loop through Cities\DFT - Extract Load Current Data\SCR - Extract Current Data from OWM API.Outputs[Output 0].Columns[WeatherMain]" />
                        <inputColumn
                          refId="Package\Foreach Loop  - Loop through Cities\DFT - Extract Load Current Data\OLEDB_Dest - Load Stagging_CurrentData.Inputs[OLE DB Destination Input].Columns[WeatherIcon]"
                          cachedDataType="wstr"
                          cachedLength="10"
                          cachedName="WeatherIcon"
                          externalMetadataColumnId="Package\Foreach Loop  - Loop through Cities\DFT - Extract Load Current Data\OLEDB_Dest - Load Stagging_CurrentData.Inputs[OLE DB Destination Input].ExternalColumns[WeatherIcon]"
                          lineageId="Package\Foreach Loop  - Loop through Cities\DFT - Extract Load Current Data\SCR - Extract Current Data from OWM API.Outputs[Output 0].Columns[WeatherIcon]" />
                        <inputColumn
                          refId="Package\Foreach Loop  - Loop through Cities\DFT - Extract Load Current Data\OLEDB_Dest - Load Stagging_CurrentData.Inputs[OLE DB Destination Input].Columns[Pressure]"
                          cachedDataType="i4"
                          cachedName="Pressure"
                          externalMetadataColumnId="Package\Foreach Loop  - Loop through Cities\DFT - Extract Load Current Data\OLEDB_Dest - Load Stagging_CurrentData.Inputs[OLE DB Destination Input].ExternalColumns[Pressure]"
                          lineageId="Package\Foreach Loop  - Loop through Cities\DFT - Extract Load Current Data\SCR - Extract Current Data from OWM API.Outputs[Output 0].Columns[Pressure]" />
                        <inputColumn
                          refId="Package\Foreach Loop  - Loop through Cities\DFT - Extract Load Current Data\OLEDB_Dest - Load Stagging_CurrentData.Inputs[OLE DB Destination Input].Columns[Humidity]"
                          cachedDataType="decimal"
                          cachedName="Humidity"
                          externalMetadataColumnId="Package\Foreach Loop  - Loop through Cities\DFT - Extract Load Current Data\OLEDB_Dest - Load Stagging_CurrentData.Inputs[OLE DB Destination Input].ExternalColumns[Humidity]"
                          lineageId="Package\Foreach Loop  - Loop through Cities\DFT - Extract Load Current Data\SCR - Extract Current Data from OWM API.Outputs[Output 0].Columns[Humidity]" />
                        <inputColumn
                          refId="Package\Foreach Loop  - Loop through Cities\DFT - Extract Load Current Data\OLEDB_Dest - Load Stagging_CurrentData.Inputs[OLE DB Destination Input].Columns[Visibility]"
                          cachedDataType="i4"
                          cachedName="Visibility"
                          externalMetadataColumnId="Package\Foreach Loop  - Loop through Cities\DFT - Extract Load Current Data\OLEDB_Dest - Load Stagging_CurrentData.Inputs[OLE DB Destination Input].ExternalColumns[Visibility]"
                          lineageId="Package\Foreach Loop  - Loop through Cities\DFT - Extract Load Current Data\SCR - Extract Current Data from OWM API.Outputs[Output 0].Columns[Visibility]" />
                        <inputColumn
                          refId="Package\Foreach Loop  - Loop through Cities\DFT - Extract Load Current Data\OLEDB_Dest - Load Stagging_CurrentData.Inputs[OLE DB Destination Input].Columns[WindSpeed]"
                          cachedDataType="decimal"
                          cachedName="WindSpeed"
                          externalMetadataColumnId="Package\Foreach Loop  - Loop through Cities\DFT - Extract Load Current Data\OLEDB_Dest - Load Stagging_CurrentData.Inputs[OLE DB Destination Input].ExternalColumns[WindSpeed]"
                          lineageId="Package\Foreach Loop  - Loop through Cities\DFT - Extract Load Current Data\SCR - Extract Current Data from OWM API.Outputs[Output 0].Columns[WindSpeed]" />
                        <inputColumn
                          refId="Package\Foreach Loop  - Loop through Cities\DFT - Extract Load Current Data\OLEDB_Dest - Load Stagging_CurrentData.Inputs[OLE DB Destination Input].Columns[WindDeg]"
                          cachedDataType="decimal"
                          cachedName="WindDeg"
                          externalMetadataColumnId="Package\Foreach Loop  - Loop through Cities\DFT - Extract Load Current Data\OLEDB_Dest - Load Stagging_CurrentData.Inputs[OLE DB Destination Input].ExternalColumns[WindDeg]"
                          lineageId="Package\Foreach Loop  - Loop through Cities\DFT - Extract Load Current Data\SCR - Extract Current Data from OWM API.Outputs[Output 0].Columns[WindDeg]" />
                        <inputColumn
                          refId="Package\Foreach Loop  - Loop through Cities\DFT - Extract Load Current Data\OLEDB_Dest - Load Stagging_CurrentData.Inputs[OLE DB Destination Input].Columns[CitiID]"
                          cachedDataType="i4"
                          cachedName="CitiID"
                          externalMetadataColumnId="Package\Foreach Loop  - Loop through Cities\DFT - Extract Load Current Data\OLEDB_Dest - Load Stagging_CurrentData.Inputs[OLE DB Destination Input].ExternalColumns[CityID]"
                          lineageId="Package\Foreach Loop  - Loop through Cities\DFT - Extract Load Current Data\SCR - Extract Current Data from OWM API.Outputs[Output 0].Columns[CitiID]" />
                        <inputColumn
                          refId="Package\Foreach Loop  - Loop through Cities\DFT - Extract Load Current Data\OLEDB_Dest - Load Stagging_CurrentData.Inputs[OLE DB Destination Input].Columns[CitiName]"
                          cachedDataType="wstr"
                          cachedLength="60"
                          cachedName="CitiName"
                          externalMetadataColumnId="Package\Foreach Loop  - Loop through Cities\DFT - Extract Load Current Data\OLEDB_Dest - Load Stagging_CurrentData.Inputs[OLE DB Destination Input].ExternalColumns[CityName]"
                          lineageId="Package\Foreach Loop  - Loop through Cities\DFT - Extract Load Current Data\SCR - Extract Current Data from OWM API.Outputs[Output 0].Columns[CitiName]" />
                        <inputColumn
                          refId="Package\Foreach Loop  - Loop through Cities\DFT - Extract Load Current Data\OLEDB_Dest - Load Stagging_CurrentData.Inputs[OLE DB Destination Input].Columns[WeatherDescription]"
                          cachedDataType="wstr"
                          cachedLength="100"
                          cachedName="WeatherDescription"
                          externalMetadataColumnId="Package\Foreach Loop  - Loop through Cities\DFT - Extract Load Current Data\OLEDB_Dest - Load Stagging_CurrentData.Inputs[OLE DB Destination Input].ExternalColumns[WeatherDesc]"
                          lineageId="Package\Foreach Loop  - Loop through Cities\DFT - Extract Load Current Data\SCR - Extract Current Data from OWM API.Outputs[Output 0].Columns[WeatherDescription]" />
                        <inputColumn
                          refId="Package\Foreach Loop  - Loop through Cities\DFT - Extract Load Current Data\OLEDB_Dest - Load Stagging_CurrentData.Inputs[OLE DB Destination Input].Columns[Cloudiness]"
                          cachedDataType="i4"
                          cachedName="Cloudiness"
                          externalMetadataColumnId="Package\Foreach Loop  - Loop through Cities\DFT - Extract Load Current Data\OLEDB_Dest - Load Stagging_CurrentData.Inputs[OLE DB Destination Input].ExternalColumns[Cloudniess]"
                          lineageId="Package\Foreach Loop  - Loop through Cities\DFT - Extract Load Current Data\SCR - Extract Current Data from OWM API.Outputs[Output 0].Columns[Cloudiness]" />
                        <inputColumn
                          refId="Package\Foreach Loop  - Loop through Cities\DFT - Extract Load Current Data\OLEDB_Dest - Load Stagging_CurrentData.Inputs[OLE DB Destination Input].Columns[CalculatedDate]"
                          cachedDataType="i4"
                          cachedName="CalculatedDate"
                          externalMetadataColumnId="Package\Foreach Loop  - Loop through Cities\DFT - Extract Load Current Data\OLEDB_Dest - Load Stagging_CurrentData.Inputs[OLE DB Destination Input].ExternalColumns[CalulatedDateTime]"
                          lineageId="Package\Foreach Loop  - Loop through Cities\DFT - Extract Load Current Data\SCR - Extract Current Data from OWM API.Outputs[Output 0].Columns[CalculatedDate]" />
                        <inputColumn
                          refId="Package\Foreach Loop  - Loop through Cities\DFT - Extract Load Current Data\OLEDB_Dest - Load Stagging_CurrentData.Inputs[OLE DB Destination Input].Columns[Code]"
                          cachedDataType="i4"
                          cachedName="Code"
                          externalMetadataColumnId="Package\Foreach Loop  - Loop through Cities\DFT - Extract Load Current Data\OLEDB_Dest - Load Stagging_CurrentData.Inputs[OLE DB Destination Input].ExternalColumns[Code]"
                          lineageId="Package\Foreach Loop  - Loop through Cities\DFT - Extract Load Current Data\SCR - Extract Current Data from OWM API.Outputs[Output 0].Columns[Code]" />
                        <inputColumn
                          refId="Package\Foreach Loop  - Loop through Cities\DFT - Extract Load Current Data\OLEDB_Dest - Load Stagging_CurrentData.Inputs[OLE DB Destination Input].Columns[Temp_degC]"
                          cachedDataType="decimal"
                          cachedName="Temp_degC"
                          externalMetadataColumnId="Package\Foreach Loop  - Loop through Cities\DFT - Extract Load Current Data\OLEDB_Dest - Load Stagging_CurrentData.Inputs[OLE DB Destination Input].ExternalColumns[TempInC]"
                          lineageId="Package\Foreach Loop  - Loop through Cities\DFT - Extract Load Current Data\SCR - Extract Current Data from OWM API.Outputs[Output 0].Columns[Temp_degC]" />
                        <inputColumn
                          refId="Package\Foreach Loop  - Loop through Cities\DFT - Extract Load Current Data\OLEDB_Dest - Load Stagging_CurrentData.Inputs[OLE DB Destination Input].Columns[TempMin_degC]"
                          cachedDataType="decimal"
                          cachedName="TempMin_degC"
                          externalMetadataColumnId="Package\Foreach Loop  - Loop through Cities\DFT - Extract Load Current Data\OLEDB_Dest - Load Stagging_CurrentData.Inputs[OLE DB Destination Input].ExternalColumns[Temp_Min_C]"
                          lineageId="Package\Foreach Loop  - Loop through Cities\DFT - Extract Load Current Data\SCR - Extract Current Data from OWM API.Outputs[Output 0].Columns[TempMin_degC]" />
                        <inputColumn
                          refId="Package\Foreach Loop  - Loop through Cities\DFT - Extract Load Current Data\OLEDB_Dest - Load Stagging_CurrentData.Inputs[OLE DB Destination Input].Columns[TempMax_degC]"
                          cachedDataType="decimal"
                          cachedName="TempMax_degC"
                          externalMetadataColumnId="Package\Foreach Loop  - Loop through Cities\DFT - Extract Load Current Data\OLEDB_Dest - Load Stagging_CurrentData.Inputs[OLE DB Destination Input].ExternalColumns[Temp_Max_C]"
                          lineageId="Package\Foreach Loop  - Loop through Cities\DFT - Extract Load Current Data\SCR - Extract Current Data from OWM API.Outputs[Output 0].Columns[TempMax_degC]" />
                        <inputColumn
                          refId="Package\Foreach Loop  - Loop through Cities\DFT - Extract Load Current Data\OLEDB_Dest - Load Stagging_CurrentData.Inputs[OLE DB Destination Input].Columns[Rain3H]"
                          cachedDataType="wstr"
                          cachedLength="10"
                          cachedName="Rain3H"
                          externalMetadataColumnId="Package\Foreach Loop  - Loop through Cities\DFT - Extract Load Current Data\OLEDB_Dest - Load Stagging_CurrentData.Inputs[OLE DB Destination Input].ExternalColumns[Rain3H]"
                          lineageId="Package\Foreach Loop  - Loop through Cities\DFT - Extract Load Current Data\SCR - Extract Current Data from OWM API.Outputs[Output 0].Columns[Rain3H]" />
                        <inputColumn
                          refId="Package\Foreach Loop  - Loop through Cities\DFT - Extract Load Current Data\OLEDB_Dest - Load Stagging_CurrentData.Inputs[OLE DB Destination Input].Columns[Base]"
                          cachedDataType="wstr"
                          cachedLength="16"
                          cachedName="Base"
                          externalMetadataColumnId="Package\Foreach Loop  - Loop through Cities\DFT - Extract Load Current Data\OLEDB_Dest - Load Stagging_CurrentData.Inputs[OLE DB Destination Input].ExternalColumns[Base]"
                          lineageId="Package\Foreach Loop  - Loop through Cities\DFT - Extract Load Current Data\SCR - Extract Current Data from OWM API.Outputs[Output 0].Columns[Base]" />
                        <inputColumn
                          refId="Package\Foreach Loop  - Loop through Cities\DFT - Extract Load Current Data\OLEDB_Dest - Load Stagging_CurrentData.Inputs[OLE DB Destination Input].Columns[SysType]"
                          cachedDataType="wstr"
                          cachedLength="10"
                          cachedName="SysType"
                          externalMetadataColumnId="Package\Foreach Loop  - Loop through Cities\DFT - Extract Load Current Data\OLEDB_Dest - Load Stagging_CurrentData.Inputs[OLE DB Destination Input].ExternalColumns[SysType]"
                          lineageId="Package\Foreach Loop  - Loop through Cities\DFT - Extract Load Current Data\SCR - Extract Current Data from OWM API.Outputs[Output 0].Columns[SysType]" />
                        <inputColumn
                          refId="Package\Foreach Loop  - Loop through Cities\DFT - Extract Load Current Data\OLEDB_Dest - Load Stagging_CurrentData.Inputs[OLE DB Destination Input].Columns[SysID]"
                          cachedDataType="i4"
                          cachedName="SysID"
                          externalMetadataColumnId="Package\Foreach Loop  - Loop through Cities\DFT - Extract Load Current Data\OLEDB_Dest - Load Stagging_CurrentData.Inputs[OLE DB Destination Input].ExternalColumns[SysID]"
                          lineageId="Package\Foreach Loop  - Loop through Cities\DFT - Extract Load Current Data\SCR - Extract Current Data from OWM API.Outputs[Output 0].Columns[SysID]" />
                        <inputColumn
                          refId="Package\Foreach Loop  - Loop through Cities\DFT - Extract Load Current Data\OLEDB_Dest - Load Stagging_CurrentData.Inputs[OLE DB Destination Input].Columns[SysMessage]"
                          cachedDataType="wstr"
                          cachedLength="60"
                          cachedName="SysMessage"
                          externalMetadataColumnId="Package\Foreach Loop  - Loop through Cities\DFT - Extract Load Current Data\OLEDB_Dest - Load Stagging_CurrentData.Inputs[OLE DB Destination Input].ExternalColumns[SysMessage]"
                          lineageId="Package\Foreach Loop  - Loop through Cities\DFT - Extract Load Current Data\SCR - Extract Current Data from OWM API.Outputs[Output 0].Columns[SysMessage]" />
                      </inputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Foreach Loop  - Loop through Cities\DFT - Extract Load Current Data\OLEDB_Dest - Load Stagging_CurrentData.Inputs[OLE DB Destination Input].ExternalColumns[CityID]"
                          dataType="i4"
                          name="CityID" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop  - Loop through Cities\DFT - Extract Load Current Data\OLEDB_Dest - Load Stagging_CurrentData.Inputs[OLE DB Destination Input].ExternalColumns[CityName]"
                          dataType="wstr"
                          length="60"
                          name="CityName" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop  - Loop through Cities\DFT - Extract Load Current Data\OLEDB_Dest - Load Stagging_CurrentData.Inputs[OLE DB Destination Input].ExternalColumns[Latitude]"
                          dataType="wstr"
                          length="16"
                          name="Latitude" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop  - Loop through Cities\DFT - Extract Load Current Data\OLEDB_Dest - Load Stagging_CurrentData.Inputs[OLE DB Destination Input].ExternalColumns[Longitude]"
                          dataType="wstr"
                          length="16"
                          name="Longitude" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop  - Loop through Cities\DFT - Extract Load Current Data\OLEDB_Dest - Load Stagging_CurrentData.Inputs[OLE DB Destination Input].ExternalColumns[CountryCode]"
                          dataType="wstr"
                          length="2"
                          name="CountryCode" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop  - Loop through Cities\DFT - Extract Load Current Data\OLEDB_Dest - Load Stagging_CurrentData.Inputs[OLE DB Destination Input].ExternalColumns[TimeZone]"
                          dataType="wstr"
                          length="16"
                          name="TimeZone" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop  - Loop through Cities\DFT - Extract Load Current Data\OLEDB_Dest - Load Stagging_CurrentData.Inputs[OLE DB Destination Input].ExternalColumns[Sunrise]"
                          dataType="i4"
                          name="Sunrise" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop  - Loop through Cities\DFT - Extract Load Current Data\OLEDB_Dest - Load Stagging_CurrentData.Inputs[OLE DB Destination Input].ExternalColumns[Sunset]"
                          dataType="i4"
                          name="Sunset" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop  - Loop through Cities\DFT - Extract Load Current Data\OLEDB_Dest - Load Stagging_CurrentData.Inputs[OLE DB Destination Input].ExternalColumns[WeatherID]"
                          dataType="i4"
                          name="WeatherID" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop  - Loop through Cities\DFT - Extract Load Current Data\OLEDB_Dest - Load Stagging_CurrentData.Inputs[OLE DB Destination Input].ExternalColumns[WeatherMain]"
                          dataType="wstr"
                          length="60"
                          name="WeatherMain" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop  - Loop through Cities\DFT - Extract Load Current Data\OLEDB_Dest - Load Stagging_CurrentData.Inputs[OLE DB Destination Input].ExternalColumns[WeatherDesc]"
                          dataType="wstr"
                          length="100"
                          name="WeatherDesc" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop  - Loop through Cities\DFT - Extract Load Current Data\OLEDB_Dest - Load Stagging_CurrentData.Inputs[OLE DB Destination Input].ExternalColumns[WeatherIcon]"
                          dataType="wstr"
                          length="10"
                          name="WeatherIcon" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop  - Loop through Cities\DFT - Extract Load Current Data\OLEDB_Dest - Load Stagging_CurrentData.Inputs[OLE DB Destination Input].ExternalColumns[Pressure]"
                          dataType="i2"
                          name="Pressure" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop  - Loop through Cities\DFT - Extract Load Current Data\OLEDB_Dest - Load Stagging_CurrentData.Inputs[OLE DB Destination Input].ExternalColumns[Humidity]"
                          dataType="numeric"
                          name="Humidity"
                          precision="5"
                          scale="2" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop  - Loop through Cities\DFT - Extract Load Current Data\OLEDB_Dest - Load Stagging_CurrentData.Inputs[OLE DB Destination Input].ExternalColumns[Visibility]"
                          dataType="i4"
                          name="Visibility" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop  - Loop through Cities\DFT - Extract Load Current Data\OLEDB_Dest - Load Stagging_CurrentData.Inputs[OLE DB Destination Input].ExternalColumns[WindSpeed]"
                          dataType="wstr"
                          length="6"
                          name="WindSpeed" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop  - Loop through Cities\DFT - Extract Load Current Data\OLEDB_Dest - Load Stagging_CurrentData.Inputs[OLE DB Destination Input].ExternalColumns[WindDeg]"
                          dataType="numeric"
                          name="WindDeg"
                          precision="6"
                          scale="3" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop  - Loop through Cities\DFT - Extract Load Current Data\OLEDB_Dest - Load Stagging_CurrentData.Inputs[OLE DB Destination Input].ExternalColumns[Cloudniess]"
                          dataType="i2"
                          name="Cloudniess" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop  - Loop through Cities\DFT - Extract Load Current Data\OLEDB_Dest - Load Stagging_CurrentData.Inputs[OLE DB Destination Input].ExternalColumns[CalulatedDateTime]"
                          dataType="i4"
                          name="CalulatedDateTime" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop  - Loop through Cities\DFT - Extract Load Current Data\OLEDB_Dest - Load Stagging_CurrentData.Inputs[OLE DB Destination Input].ExternalColumns[Code]"
                          dataType="i4"
                          name="Code" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop  - Loop through Cities\DFT - Extract Load Current Data\OLEDB_Dest - Load Stagging_CurrentData.Inputs[OLE DB Destination Input].ExternalColumns[TempInC]"
                          dataType="numeric"
                          name="TempInC"
                          precision="5"
                          scale="2" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop  - Loop through Cities\DFT - Extract Load Current Data\OLEDB_Dest - Load Stagging_CurrentData.Inputs[OLE DB Destination Input].ExternalColumns[Temp_Min_C]"
                          dataType="numeric"
                          name="Temp_Min_C"
                          precision="5"
                          scale="2" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop  - Loop through Cities\DFT - Extract Load Current Data\OLEDB_Dest - Load Stagging_CurrentData.Inputs[OLE DB Destination Input].ExternalColumns[Temp_Max_C]"
                          dataType="numeric"
                          name="Temp_Max_C"
                          precision="5"
                          scale="2" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop  - Loop through Cities\DFT - Extract Load Current Data\OLEDB_Dest - Load Stagging_CurrentData.Inputs[OLE DB Destination Input].ExternalColumns[Rain3H]"
                          dataType="wstr"
                          length="10"
                          name="Rain3H" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop  - Loop through Cities\DFT - Extract Load Current Data\OLEDB_Dest - Load Stagging_CurrentData.Inputs[OLE DB Destination Input].ExternalColumns[Base]"
                          dataType="wstr"
                          length="16"
                          name="Base" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop  - Loop through Cities\DFT - Extract Load Current Data\OLEDB_Dest - Load Stagging_CurrentData.Inputs[OLE DB Destination Input].ExternalColumns[SysType]"
                          dataType="wstr"
                          length="10"
                          name="SysType" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop  - Loop through Cities\DFT - Extract Load Current Data\OLEDB_Dest - Load Stagging_CurrentData.Inputs[OLE DB Destination Input].ExternalColumns[SysID]"
                          dataType="i4"
                          name="SysID" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop  - Loop through Cities\DFT - Extract Load Current Data\OLEDB_Dest - Load Stagging_CurrentData.Inputs[OLE DB Destination Input].ExternalColumns[SysMessage]"
                          dataType="wstr"
                          length="60"
                          name="SysMessage" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop  - Loop through Cities\DFT - Extract Load Current Data\OLEDB_Dest - Load Stagging_CurrentData.Inputs[OLE DB Destination Input].ExternalColumns[InsertedTimeStamp]"
                          dataType="dbTimeStamp"
                          name="InsertedTimeStamp" />
                      </externalMetadataColumns>
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop  - Loop through Cities\DFT - Extract Load Current Data\OLEDB_Dest - Load Stagging_CurrentData.Outputs[OLE DB Destination Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="OLE DB Destination Error Output"
                      synchronousInputId="Package\Foreach Loop  - Loop through Cities\DFT - Extract Load Current Data\OLEDB_Dest - Load Stagging_CurrentData.Inputs[OLE DB Destination Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop  - Loop through Cities\DFT - Extract Load Current Data\OLEDB_Dest - Load Stagging_CurrentData.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop  - Loop through Cities\DFT - Extract Load Current Data\OLEDB_Dest - Load Stagging_CurrentData.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach Loop  - Loop through Cities\DFT - Extract Load Current Data\OLEDB_Dest - Load Stagging_CurrentData.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop  - Loop through Cities\DFT - Extract Load Current Data\OLEDB_Dest - Load Stagging_CurrentData.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Loop  - Loop through Cities\DFT - Extract Load Current Data\SCR - Extract Current Data from OWM API"
                  componentClassID="Microsoft.ManagedComponentHost"
                  contactInfo="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum.;Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;11"
                  description="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum."
                  name="SCR - Extract Current Data from OWM API"
                  version="11">
                  <properties>
                    <property
                      dataType="System.String"
                      description="Stores the source code of the component"
                      isArray="true"
                      name="SourceCode"
                      state="cdata">
                      <arrayElements
                        arrayElementCount="33">
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Resources.resx]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[main.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[#region Help:  Introduction to the Script Component
/* The Script Component allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services data flow.
 *
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script component. */
#endregion

#region Namespaces
using System;
using System.Collections.Generic;
using System.Data;
using System.Web.Script.Serialization;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;
#endregion

/// <summary>
/// This is the class to which to add your code.  Do not change the name, attributes, or parent
/// of this class.
/// </summary>
[Microsoft.SqlServer.Dts.Pipeline.SSISScriptComponentEntryPointAttribute]
public class ScriptMain : UserComponent
{
    #region Help:  Using Integration Services variables and parameters
    /* To use a variable in this script, first ensure that the variable has been added to
     * either the list contained in the ReadOnlyVariables property or the list contained in
     * the ReadWriteVariables property of this script component, according to whether or not your
     * code needs to write into the variable.  To do so, save this script, close this instance of
     * Visual Studio, and update the ReadOnlyVariables and ReadWriteVariables properties in the
     * Script Transformation Editor window.
     * To use a parameter in this script, follow the same steps. Parameters are always read-only.
     *
     * Example of reading from a variable or parameter:
     *  DateTime startTime = Variables.MyStartTime;
     *
     * Example of writing to a variable:
     *  Variables.myStringVariable = "new value";
     */
    #endregion

    #region Help:  Using Integration Services Connnection Managers
    /* Some types of connection managers can be used in this script component.  See the help topic
     * "Working with Connection Managers Programatically" for details.
     *
     * To use a connection manager in this script, first ensure that the connection manager has
     * been added to either the list of connection managers on the Connection Managers page of the
     * script component editor.  To add the connection manager, save this script, close this instance of
     * Visual Studio, and add the Connection Manager to the list.
     *
     * If the component needs to hold a connection open while processing rows, override the
     * AcquireConnections and ReleaseConnections methods.
     * 
     * Example of using an ADO.Net connection manager to acquire a SqlConnection:
     *  object rawConnection = Connections.SalesDB.AcquireConnection(transaction);
     *  SqlConnection salesDBConn = (SqlConnection)rawConnection;
     *
     * Example of using a File connection manager to acquire a file path:
     *  object rawConnection = Connections.Prices_zip.AcquireConnection(transaction);
     *  string filePath = (string)rawConnection;
     *
     * Example of releasing a connection manager:
     *  Connections.SalesDB.ReleaseConnection(rawConnection);
     */
    #endregion

    #region Help:  Firing Integration Services Events
    /* This script component can fire events.
     *
     * Example of firing an error event:
     *  ComponentMetaData.FireError(10, "Process Values", "Bad value", "", 0, out cancel);
     *
     * Example of firing an information event:
     *  ComponentMetaData.FireInformation(10, "Process Values", "Processing has started", "", 0, fireAgain);
     *
     * Example of firing a warning event:
     *  ComponentMetaData.FireWarning(10, "Process Values", "No rows were received", "", 0);
     */
    #endregion

    /// <summary>
    /// This method is called once, before rows begin to be processed in the data flow.
    ///
    /// You can remove this method if you don't need to do anything here.
    /// </summary>
    public override void PreExecute()
    {
        base.PreExecute();
        /*
         * Add your code here
         */
    }

    /// <summary>
    /// This method is called after all the rows have passed through this component.
    ///
    /// You can delete this method if you don't need to do anything here.
    /// </summary>
    public override void PostExecute()
    {
        base.PostExecute();
        /*
         * Add your code here
         */
    }

    public override void CreateNewOutputRows()
    {
        /*
          Add rows by calling the AddRow method on the member variable named "<Output Name>Buffer".
          For example, call MyOutputBuffer.AddRow() if your output was named "MyOutput".
        */
        var currentUrl = Variables.CurrentAPIURL;
        var citiName = Variables.CitiCountryName;
        var units = Variables.Units;
        var apiKey = Variables.APIKey;

        //Set URL for the location 
        var apiUrl = currentUrl + citiName + "&units=" + units + "&appid=" + apiKey;

        
        //Read file from web
        var textFromFile = (new System.Net.WebClient()).DownloadString(apiUrl);

        textFromFile = textFromFile.Replace("\"3h\":", "\"RainVol_3h\":");

        var item = new JavaScriptSerializer().Deserialize<RootObject>(textFromFile);

        foreach (var weather in item.weather)
        {
            Output0Buffer.AddRow();
            Output0Buffer.CitiID = item.id;
            Output0Buffer.CitiName = item.name;
            Output0Buffer.Latitude = item.coord.lat;
            Output0Buffer.Longitude = item.coord.lon;
            Output0Buffer.CountryCode = item.sys.country;
            Output0Buffer.TimeZone = item.timezone;
            Output0Buffer.Sunrise = item.sys.sunrise;
            Output0Buffer.Sunset = item.sys.sunset;
            Output0Buffer.Code = item.cod;
            Output0Buffer.WeatherID = weather.id;
            Output0Buffer.WeatherMain = weather.main;
            Output0Buffer.WeatherDescription = weather.description;
            Output0Buffer.WeatherIcon = weather.icon;
            Output0Buffer.TempdegC = item.main.temp;
            Output0Buffer.Pressure = item.main.pressure;
            Output0Buffer.Humidity = item.main.humidity;
            Output0Buffer.TempMindegC = item.main.temp_min;
            Output0Buffer.TempMaxdegC = item.main.temp_max;
            Output0Buffer.Visibility = item.visibility;
            Output0Buffer.Rain3H = item.rain != null ? item.rain.RainVol_3h : null;
            Output0Buffer.WindSpeed = item.wind.speed;
            Output0Buffer.WindDeg = item.wind.deg;
            Output0Buffer.Cloudiness = item.clouds.all;
            Output0Buffer.Base = item.@base;
            Output0Buffer.SysID = item.sys.id;
            Output0Buffer.SysType = item.sys.type;
            Output0Buffer.SysMessage = item.sys.message;
            Output0Buffer.CalculatedDate = item.dt;

        }

    }
    public class Coord
    {
        public string lon { get; set; }
        public string lat { get; set; }
    }

    public class Weather
    {
        public int id { get; set; }
        public string main { get; set; }
        public string description { get; set; }
        public string icon { get; set; }
    }

    public class Main
    {
        public decimal temp { get; set; }
        public int pressure { get; set; }
        public decimal humidity { get; set; }
        public decimal temp_min { get; set; }
        public decimal temp_max { get; set; }
    }

    public class Wind
    {
        public decimal speed { get; set; }
        public decimal deg { get; set; }
    }

    public class Rain
    {
        public string RainVol_3h { get; set; }
    }

    public class Clouds
    {
        public int all { get; set; }
    }

    public class Sys
    {
        public string type { get; set; }
        public int id { get; set; }
        public string message { get; set; }
        public string country { get; set; }
        public int sunrise { get; set; }
        public int sunset { get; set; }
    }

    public class RootObject
    {
        public Coord coord { get; set; }
        public List<Weather> weather { get; set; }
        public string @base { get; set; }
        public Main main { get; set; }
        public int visibility { get; set; }
        public Wind wind { get; set; }
        public Rain rain { get; set; }
        public Clouds clouds { get; set; }
        public int dt { get; set; }
        public Sys sys { get; set; }
        public int timezone { get; set; }
        public int id { get; set; }
        public string name { get; set; }
        public int cod { get; set; }
    }
}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[BufferWrapper.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services buffer wrappers
*  This module defines classes for accessing data flow buffers
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */



using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;

public class Output0Buffer: ScriptBuffer

{
    public Output0Buffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public Int32 CitiID
    {
        set
        {
            this[0] = value;
        }
    }
    public bool CitiID_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(0);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String CitiName
    {
        set
        {
            this[1] = value;
        }
    }
    public bool CitiName_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(1);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String Latitude
    {
        set
        {
            this[2] = value;
        }
    }
    public bool Latitude_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(2);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String Longitude
    {
        set
        {
            this[3] = value;
        }
    }
    public bool Longitude_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(3);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String CountryCode
    {
        set
        {
            this[4] = value;
        }
    }
    public bool CountryCode_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(4);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Int32 TimeZone
    {
        set
        {
            this[5] = value;
        }
    }
    public bool TimeZone_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(5);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Int32 Sunrise
    {
        set
        {
            this[6] = value;
        }
    }
    public bool Sunrise_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(6);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Int32 Sunset
    {
        set
        {
            this[7] = value;
        }
    }
    public bool Sunset_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(7);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Int32 Code
    {
        set
        {
            this[8] = value;
        }
    }
    public bool Code_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(8);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Int32 WeatherID
    {
        set
        {
            this[9] = value;
        }
    }
    public bool WeatherID_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(9);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String WeatherMain
    {
        set
        {
            this[10] = value;
        }
    }
    public bool WeatherMain_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(10);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String WeatherDescription
    {
        set
        {
            this[11] = value;
        }
    }
    public bool WeatherDescription_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(11);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String WeatherIcon
    {
        set
        {
            this[12] = value;
        }
    }
    public bool WeatherIcon_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(12);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Decimal TempdegC
    {
        set
        {
            this[13] = value;
        }
    }
    public bool TempdegC_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(13);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Int32 Pressure
    {
        set
        {
            this[14] = value;
        }
    }
    public bool Pressure_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(14);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Decimal Humidity
    {
        set
        {
            this[15] = value;
        }
    }
    public bool Humidity_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(15);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Decimal TempMindegC
    {
        set
        {
            this[16] = value;
        }
    }
    public bool TempMindegC_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(16);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Decimal TempMaxdegC
    {
        set
        {
            this[17] = value;
        }
    }
    public bool TempMaxdegC_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(17);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Int32 Visibility
    {
        set
        {
            this[18] = value;
        }
    }
    public bool Visibility_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(18);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Decimal WindSpeed
    {
        set
        {
            this[19] = value;
        }
    }
    public bool WindSpeed_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(19);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Decimal WindDeg
    {
        set
        {
            this[20] = value;
        }
    }
    public bool WindDeg_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(20);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String Rain3H
    {
        set
        {
            this[21] = value;
        }
    }
    public bool Rain3H_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(21);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Int32 Cloudiness
    {
        set
        {
            this[22] = value;
        }
    }
    public bool Cloudiness_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(22);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String SysType
    {
        set
        {
            this[23] = value;
        }
    }
    public bool SysType_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(23);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Int32 SysID
    {
        set
        {
            this[24] = value;
        }
    }
    public bool SysID_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(24);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String SysMessage
    {
        set
        {
            this[25] = value;
        }
    }
    public bool SysMessage_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(25);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String Base
    {
        set
        {
            this[26] = value;
        }
    }
    public bool Base_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(26);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Int32 CalculatedDate
    {
        set
        {
            this[27] = value;
        }
    }
    public bool CalculatedDate_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(27);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    new public void AddRow()
    {
        base.AddRow();
    }

    new public void SetEndOfRowset()
    {
        base.SetEndOfRowset();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[ComponentWrapper.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services component wrapper
*  This module defines the base class for your component
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

public class UserComponent: ScriptComponent
{
    public Connections Connections;
    public Variables Variables;
    public UserComponent()
    {
        Connections = new Connections(this);
        Variables = new Variables(this);
    }

    public Output0Buffer Output0Buffer;

    public virtual void FinishOutputs()
    {
    }

    private void MarkOutputsFinished()
    {

        if (null != Output0Buffer)
        {
            Output0Buffer.SetEndOfRowset();
            Output0Buffer = null;
        }

    }

    public override void PrimeOutput(int Outputs, int[] OutputIDs, PipelineBuffer[] Buffers, OutputNameMap OutputMap)
    {
       for(int Idx = 0; Idx < Outputs; Idx++)
       {
            if(OutputIDs[Idx] == GetOutputID(OutputMap, @"Output 0"))
            {
                Output0Buffer = new Output0Buffer(Buffers[Idx], GetColumnIndexes(OutputIDs[Idx]), OutputMap);
            }
        }

        CreateNewOutputRows();

        FinishOutputs();
        MarkOutputsFinished();

    }

    public virtual void CreateNewOutputRows()
    {
    }

}

public class Connections
{
    ScriptComponent ParentComponent;

    public Connections(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}

public class Variables
{
    ScriptComponent ParentComponent;

    public Variables(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

    public String APIKey
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["APIKey"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public String CitiCountryName
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["Citi_CountryName"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public String CurrentAPIURL
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["CurrentAPIURL"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public String Units
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["Units"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Settings.Designer.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_c7a065bb6a644cc4b6959cd6b4c5300c.Properties.Settings.get_Default():SC_c7a065bb6a644cc4b6959cd6b4c5300c.Properties.Sett" +
    "ings")]

namespace SC_c7a065bb6a644cc4b6959cd6b4c5300c.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[SC_c7a065bb6a644cc4b6959cd6b4c5300c.csproj]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{DFBDEB16-1293-4E57-8AA0-13AB42A2A5BC}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>SC_c7a065bb6a644cc4b6959cd6b4c5300c</RootNamespace>
    <AssemblyName>SC_c7a065bb6a644cc4b6959cd6b4c5300c</AssemblyName>
    <TargetFrameworkVersion>v4.5</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Web.Extensions" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.TxScript, Version=14.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSRuntimeWrap, Version=14.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSPipelineWrap, Version=14.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.PipelineHost, Version=14.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Compile Include="main.cs" />
    <Compile Include="BufferWrapper.cs" />
    <Compile Include="ComponentWrapper.cs" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <!-- This section defines VSTA properties that describe the host-changable project properties. -->
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" />
        <Host Name="ScriptComponent" IconIndex="0" />
        <ProjectClient>
          <HostIdentifier>SSIS_SC140</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Project]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:CodeName>SC_c7a065bb6a644cc4b6959cd6b4c5300c</msb:CodeName>
    <msb:Language>msBuild</msb:Language>
    <msb:DisplayName>SC_c7a065bb6a644cc4b6959cd6b4c5300c</msb:DisplayName>
    <msb:ProjectId>{6F0B6F0D-8E34-487F-BFE9-8A89F1A85CE4}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="SC_c7a065bb6a644cc4b6959cd6b4c5300c.csproj" />
    <msb:File Include="ComponentWrapper.cs" />
    <msb:File Include="Properties\Settings.Designer.cs" />
    <msb:File Include="main.cs" />
    <msb:File Include="BufferWrapper.cs" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="Properties\Resources.resx" />
    <msb:File Include="Properties\Resources.Designer.cs" />
  </msb:ItemGroup>
</c:Project>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\AssemblyInfo.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("SC_c7a065bb6a644cc4b6959cd6b4c5300c")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("SC_c7a065bb6a644cc4b6959cd6b4c5300c")]
[assembly: AssemblyCopyright("Copyright @  2019")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.0.0")]
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Settings.settings]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Resources.Designer.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_c7a065bb6a644cc4b6959cd6b4c5300c.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_c7a065bb6a644cc4b6959cd6b4c5300c.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_c7a065bb6a644cc4b6959cd6b4c5300c.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace SC_c7a065bb6a644cc4b6959cd6b4c5300c.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SC_c7a065bb6a644cc4b6959cd6b4c5300c.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[packages.config]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<packages>
  <package id="Newtonsoft.Json" version="12.0.2" targetFramework="net45" />
</packages>]]></arrayElement>
                      </arrayElements>
                    </property>
                    <property
                      dataType="System.String"
                      description="Stores the binary representation of the component"
                      isArray="true"
                      name="BinaryCode"
                      state="cdata">
                      <arrayElements
                        arrayElementCount="2">
                        <arrayElement
                          dataType="System.String"><![CDATA[SC_c7a065bb6a644cc4b6959cd6b4c5300c.dll]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[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
EAAAACNHVUlEAAAAaCwAAMQCAAAjQmxvYgAAAAAAAAACAAABVxWiCQkLAAAA+gEzABYAAAEAAAAp
AAAAEAAAACsAAACgAAAAZQAAAC4AAAB5AAAAAgAAAAwAAABiAAAAhgAAAAIAAAABAAAABgAAAAEA
AAAIAAAAAQAAAAAA7wgBAAAAAAAGAIMHDg4GABcIDg4GAM8G3g0PAIIOAAAGAPwGUgwGAGYHUgwG
AEcHUgwGAP4HUgwGAKMHUgwGALwHUgwGABMHUgwGAC4HeggKANcHWwUGADoA9gA7ALwNAAAGAJgP
dQsGAJcGDg4GAMEIdQsKADsNWwUOACwNWwUKANEMWwUKABwQWwUGALIG3g0GAEwNLg4GAMUMHQwS
AIIGyQgSAOMGyQgSABkGCAwGAJwIdQsSAPQPrQ8WAKQNMgwGAPgEdQsGAEEAdQsGAGQMdQsaABEA
fA0aAAEAfA1bAJ8QAAAaACIAfA0GAKoFdQsGAAQFdQsGAP8QUgwAAAAARwAAAAAAAQABAAEAEACY
CwAAEAABAAEAAQAQAB4NAABNAAEABQABABAA/g8AAFkAAQBBAAEAEAAaDwAAQQAEAEYAAQAQAMwO
AABBAAUARwAAABAANQ6RDkEABgBMAAABEAD7DpEOcQAIAFAAAgAQAGsEAABBAAkAUwACABAAXA0A
AEEACwBYAAIAEACeCwAAQQAPAGEAAgAQAEQEAABBABQAbAACABAAowsAAEEAFgBxAAIAEADxDQAA
QQAXAHQAAgAQAGkPAABBABgAdwACABAAlA8AAEEAHgCEAAYAGg/YAAYAzA7cAAYAHg3gAAEADBDk
AAEADBDkABEAfAvoABEAAAbsABEAjQTwAAEAKQP0AAEAmgP0AAEAbAH3AAEAsAL0AAEADAP0AAEA
9gL0AAEAPgP6AAEAIQL3AAEADgT6AAEA3AL6AAEA2wP6AAEAVQH6AAEAagL6AAEAfwL0AAEAmwL3
AAEACwL0AAEAbAH3AAEAwgH0AAEA9QP0AAEAUQL3AAEAwwP3AAEAqwH+AAEAVAMCAQEAOwL0AAEA
sAIKAQEAKAT3AAEAgAEOAQEAxgISAQEAbQMWAQEArwP3AAEAhQMaAQEA8QH3AAEAbAH3AAEA2wH0
AAEAlgH3AFAgAAAAAMYANQgGAAEAWCAAAAAAxgBACAYAAQBgIAAAAADGAFUPBgABALQjAAAAAIYY
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
WQAbKwAAAACGCHANdQFZACQrAAAAAIYIMQY7AVoALCsAAAAAhgg6BhAAWgA1KwAAAACGCKgLfwFb
AD0rAAAAAIYIsQuEAVsARisAAAAAhghWEVgBXABOKwAAAACGCGURAQBcAFcrAAAAAIYISQSKAV0A
XysAAAAAhghSBI8BXQBoKwAAAACGCLoLlQFeAHArAAAAAIYIwwuaAV4AeSsAAAAAhgj4DaABXwCB
KwAAAACGCAMOpQFfAIorAAAAAIYInw9YAWAAkisAAAAAhgimDwEAYACbKwAAAACGCG0PqwFhAKMr
AAAAAIYIdQ+wAWEArCsAAAAAhgiJBVgBYgC0KwAAAACGCJYFAQBiAL0rAAAAAIYIRwFYAWMAxSsA
AAAAhghOAQEAYwDOKwAAAACGCEkFOwFkANYrAAAAAIYIUgUQAGQA3ysAAAAAhghbBFgBZQDnKwAA
AACGCGMEAQBlAD8pAAAAAIYYxw0GAGYAAAABAEENAAACANYOAAADAN8MAAABAEwIAAABAEwIAAAB
AEwIAAABAEwIAAABAEwIAAABAEwIAAABAEwIAAABAEwIAAABAEwIAAABAEwIAAABAEwIAAABAEwI
AAABAEwIAAABAEwIAAABAEwIAAABAEwIAAABAEwIAAABAEwIAAABAEwIAAABAEwIAAABAEwIAAAB
AEwIAAABAEwIAAABAEwIAAABAEwIAAABAEwIAAABAEwIAAABAEwIAAABAEwIAAABAEwIAAABAEwI
AAABAEwIAAABAEwIAAABAEwIAAABAEwIAAABAEwIAAABAEwIAAABAEwIAAABAEwIAAABAEwIAAAB
AEwIAAABAEwIAAABAEwIAAABAEwIAAABAEwIAAABAEwIAAABAEwIAAABAEwIAAABAEwIAAABAEwI
AAABAEwIAAABAEwIAAABAEwIAAABAEwIAAABAEwIAAABAEwIAAABAE0PAAACANQNAAADACYPAAAE
AN8MAAABACIQAAABACIQAAABAEwIAAABAEwIAAABAEwIAAABAEwIAAABAEwIAAABAEwIAAABAEwI
AAABAEwIAAABAEwIAAABAEwIAAABAEwIAAABAEwIAAABAEwIAAABAEwIAAABAEwIAAABAEwIAAAB
AEwIAAABAEwIAAABAEwIAAABAEwIAAABAEwIAAABAEwIAAABAEwIAAABAEwIAAABAEwIAAABAEwI
AAABAEwIAAABAEwIAAABAEwIAAABAEwIAAABAEwIAAABAEwIAAABAEwIAAABAEwIAAABAEwIAAAB
AEwICQDHDQEAEQDHDQYAGQDHDQoAKQDHDRAAMQDHDRAAOQDHDRAAQQDHDRAASQDHDRAAUQDHDRAA
WQDHDRAAYQDHDRAAaQDHDQYAiQDHDQYAuQDHDQYA2QDHDRUAsQA1CAYAsQBACAYA6QB9Dy4A8QDH
DQYA8QCUCDQA6QCFBDkA+QDHDQYA+QBSCD8ADAC5DVIAFAAsEGIAFACCEGcAAQFnBgYAmQDHDWsA
mQBsC3UAmQBbCwEAEQHHDRAAmQDPEAYAmQDZDwYAmQDcD2cAsQDHDQYAsQCgAH8AsQDqDoYAgQDH
DQYAsQDADowAGQFjC5IAsQC6EJkAIQGLEJ8AOQEWBaYAOQH7EK8AwQDHDbUA4QDHDQYALgALAP0B
LgATAAYCLgAbACUCLgAjAC4CLgArAFcCLgAzAFcCLgA7AFcCLgBDAC4CLgBLAF0CLgBTAFcCLgBb
AHQCQwBjAL4C4wBzAL4CAQFrAL4CIQFrAL4CQQFrAL4CYQFrAL4CgQFrAL4CoQFrAL4CwQFrAL4C
4QFrAL4CAQJrAL4CIQJrAL4CQQJrAL4CYQJrAL4CgQJrAL4CoQJrAL4CwQJrAL4C4QJrAL4CAQNr
AL4CIQNrAL4CQQNrAL4CYQNrAL4CgQNrAL4CoQNrAL4CwQNrAL4C4QNrAL4CAQRrAL4CIQRrAL4C
QQRrAL4CYQRrAL4CgQRrAL4CoQRrAL4CwQRrAL4C4QRrAL4CAQVrAL4CIQVrAL4CQQVrAL4CYQVr
AL4CqQd7ACUCyQd7ACUCYAprAL4CgAprAL4CoAprAL4CwAprAL4CAAtrAL4CIAtrAL4CQAtrAL4C
YAtrAL4CgAtrAL4CoAtrAL4CwAtrAL4C4AtrAL4CIAxrAL4CQAxrAL4CYAxrAL4CgAxrAL4CoAxr
AL4CwAxrAL4C4AxrAL4CAA1rAL4CIA1rAL4CQA1rAL4CgA1rAL4CoA1rAL4CwA1rAL4C4A1rAL4C
IA5rAL4CQA5rAL4CgA5rAL4CoA5rAL4C4A5rAL4CAA9rAL4CIA9rAL4CQA9rAL4CYA9rAL4CgA9r
AL4CoA9rAL4CwA9rAL4C4A9rAL4CABBrAL4CIBBrAL4CQBBrAL4CgBBrAL4CoBBrAL4CwBBrAL4C
4BBrAL4CABFrAL4CIBFrAL4CQBFrAL4CYBFrAL4CgBFrAL4CoBFrAL4CwBFrAL4C4BFrAL4CABJr
AL4CIBJrAL4CQBJrAL4CYBJrAL4CgBJrAL4CoBJrAL4CwBJrAL4C4BJrAL4CABNrAL4CIBNrAL4C
QBNrAL4CYBNrAL4CgBNrAL4CoBNrAL4CwBNrAL4C4BNrAL4CGwB7AAMAAQAGADkABwA9AAgAPwAJ
AEAACgBCAAsARgAMAEsADQBNAA4ATgAPAE8AEABVAAAAgQC2AQAAXQm6AQAALAW+AQAAIgq6AQAA
yAS+AQAA+Am6AQAAugS+AQAA4wm6AQAAqgS+AQAAzAm6AQAAgAW2AQAANgq6AQAARwa2AQAAgQq6
AQAAvA+2AQAAIwu6AQAAsQS2AQAA0wm6AQAAjAC2AQAAbwm6AQAAjAu+AQAAwQq6AQAAggy+AQAA
7wq6AQAA6gu+AQAA2Aq6AQAAZADCAQAAMgm6AQAAxQW2AQAAXQq6AQAAJBHCAQAANQu6AQAAVADC
AQAAGwm6AQAAcQDCAQAARgm6AQAASxG2AQAASQu6AQAAFQHCAQAApwm6AQAAYgjCAQAArgq6AQAA
sAC+AQAAlQm6AQAAMg+2AQAADQu6AQAApwW+AQAASgq6AQAAmgC2AQAAhAm6AQAA1QS+AQAADAq6
AQAALAa+AQAAcQq6AQAAcwa2AQAAlAq6AQAA9BC+AQAAOQW+AQAAuwC+AQAAQQ++AQAATA3HAQAA
CAbMAQAA7A/RAQAAwQy+AQAAkA++AQAAUgG2AQAAtQu+AQAAqQy+AQAAAwy+AQAAGQ3CAQAA3wW2
AQAAPhHCAQAA3QvCAQAA5xDCAQAALQHCAQAAdgjCAQAAtgi+AQAA6wi2AQAAvAW+AQAAUgG2AQAA
8AS+AQAAGBG+AQAAXwa2AQAA0g+2AQAAfwTWAQAAdA3bAQAAPga+AQAAtQvkAQAAaRG2AQAAVgTp
AQAAxwvuAQAABw7zAQAAqg+2AQAAeQ/4AQAAmgW2AQAAUgG2AQAAVgW+AQAAZwS2AQEABgADAAEA
BwAFAAEACAAHAAEACQAJAAEACgALAAEACwANAAEADAAPAAEADQARAAEADgATAAEADwAVAAEAEAAX
AAEAEQAZAAEAEgAbAAEAEwAdAAEAFAAfAAEAFQAhAAEAFgAjAAEAFwAlAAEAGAAnAAEAGQApAAEA
GgArAAEAGwAtAAEAHAAvAAEAHQAxAAEAHgAzAAEAHwA1AAEAIAA3AAEAIQA5AAEAIgA7AAEAIwA9
AAEAJAA/AAEAJQBBAAEAJgBDAAEAJwBFAAEAKABHAAEAKQBJAAEAKgBLAAEAKwBNAAEALABPAAEA
LQBRAAEALgBTAAEALwBVAAEAMABXAAEAMQBZAAEAMgBbAAEAMwBdAAEANABfAAEANQBhAAEANgBj
AAEANwBlAAEAOABnAAEAOQBpAAEAOgBrAAEAOwBtAAEAPABvAAEAPQBxAAIASABzAAIASQB1AAIA
SgB3AAIASwB5AAIATQB7AAIATgB9AAEATwB9AAIAUAB/AAIAUwCBAAEAVACBAAIAVQCDAAEAVgCD
AAIAWACFAAEAWQCFAAIAWgCHAAEAWwCHAAIAXACJAAEAXQCJAAIAXgCLAAEAXwCLAAIAYQCNAAEA
YgCNAAIAYwCPAAEAZACPAAIAZQCRAAEAZgCRAAIAZwCTAAEAaACTAAIAaQCVAAEAagCVAAIAbACX
AAEAbQCXAAIAbgCZAAEAbwCZAAIAcQCbAAEAcgCbAAIAdACdAAEAdQCdAAIAdwCfAAEAeACfAAIA
eQChAAEAegChAAIAewCjAAEAfACjAAIAfQClAAEAfgClAAIAfwCnAAEAgACnAAIAgQCpAAEAggCp
AAIAhACrAAEAhQCrAAIAhgCtAAEAhwCtAAIAiACvAAEAiQCvAAIAigCxAAEAiwCxAAIAjACzAAEA
jQCzAAIAjgC1AAEAjwC1AAIAkAC3AAEAkQC3AAIAkgC5AAEAkwC5AAIAlAC7AAEAlQC7AAIAlgC9
AAEAlwC9AAIAmAC/AAEAmQC/AAIAmgDBAAEAmwDBAAIAnADDAAEAnQDDAAIAngDFAAEAnwDFAEsA
WwAEgAAAAQAAAAAAAAAAAAAAAADSAAAABAAAAAAAAAAAAAAAvQDJAAAAAAAOAAAAAAAAAAAAAADG
ADgQAAAAAA4AAAAAAAAAAAAAAMYAVRAAAAAABAAAAAAAAAAAAAAAvQB1CwAAAAAEAAAAAAAAAAAA
AADPAAQPAAAAAA4AAAAAAAAAAAAAAMYA6QwAAAAAAAAAAAEAAAA/DgAACQACAAoAAgALAAIADAAC
AA0AAgAOAAIADwACABAAAgAvAEYAAAAAAABJRFRTVmFyaWFibGUxMDAASURUU1ZhcmlhYmxlczEw
MABJRFRTRXZhbHVhdG9yQ29udGV4dDEwMABMaXN0YDEASW50MzIAPE1vZHVsZT4Ac2V0X1RlbXBN
aW5kZWdDAHNldF9UZW1wZGVnQwBzZXRfVGVtcE1heGRlZ0MAc2V0X0NpdGlJRABzZXRfV2VhdGhl
cklEAHNldF9TeXNJRABHZXRPdXRwdXRJRABzZXRfUmFpbjNIAGdldF9DdXJyZW50QVBJVVJMAG1z
Y29ybGliAFNDX2M3YTA2NWJiNmE2NDRjYzRiNjk1OWNkNmI0YzUzMDBjAFN5c3RlbS5Db2xsZWN0
aW9ucy5HZW5lcmljAHNldF9XaW5kU3BlZWQAZ2V0X3NwZWVkAHNldF9zcGVlZABNYXJrT3V0cHV0
c0ZpbmlzaGVkAGdldF9pZABzZXRfaWQAPHNwZWVkPmtfX0JhY2tpbmdGaWVsZAA8aWQ+a19fQmFj
a2luZ0ZpZWxkADx3aW5kPmtfX0JhY2tpbmdGaWVsZAA8Y29kPmtfX0JhY2tpbmdGaWVsZAA8Y29v
cmQ+a19fQmFja2luZ0ZpZWxkADxtZXNzYWdlPmtfX0JhY2tpbmdGaWVsZAA8bmFtZT5rX19CYWNr
aW5nRmllbGQAPHRpbWV6b25lPmtfX0JhY2tpbmdGaWVsZAA8dHlwZT5rX19CYWNraW5nRmllbGQA
PHByZXNzdXJlPmtfX0JhY2tpbmdGaWVsZAA8YmFzZT5rX19CYWNraW5nRmllbGQAPHN1bnJpc2U+
a19fQmFja2luZ0ZpZWxkADxkZWc+a19fQmFja2luZ0ZpZWxkADxSYWluVm9sXzNoPmtfX0JhY2tp
bmdGaWVsZAA8YWxsPmtfX0JhY2tpbmdGaWVsZAA8bWFpbj5rX19CYWNraW5nRmllbGQAPHJhaW4+
a19fQmFja2luZ0ZpZWxkADx0ZW1wX21pbj5rX19CYWNraW5nRmllbGQAPGljb24+a19fQmFja2lu
Z0ZpZWxkADxkZXNjcmlwdGlvbj5rX19CYWNraW5nRmllbGQAPGxvbj5rX19CYWNraW5nRmllbGQA
PHRlbXA+a19fQmFja2luZ0ZpZWxkADx3ZWF0aGVyPmtfX0JhY2tpbmdGaWVsZAA8Y2xvdWRzPmtf
X0JhY2tpbmdGaWVsZAA8c3lzPmtfX0JhY2tpbmdGaWVsZAA8bGF0PmtfX0JhY2tpbmdGaWVsZAA8
ZHQ+a19fQmFja2luZ0ZpZWxkADxzdW5zZXQ+a19fQmFja2luZ0ZpZWxkADx0ZW1wX21heD5rX19C
YWNraW5nRmllbGQAPGNvdW50cnk+a19fQmFja2luZ0ZpZWxkADxodW1pZGl0eT5rX19CYWNraW5n
RmllbGQAPHZpc2liaWxpdHk+a19fQmFja2luZ0ZpZWxkAFdpbmQAZ2V0X3dpbmQAc2V0X3dpbmQA
Z2V0X2NvZABzZXRfY29kAENvb3JkAGdldF9jb29yZABzZXRfY29vcmQAUmVwbGFjZQBkZWZhdWx0
SW5zdGFuY2UAc2V0X0NvZGUAc2V0X0NvdW50cnlDb2RlAHNldF9Mb25naXR1ZGUAc2V0X0xhdGl0
dWRlAHNldF9TeXNNZXNzYWdlAGdldF9tZXNzYWdlAHNldF9tZXNzYWdlAElEaXNwb3NhYmxlAFJ1
bnRpbWVUeXBlSGFuZGxlAEdldFR5cGVGcm9tSGFuZGxlAHNldF9DaXRpTmFtZQBnZXRfQ2l0aUNv
dW50cnlOYW1lAGdldF9uYW1lAHNldF9uYW1lAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRHRzLlBpcGVs
aW5lAHNldF9UaW1lWm9uZQBnZXRfdGltZXpvbmUAc2V0X3RpbWV6b25lAHNldF9TeXNUeXBlAGdl
dF90eXBlAHNldF90eXBlAHNldF9QcmVzc3VyZQBnZXRfcHJlc3N1cmUAc2V0X3ByZXNzdXJlAGdl
dF9DdWx0dXJlAHNldF9DdWx0dXJlAHJlc291cmNlQ3VsdHVyZQBzZXRfQmFzZQBBcHBsaWNhdGlv
blNldHRpbmdzQmFzZQBnZXRfYmFzZQBzZXRfYmFzZQBzZXRfU3VucmlzZQBnZXRfc3VucmlzZQBz
ZXRfc3VucmlzZQBEaXNwb3NlAHNldF9DYWxjdWxhdGVkRGF0ZQBFZGl0b3JCcm93c2FibGVTdGF0
ZQBDb21waWxlckdlbmVyYXRlZEF0dHJpYnV0ZQBEZWJ1Z2dlck5vblVzZXJDb2RlQXR0cmlidXRl
AERlYnVnZ2FibGVBdHRyaWJ1dGUARWRpdG9yQnJvd3NhYmxlQXR0cmlidXRlAEFzc2VtYmx5VGl0
bGVBdHRyaWJ1dGUAQXNzZW1ibHlUcmFkZW1hcmtBdHRyaWJ1dGUAVGFyZ2V0RnJhbWV3b3JrQXR0
cmlidXRlAEFzc2VtYmx5Q29uZmlndXJhdGlvbkF0dHJpYnV0ZQBBc3NlbWJseURlc2NyaXB0aW9u
QXR0cmlidXRlAENvbXBpbGF0aW9uUmVsYXhhdGlvbnNBdHRyaWJ1dGUAQXNzZW1ibHlQcm9kdWN0
QXR0cmlidXRlAEFzc2VtYmx5Q29weXJpZ2h0QXR0cmlidXRlAFNTSVNTY3JpcHRDb21wb25lbnRF
bnRyeVBvaW50QXR0cmlidXRlAEFzc2VtYmx5Q29tcGFueUF0dHJpYnV0ZQBSdW50aW1lQ29tcGF0
aWJpbGl0eUF0dHJpYnV0ZQBQcmVFeGVjdXRlAFBvc3RFeGVjdXRlAHZhbHVlAERlc2VyaWFsaXpl
AHNldF9XaW5kRGVnAGdldF9kZWcAc2V0X2RlZwBTeXN0ZW0uUnVudGltZS5WZXJzaW9uaW5nAERv
d25sb2FkU3RyaW5nAGdldF9SYWluVm9sXzNoAHNldF9SYWluVm9sXzNoAERlY2ltYWwAU3lzdGVt
LkNvbXBvbmVudE1vZGVsAGdldF9hbGwAc2V0X2FsbABTQ19jN2EwNjViYjZhNjQ0Y2M0YjY5NTlj
ZDZiNGM1MzAwYy5kbGwAc2V0X1RlbXBNaW5kZWdDX0lzTnVsbABzZXRfVGVtcGRlZ0NfSXNOdWxs
AHNldF9UZW1wTWF4ZGVnQ19Jc051bGwAc2V0X0NpdGlJRF9Jc051bGwAc2V0X1dlYXRoZXJJRF9J
c051bGwAc2V0X1N5c0lEX0lzTnVsbABzZXRfUmFpbjNIX0lzTnVsbABzZXRfV2luZFNwZWVkX0lz
TnVsbABzZXRfQ29kZV9Jc051bGwAc2V0X0NvdW50cnlDb2RlX0lzTnVsbABzZXRfTG9uZ2l0dWRl
X0lzTnVsbABzZXRfTGF0aXR1ZGVfSXNOdWxsAHNldF9TeXNNZXNzYWdlX0lzTnVsbABzZXRfQ2l0
aU5hbWVfSXNOdWxsAHNldF9UaW1lWm9uZV9Jc051bGwAc2V0X1N5c1R5cGVfSXNOdWxsAHNldF9Q
cmVzc3VyZV9Jc051bGwAc2V0X0Jhc2VfSXNOdWxsAHNldF9TdW5yaXNlX0lzTnVsbABzZXRfQ2Fs
Y3VsYXRlZERhdGVfSXNOdWxsAHNldF9XaW5kRGVnX0lzTnVsbABzZXRfV2VhdGhlck1haW5fSXNO
dWxsAHNldF9XZWF0aGVySWNvbl9Jc051bGwAc2V0X1dlYXRoZXJEZXNjcmlwdGlvbl9Jc051bGwA
c2V0X0Nsb3VkaW5lc3NfSXNOdWxsAHNldF9TdW5zZXRfSXNOdWxsAHNldF9IdW1pZGl0eV9Jc051
bGwAc2V0X1Zpc2liaWxpdHlfSXNOdWxsAFNldE51bGwAZ2V0X0l0ZW0Ac2V0X0l0ZW0AU3lzdGVt
AHJlc291cmNlTWFuAHNldF9XZWF0aGVyTWFpbgBTY3JpcHRNYWluAFJhaW4AZ2V0X21haW4Ac2V0
X21haW4AZ2V0X3JhaW4Ac2V0X3JhaW4AZ2V0X3RlbXBfbWluAHNldF90ZW1wX21pbgBzZXRfV2Vh
dGhlckljb24AZ2V0X2ljb24Ac2V0X2ljb24AU3lzdGVtLkNvbmZpZ3VyYXRpb24AU3lzdGVtLkds
b2JhbGl6YXRpb24AU3lzdGVtLldlYi5TY3JpcHQuU2VyaWFsaXphdGlvbgBTeXN0ZW0uUmVmbGVj
dGlvbgBJbnZhbGlkT3BlcmF0aW9uRXhjZXB0aW9uAHNldF9XZWF0aGVyRGVzY3JpcHRpb24AZ2V0
X2Rlc2NyaXB0aW9uAHNldF9kZXNjcmlwdGlvbgBnZXRfbG9uAHNldF9sb24AQ3VsdHVyZUluZm8A
T3V0cHV0TmFtZU1hcABPdXRwdXRNYXAATWljcm9zb2Z0LlNxbFNlcnZlci5EVFNSdW50aW1lV3Jh
cABnZXRfdGVtcABzZXRfdGVtcABPdXRwdXQwQnVmZmVyAFBpcGVsaW5lQnVmZmVyAFNjcmlwdEJ1
ZmZlcgBnZXRfUmVzb3VyY2VNYW5hZ2VyAFdlYXRoZXIAZ2V0X3dlYXRoZXIAc2V0X3dlYXRoZXIA
TWljcm9zb2Z0LlNxbFNlcnZlci5EdHMuUnVudGltZS5XcmFwcGVyAEphdmFTY3JpcHRTZXJpYWxp
emVyAEdldEVudW1lcmF0b3IALmN0b3IALmNjdG9yAE91dHB1dElEcwBTeXN0ZW0uRGlhZ25vc3Rp
Y3MAQ2xvdWRzAGdldF9jbG91ZHMAc2V0X2Nsb3VkcwBTeXN0ZW0uUnVudGltZS5Db21waWxlclNl
cnZpY2VzAFN5c3RlbS5SZXNvdXJjZXMAU0NfYzdhMDY1YmI2YTY0NGNjNGI2OTU5Y2Q2YjRjNTMw
MGMuUHJvcGVydGllcy5SZXNvdXJjZXMucmVzb3VyY2VzAERlYnVnZ2luZ01vZGVzAFNDX2M3YTA2
NWJiNmE2NDRjYzRiNjk1OWNkNmI0YzUzMDBjLlByb3BlcnRpZXMAZ2V0X1JlYWRPbmx5VmFyaWFi
bGVzAEJ1ZmZlckNvbHVtbkluZGV4ZXMAR2V0Q29sdW1uSW5kZXhlcwBTZXR0aW5ncwBTeXN0ZW0u
V2ViLkV4dGVuc2lvbnMAQ29ubmVjdGlvbnMAQnVmZmVycwBzZXRfQ2xvdWRpbmVzcwBnZXRfVW5p
dHMARmluaXNoT3V0cHV0cwBDcmVhdGVOZXdPdXRwdXRSb3dzAFN5cwBnZXRfc3lzAHNldF9zeXMA
Q29uY2F0AGdldF9sYXQAc2V0X2xhdABSb290T2JqZWN0AGdldF9kdABzZXRfZHQAU3lzdGVtLk5l
dABzZXRfU3Vuc2V0AGdldF9zdW5zZXQAc2V0X3N1bnNldABTZXRFbmRPZlJvd3NldABnZXRfRGVm
YXVsdABXZWJDbGllbnQAVXNlckNvbXBvbmVudABQYXJlbnRDb21wb25lbnQAU2NyaXB0Q29tcG9u
ZW50AGdldF9DdXJyZW50AE1pY3Jvc29mdC5TcWxTZXJ2ZXIuVHhTY3JpcHQATWljcm9zb2Z0LlNx
bFNlcnZlci5QaXBlbGluZUhvc3QAUHJpbWVPdXRwdXQATW92ZU5leHQAR2V0VmFsdWVXaXRoQ29u
dGV4dABTY3JpcHRDb21wb25lbnRFdmFsQ29udGV4dABnZXRfRXZhbHVhdG9yQ29udGV4dABBZGRS
b3cAZ2V0X3RlbXBfbWF4AHNldF90ZW1wX21heABnZXRfQVBJS2V5AGdldF9Bc3NlbWJseQBnZXRf
Y291bnRyeQBzZXRfY291bnRyeQBzZXRfSHVtaWRpdHkAZ2V0X2h1bWlkaXR5AHNldF9odW1pZGl0
eQBzZXRfVmlzaWJpbGl0eQBnZXRfdmlzaWJpbGl0eQBzZXRfdmlzaWJpbGl0eQAADyYAdQBuAGkA
dABzAD0AAA8mAGEAcABwAGkAZAA9AAALIgAzAGgAIgA6AAAbIgBSAGEAaQBuAFYAbwBsAF8AMwBo
ACIAOgAAgJtJAHMATgB1AGwAbAAgAHAAcgBvAHAAZQByAHQAeQAgAGMAYQBuAG4AbwB0ACAAYgBl
ACAAcwBlAHQAIAB0AG8AIABGAGEAbABzAGUALgAgAEEAcwBzAGkAZwBuACAAYQAgAHYAYQBsAHUA
ZQAgAHQAbwAgAHQAaABlACAAYwBvAGwAdQBtAG4AIABpAG4AcwB0AGUAYQBkAC4AABFPAHUAdABw
AHUAdAAgADAAAA1BAFAASQBLAGUAeQAAIUMAaQB0AGkAXwBDAG8AdQBuAHQAcgB5AE4AYQBtAGUA
ABtDAHUAcgByAGUAbgB0AEEAUABJAFUAUgBMAAALVQBuAGkAdABzAABxUwBDAF8AYwA3AGEAMAA2
ADUAYgBiADYAYQA2ADQANABjAGMANABiADYAOQA1ADkAYwBkADYAYgA0AGMANQAzADAAMABjAC4A
UAByAG8AcABlAHIAdABpAGUAcwAuAFIAZQBzAG8AdQByAGMAZQBzAAAAAGxnfbZkXKdEjwuFoYrZ
BsIABCABAQgDIAABBSABARERBCABAQ4FIAEBEWkSBwkODg4ODg4SQBURPQESKBIoBQABDh0OBCAB
Dg4FIAIODg4GMAEBHgAOBAoBEkAGFRI5ARIoCCAAFRE9ARMABhURPQESKAQgABMAAyAAAgkgAwES
UR0IElUFIAIBCBwDBwEIBgACCBJVDgUgAR0ICAUgABKAjQYgARKAkRwFAAASgJUGIAEcEoCZCAAB
EoCdEYChBSAAEoClByACAQ4SgKUIt3pcVhk04IkIiYRdzYCAzJEIMb84Vq02TjUDBhIUAwYSGAMG
EgwDBhJZAwYSYQMGEmUDBhIgAgYOAgYIAwYRSQMGEiQHBhUSOQESKAMGEiwDBhIwAwYSNAMGEjgD
BhI8BCABAQIFIAEBEUkLIAQBCB0IHRJRElUFIAEBElkDIAAOBAAAEmEEAAASZQUAAQESZQQAABIg
AwAAAQMgAAgEIAARSQQgABIkBSABARIkCCAAFRI5ARIoCSABARUSOQESKAQgABIsBSABARIsBCAA
EjAFIAEBEjAEIAASNAUgAQESNAQgABI4BSABARI4BCAAEjwFIAEBEjwDKAAIAygAAgMoAA4EKAAR
SQQIABJhBAgAEmUECAASIAQoABIkCCgAFRI5ARIoBCgAEiwEKAASMAQoABI0BCgAEjgEKAASPAgB
AAgAAAAAAB4BAAEAVAIWV3JhcE5vbkV4Y2VwdGlvblRocm93cwEIAQACAAAAAAAoAQAjU0NfYzdh
MDY1YmI2YTY0NGNjNGI2OTU5Y2Q2YjRjNTMwMGMAAAUBAAAAABYBABFDb3B5cmlnaHQgQCAgMjAx
OQAASQEAGi5ORVRGcmFtZXdvcmssVmVyc2lvbj12NC41AQBUDhRGcmFtZXdvcmtEaXNwbGF5TmFt
ZRIuTkVUIEZyYW1ld29yayA0LjUEAQAAAAC0AAAAzsrvvgEAAACRAAAAbFN5c3RlbS5SZXNvdXJj
ZXMuUmVzb3VyY2VSZWFkZXIsIG1zY29ybGliLCBWZXJzaW9uPTQuMC4wLjAsIEN1bHR1cmU9bmV1
dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3YTVjNTYxOTM0ZTA4OSNTeXN0ZW0uUmVzb3VyY2VzLlJ1
bnRpbWVSZXNvdXJjZVNldAIAAAAAAAAAAAAAAFBBRFBBRFC0AAAA/FsAAAAAAAAAAAAAFlwAAAAg
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAhcAAAAAAAAAAAAAAAAX0NvckRsbE1haW4AbXNjb3JlZS5k
bGwAAAAAAP8lACAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAQAAAAGAAAgAAAAAAAAAAA
AAAAAAAAAQABAAAAMAAAgAAAAAAAAAAAAAAAAAAAAQAAAAAASAAAAFhgAADsAwAAAAAAAAAAAADs
AzQAAABWAFMAXwBWAEUAUgBTAEkATwBOAF8ASQBOAEYATwAAAAAAvQTv/gAAAQAAAAEAAAAAAAAA
AQAAAAAAPwAAAAAAAAAEAAAAAgAAAAAAAAAAAAAAAAAAAEQAAAABAFYAYQByAEYAaQBsAGUASQBu
AGYAbwAAAAAAJAAEAAAAVAByAGEAbgBzAGwAYQB0AGkAbwBuAAAAAAAAALAETAMAAAEAUwB0AHIA
aQBuAGcARgBpAGwAZQBJAG4AZgBvAAAAKAMAAAEAMAAwADAAMAAwADQAYgAwAAAAGgABAAEAQwBv
AG0AbQBlAG4AdABzAAAAAAAAACIAAQABAEMAbwBtAHAAYQBuAHkATgBhAG0AZQAAAAAAAAAAAHAA
JAABAEYAaQBsAGUARABlAHMAYwByAGkAcAB0AGkAbwBuAAAAAABTAEMAXwBjADcAYQAwADYANQBi
AGIANgBhADYANAA0AGMAYwA0AGIANgA5ADUAOQBjAGQANgBiADQAYwA1ADMAMAAwAGMAAAAwAAgA
AQBGAGkAbABlAFYAZQByAHMAaQBvAG4AAAAAADEALgAwAC4AMAAuADAAAABwACgAAQBJAG4AdABl
AHIAbgBhAGwATgBhAG0AZQAAAFMAQwBfAGMANwBhADAANgA1AGIAYgA2AGEANgA0ADQAYwBjADQA
YgA2ADkANQA5AGMAZAA2AGIANABjADUAMwAwADAAYwAuAGQAbABsAAAASAASAAEATABlAGcAYQBs
AEMAbwBwAHkAcgBpAGcAaAB0AAAAQwBvAHAAeQByAGkAZwBoAHQAIABAACAAIAAyADAAMQA5AAAA
KgABAAEATABlAGcAYQBsAFQAcgBhAGQAZQBtAGEAcgBrAHMAAAAAAAAAAAB4ACgAAQBPAHIAaQBn
AGkAbgBhAGwARgBpAGwAZQBuAGEAbQBlAAAAUwBDAF8AYwA3AGEAMAA2ADUAYgBiADYAYQA2ADQA
NABjAGMANABiADYAOQA1ADkAYwBkADYAYgA0AGMANQAzADAAMABjAC4AZABsAGwAAABoACQAAQBQ
AHIAbwBkAHUAYwB0AE4AYQBtAGUAAAAAAFMAQwBfAGMANwBhADAANgA1AGIAYgA2AGEANgA0ADQA
YwBjADQAYgA2ADkANQA5AGMAZAA2AGIANABjADUAMwAwADAAYwAAADQACAABAFAAcgBvAGQAdQBj
AHQAVgBlAHIAcwBpAG8AbgAAADEALgAwAC4AMAAuADAAAAA4AAgAAQBBAHMAcwBlAG0AYgBsAHkA
IABWAGUAcgBzAGkAbwBuAAAAMQAuADAALgAwAC4AMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAABQAAAMAAAAKDwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAA]]></arrayElement>
                      </arrayElements>
                    </property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the Microsoft Visual Studio Tools for Applications project. Project names must be unique within a package."
                      name="VSTAProjectName"
                      typeConverter="NOTBROWSABLE">SC_c7a065bb6a644cc4b6959cd6b4c5300c</property>
                    <property
                      dataType="System.String"
                      description="Specifies the programming language used by the script."
                      name="ScriptLanguage"
                      typeConverter="Microsoft.SqlServer.VSTAHosting.ScriptingLanguages">CSharp</property>
                    <property
                      dataType="System.String"
                      description="Specifies a comma-separated list of read-only variables."
                      name="ReadOnlyVariables"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIVariablePickerDlg">User::Citi_CountryName,User::CurrentAPIURL,$Project::APIKey,$Project::Units</property>
                    <property
                      dataType="System.String"
                      description="Specifies a comma-separated list of read/write variables."
                      name="ReadWriteVariables"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIWriteableVariablePickerDlg"></property>
                    <property
                      dataType="System.String"
                      description="List of breakpoints present on the script."
                      isArray="true"
                      name="BreakpointCollection"
                      typeConverter="NOTBROWSABLE">
                      <arrayElements
                        arrayElementCount="0" />
                    </property>
                    <property
                      dataType="System.String"
                      description="Checksum to match component metedata against compiled codes."
                      name="MetadataChecksum140"
                      typeConverter="NOTBROWSABLE">D7</property>
                    <property
                      dataType="System.String"
                      name="UserComponentTypeName">Microsoft.ScriptComponentHost</property>
                  </properties>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop  - Loop through Cities\DFT - Extract Load Current Data\SCR - Extract Current Data from OWM API.Outputs[Output 0]"
                      hasSideEffects="true"
                      name="Output 0">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop  - Loop through Cities\DFT - Extract Load Current Data\SCR - Extract Current Data from OWM API.Outputs[Output 0].Columns[CitiID]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop  - Loop through Cities\DFT - Extract Load Current Data\SCR - Extract Current Data from OWM API.Outputs[Output 0].Columns[CitiID]"
                          name="CitiID" />
                        <outputColumn
                          refId="Package\Foreach Loop  - Loop through Cities\DFT - Extract Load Current Data\SCR - Extract Current Data from OWM API.Outputs[Output 0].Columns[CitiName]"
                          dataType="wstr"
                          length="60"
                          lineageId="Package\Foreach Loop  - Loop through Cities\DFT - Extract Load Current Data\SCR - Extract Current Data from OWM API.Outputs[Output 0].Columns[CitiName]"
                          name="CitiName" />
                        <outputColumn
                          refId="Package\Foreach Loop  - Loop through Cities\DFT - Extract Load Current Data\SCR - Extract Current Data from OWM API.Outputs[Output 0].Columns[Latitude]"
                          dataType="wstr"
                          length="16"
                          lineageId="Package\Foreach Loop  - Loop through Cities\DFT - Extract Load Current Data\SCR - Extract Current Data from OWM API.Outputs[Output 0].Columns[Latitude]"
                          name="Latitude" />
                        <outputColumn
                          refId="Package\Foreach Loop  - Loop through Cities\DFT - Extract Load Current Data\SCR - Extract Current Data from OWM API.Outputs[Output 0].Columns[Longitude]"
                          dataType="wstr"
                          length="16"
                          lineageId="Package\Foreach Loop  - Loop through Cities\DFT - Extract Load Current Data\SCR - Extract Current Data from OWM API.Outputs[Output 0].Columns[Longitude]"
                          name="Longitude" />
                        <outputColumn
                          refId="Package\Foreach Loop  - Loop through Cities\DFT - Extract Load Current Data\SCR - Extract Current Data from OWM API.Outputs[Output 0].Columns[CountryCode]"
                          dataType="wstr"
                          length="2"
                          lineageId="Package\Foreach Loop  - Loop through Cities\DFT - Extract Load Current Data\SCR - Extract Current Data from OWM API.Outputs[Output 0].Columns[CountryCode]"
                          name="CountryCode" />
                        <outputColumn
                          refId="Package\Foreach Loop  - Loop through Cities\DFT - Extract Load Current Data\SCR - Extract Current Data from OWM API.Outputs[Output 0].Columns[TimeZone]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop  - Loop through Cities\DFT - Extract Load Current Data\SCR - Extract Current Data from OWM API.Outputs[Output 0].Columns[TimeZone]"
                          name="TimeZone" />
                        <outputColumn
                          refId="Package\Foreach Loop  - Loop through Cities\DFT - Extract Load Current Data\SCR - Extract Current Data from OWM API.Outputs[Output 0].Columns[Sunrise]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop  - Loop through Cities\DFT - Extract Load Current Data\SCR - Extract Current Data from OWM API.Outputs[Output 0].Columns[Sunrise]"
                          name="Sunrise" />
                        <outputColumn
                          refId="Package\Foreach Loop  - Loop through Cities\DFT - Extract Load Current Data\SCR - Extract Current Data from OWM API.Outputs[Output 0].Columns[Sunset]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop  - Loop through Cities\DFT - Extract Load Current Data\SCR - Extract Current Data from OWM API.Outputs[Output 0].Columns[Sunset]"
                          name="Sunset" />
                        <outputColumn
                          refId="Package\Foreach Loop  - Loop through Cities\DFT - Extract Load Current Data\SCR - Extract Current Data from OWM API.Outputs[Output 0].Columns[Code]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop  - Loop through Cities\DFT - Extract Load Current Data\SCR - Extract Current Data from OWM API.Outputs[Output 0].Columns[Code]"
                          name="Code" />
                        <outputColumn
                          refId="Package\Foreach Loop  - Loop through Cities\DFT - Extract Load Current Data\SCR - Extract Current Data from OWM API.Outputs[Output 0].Columns[WeatherID]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop  - Loop through Cities\DFT - Extract Load Current Data\SCR - Extract Current Data from OWM API.Outputs[Output 0].Columns[WeatherID]"
                          name="WeatherID" />
                        <outputColumn
                          refId="Package\Foreach Loop  - Loop through Cities\DFT - Extract Load Current Data\SCR - Extract Current Data from OWM API.Outputs[Output 0].Columns[WeatherMain]"
                          dataType="wstr"
                          length="60"
                          lineageId="Package\Foreach Loop  - Loop through Cities\DFT - Extract Load Current Data\SCR - Extract Current Data from OWM API.Outputs[Output 0].Columns[WeatherMain]"
                          name="WeatherMain" />
                        <outputColumn
                          refId="Package\Foreach Loop  - Loop through Cities\DFT - Extract Load Current Data\SCR - Extract Current Data from OWM API.Outputs[Output 0].Columns[WeatherDescription]"
                          dataType="wstr"
                          length="100"
                          lineageId="Package\Foreach Loop  - Loop through Cities\DFT - Extract Load Current Data\SCR - Extract Current Data from OWM API.Outputs[Output 0].Columns[WeatherDescription]"
                          name="WeatherDescription" />
                        <outputColumn
                          refId="Package\Foreach Loop  - Loop through Cities\DFT - Extract Load Current Data\SCR - Extract Current Data from OWM API.Outputs[Output 0].Columns[WeatherIcon]"
                          dataType="wstr"
                          length="10"
                          lineageId="Package\Foreach Loop  - Loop through Cities\DFT - Extract Load Current Data\SCR - Extract Current Data from OWM API.Outputs[Output 0].Columns[WeatherIcon]"
                          name="WeatherIcon" />
                        <outputColumn
                          refId="Package\Foreach Loop  - Loop through Cities\DFT - Extract Load Current Data\SCR - Extract Current Data from OWM API.Outputs[Output 0].Columns[Temp_degC]"
                          dataType="decimal"
                          lineageId="Package\Foreach Loop  - Loop through Cities\DFT - Extract Load Current Data\SCR - Extract Current Data from OWM API.Outputs[Output 0].Columns[Temp_degC]"
                          name="Temp_degC" />
                        <outputColumn
                          refId="Package\Foreach Loop  - Loop through Cities\DFT - Extract Load Current Data\SCR - Extract Current Data from OWM API.Outputs[Output 0].Columns[Pressure]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop  - Loop through Cities\DFT - Extract Load Current Data\SCR - Extract Current Data from OWM API.Outputs[Output 0].Columns[Pressure]"
                          name="Pressure" />
                        <outputColumn
                          refId="Package\Foreach Loop  - Loop through Cities\DFT - Extract Load Current Data\SCR - Extract Current Data from OWM API.Outputs[Output 0].Columns[Humidity]"
                          dataType="decimal"
                          lineageId="Package\Foreach Loop  - Loop through Cities\DFT - Extract Load Current Data\SCR - Extract Current Data from OWM API.Outputs[Output 0].Columns[Humidity]"
                          name="Humidity" />
                        <outputColumn
                          refId="Package\Foreach Loop  - Loop through Cities\DFT - Extract Load Current Data\SCR - Extract Current Data from OWM API.Outputs[Output 0].Columns[TempMin_degC]"
                          dataType="decimal"
                          lineageId="Package\Foreach Loop  - Loop through Cities\DFT - Extract Load Current Data\SCR - Extract Current Data from OWM API.Outputs[Output 0].Columns[TempMin_degC]"
                          name="TempMin_degC" />
                        <outputColumn
                          refId="Package\Foreach Loop  - Loop through Cities\DFT - Extract Load Current Data\SCR - Extract Current Data from OWM API.Outputs[Output 0].Columns[TempMax_degC]"
                          dataType="decimal"
                          lineageId="Package\Foreach Loop  - Loop through Cities\DFT - Extract Load Current Data\SCR - Extract Current Data from OWM API.Outputs[Output 0].Columns[TempMax_degC]"
                          name="TempMax_degC" />
                        <outputColumn
                          refId="Package\Foreach Loop  - Loop through Cities\DFT - Extract Load Current Data\SCR - Extract Current Data from OWM API.Outputs[Output 0].Columns[Visibility]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop  - Loop through Cities\DFT - Extract Load Current Data\SCR - Extract Current Data from OWM API.Outputs[Output 0].Columns[Visibility]"
                          name="Visibility" />
                        <outputColumn
                          refId="Package\Foreach Loop  - Loop through Cities\DFT - Extract Load Current Data\SCR - Extract Current Data from OWM API.Outputs[Output 0].Columns[WindSpeed]"
                          dataType="decimal"
                          lineageId="Package\Foreach Loop  - Loop through Cities\DFT - Extract Load Current Data\SCR - Extract Current Data from OWM API.Outputs[Output 0].Columns[WindSpeed]"
                          name="WindSpeed" />
                        <outputColumn
                          refId="Package\Foreach Loop  - Loop through Cities\DFT - Extract Load Current Data\SCR - Extract Current Data from OWM API.Outputs[Output 0].Columns[WindDeg]"
                          dataType="decimal"
                          lineageId="Package\Foreach Loop  - Loop through Cities\DFT - Extract Load Current Data\SCR - Extract Current Data from OWM API.Outputs[Output 0].Columns[WindDeg]"
                          name="WindDeg" />
                        <outputColumn
                          refId="Package\Foreach Loop  - Loop through Cities\DFT - Extract Load Current Data\SCR - Extract Current Data from OWM API.Outputs[Output 0].Columns[Rain3H]"
                          dataType="wstr"
                          length="10"
                          lineageId="Package\Foreach Loop  - Loop through Cities\DFT - Extract Load Current Data\SCR - Extract Current Data from OWM API.Outputs[Output 0].Columns[Rain3H]"
                          name="Rain3H" />
                        <outputColumn
                          refId="Package\Foreach Loop  - Loop through Cities\DFT - Extract Load Current Data\SCR - Extract Current Data from OWM API.Outputs[Output 0].Columns[Cloudiness]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop  - Loop through Cities\DFT - Extract Load Current Data\SCR - Extract Current Data from OWM API.Outputs[Output 0].Columns[Cloudiness]"
                          name="Cloudiness" />
                        <outputColumn
                          refId="Package\Foreach Loop  - Loop through Cities\DFT - Extract Load Current Data\SCR - Extract Current Data from OWM API.Outputs[Output 0].Columns[SysType]"
                          dataType="wstr"
                          length="10"
                          lineageId="Package\Foreach Loop  - Loop through Cities\DFT - Extract Load Current Data\SCR - Extract Current Data from OWM API.Outputs[Output 0].Columns[SysType]"
                          name="SysType" />
                        <outputColumn
                          refId="Package\Foreach Loop  - Loop through Cities\DFT - Extract Load Current Data\SCR - Extract Current Data from OWM API.Outputs[Output 0].Columns[SysID]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop  - Loop through Cities\DFT - Extract Load Current Data\SCR - Extract Current Data from OWM API.Outputs[Output 0].Columns[SysID]"
                          name="SysID" />
                        <outputColumn
                          refId="Package\Foreach Loop  - Loop through Cities\DFT - Extract Load Current Data\SCR - Extract Current Data from OWM API.Outputs[Output 0].Columns[SysMessage]"
                          dataType="wstr"
                          length="60"
                          lineageId="Package\Foreach Loop  - Loop through Cities\DFT - Extract Load Current Data\SCR - Extract Current Data from OWM API.Outputs[Output 0].Columns[SysMessage]"
                          name="SysMessage" />
                        <outputColumn
                          refId="Package\Foreach Loop  - Loop through Cities\DFT - Extract Load Current Data\SCR - Extract Current Data from OWM API.Outputs[Output 0].Columns[Base]"
                          dataType="wstr"
                          length="16"
                          lineageId="Package\Foreach Loop  - Loop through Cities\DFT - Extract Load Current Data\SCR - Extract Current Data from OWM API.Outputs[Output 0].Columns[Base]"
                          name="Base" />
                        <outputColumn
                          refId="Package\Foreach Loop  - Loop through Cities\DFT - Extract Load Current Data\SCR - Extract Current Data from OWM API.Outputs[Output 0].Columns[CalculatedDate]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop  - Loop through Cities\DFT - Extract Load Current Data\SCR - Extract Current Data from OWM API.Outputs[Output 0].Columns[CalculatedDate]"
                          name="CalculatedDate" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
              </components>
              <paths>
                <path
                  refId="Package\Foreach Loop  - Loop through Cities\DFT - Extract Load Current Data.Paths[Output 0]"
                  endId="Package\Foreach Loop  - Loop through Cities\DFT - Extract Load Current Data\OLEDB_Dest - Load Stagging_CurrentData.Inputs[OLE DB Destination Input]"
                  name="Output 0"
                  startId="Package\Foreach Loop  - Loop through Cities\DFT - Extract Load Current Data\SCR - Extract Current Data from OWM API.Outputs[Output 0]" />
              </paths>
            </pipeline>
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
      <DTS:ForEachVariableMappings>
        <DTS:ForEachVariableMapping
          DTS:CreationName=""
          DTS:DTSID="{15060C36-63C4-483F-BF15-D741E613DD08}"
          DTS:ObjectName="{15060C36-63C4-483F-BF15-D741E613DD08}"
          DTS:ValueIndex="0"
          DTS:VariableName="User::Citi_CountryName" />
      </DTS:ForEachVariableMappings>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\SQL - Get Citi Name and Country from DIM_Cities"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{AD6180BC-89DA-4F9F-A293-8069556979F6}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="SQL - Get Citi Name and Country from DIM_Cities"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{2F0B9ABE-B0F6-4174-9360-6F341960A908}"
          SQLTask:SqlStatementSource="SELECT CONCAT(CitiName,',',CountryCode) FROM [WeatherDWH].[DIM].[Cities]"
          SQLTask:ResultType="ResultSetType_Rowset" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
          <SQLTask:ResultBinding
            SQLTask:ResultName="0"
            SQLTask:DtsVariableName="User::City_CountryList" />
        </SQLTask:SqlTaskData>
      </DTS:ObjectData>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:PrecedenceConstraints>
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint]"
      DTS:CreationName=""
      DTS:DTSID="{EE5FF11D-C3CC-4DBB-9785-9CFAE496ADF5}"
      DTS:From="Package\SQL - Get Citi Name and Country from DIM_Cities"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint"
      DTS:To="Package\Foreach Loop  - Loop through Cities" />
  </DTS:PrecedenceConstraints>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--This CDATA section contains the layout information of the package. The section includes information such as (x,y) coordinates, width, and height.-->
<!--If you manually edit this section and make a mistake, you can delete it. -->
<!--The package will still be able to load normally but the previous layout information will be lost and the designer will automatically re-arrange the elements on the design surface.-->
<Objects
  Version="8">
  <!--Each node below will contain properties that do not affect runtime behavior.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml">
        <NodeLayout
          Size="231,42"
          Id="Package\Foreach Loop  - Loop through Cities\DFT - Extract Load Current Data"
          TopLeft="35,19" />
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="292,116"
          Size="292,159"
          Id="Package\Foreach Loop  - Loop through Cities"
          TopLeft="279,168" />
        <NodeLayout
          Size="314,42"
          Id="Package\SQL - Get Citi Name and Country from DIM_Cities"
          TopLeft="283,61" />
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint]"
          TopLeft="440,103">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-15,65"
              Start="0,0"
              End="-15,57.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,28.5" />
                  <mssgle:CubicBezierSegment
                    Point1="0,28.5"
                    Point2="0,32.5"
                    Point3="-4,32.5" />
                  <mssgle:LineSegment
                    End="-11,32.5" />
                  <mssgle:CubicBezierSegment
                    Point1="-11,32.5"
                    Point2="-15,32.5"
                    Point3="-15,36.5" />
                  <mssgle:LineSegment
                    End="-15,57.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </Package>
  <TaskHost
    design-time-name="Package\Foreach Loop  - Loop through Cities\DFT - Extract Load Current Data">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml">
        <NodeLayout
          Size="279,42"
          Id="Package\Foreach Loop  - Loop through Cities\DFT - Extract Load Current Data\SCR - Extract Current Data from OWM API"
          TopLeft="327,90" />
        <NodeLayout
          Size="279,42"
          Id="Package\Foreach Loop  - Loop through Cities\DFT - Extract Load Current Data\OLEDB_Dest - Load Stagging_CurrentData"
          TopLeft="332,250" />
        <EdgeLayout
          Id="Package\Foreach Loop  - Loop through Cities\DFT - Extract Load Current Data.Paths[Output 0]"
          TopLeft="469,132">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,118"
              Start="0,0"
              End="0,110.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,110.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\Foreach Loop  - Loop through Cities\DFT - Extract Load Current Data\OLEDB_Dest - Load Stagging_CurrentData">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>