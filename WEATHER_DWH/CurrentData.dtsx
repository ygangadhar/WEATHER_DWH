<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="10/5/2019 8:28:02 AM"
  DTS:CreationName="Microsoft.Package"
  DTS:CreatorComputerName="MYLAPTOP"
  DTS:CreatorName="MYLAPTOP\ygang"
  DTS:DTSID="{EE773500-1A54-4F62-A474-852D7ABE4FD2}"
  DTS:ExecutableType="Microsoft.Package"
  DTS:LastModifiedProductVersion="15.0.1301.433"
  DTS:LocaleID="16393"
  DTS:ObjectName="CurrentData"
  DTS:PackageType="5"
  DTS:VersionBuild="46"
  DTS:VersionGUID="{4E5AB6EE-6FAF-446C-8F1B-589DDB738767}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">8</DTS:Property>
  <DTS:Variables>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{B40A237B-F161-45FE-B68B-9A7AF465CCC3}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="CitiIDsList">
      <DTS:VariableValue
        DTS:DataType="8">2644605,2650497,2650629,2657789,4608147,7299942</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{B5CFB3B8-4843-4737-8BC1-51465BA48561}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="Current_URL">
      <DTS:VariableValue
        DTS:DataType="8">https://api.openweathermap.org/data/2.5/group?id=</DTS:VariableValue>
    </DTS:Variable>
  </DTS:Variables>
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\DFT - Load Current Data"
      DTS:CreationName="Microsoft.Pipeline"
      DTS:Description="Data Flow Task"
      DTS:DTSID="{6FA6FFA0-EA34-4F3D-BD8C-DD7F39B4907C}"
      DTS:ExecutableType="Microsoft.Pipeline"
      DTS:LocaleID="-1"
      DTS:ObjectName="DFT - Load Current Data"
      DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
      <DTS:Variables />
      <DTS:ObjectData>
        <pipeline
          version="1">
          <components>
            <component
              refId="Package\DFT - Load Current Data\OLEDB_Dest - Load Stagging_CurrentData"
              componentClassID="Microsoft.OLEDBDestination"
              contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
              description="OLE DB Destination"
              name="OLEDB_Dest - Load Stagging_CurrentData"
              usesDispositions="true"
              version="4">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset">[Staging].[CurrentData]</property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Forces the use of the DefaultCodePage property value when describing character data."
                  name="AlwaysUseDefaultCodePage">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">3</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepIdentity">false</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepNulls">false</property>
                <property
                  dataType="System.String"
                  description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                  name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS</property>
                <property
                  dataType="System.Int32"
                  description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                  name="FastLoadMaxInsertCommitSize">2147483647</property>
              </properties>
              <connections>
                <connection
                  refId="Package\DFT - Load Current Data\OLEDB_Dest - Load Stagging_CurrentData.Connections[OleDbConnection]"
                  connectionManagerID="{2F0B9ABE-B0F6-4174-9360-6F341960A908}:external"
                  connectionManagerRefId="Project.ConnectionManagers[WeatherDWH_DBConnection]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\DFT - Load Current Data\OLEDB_Dest - Load Stagging_CurrentData.Inputs[OLE DB Destination Input]"
                  errorOrTruncationOperation="Insert"
                  errorRowDisposition="FailComponent"
                  hasSideEffects="true"
                  name="OLE DB Destination Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\DFT - Load Current Data\OLEDB_Dest - Load Stagging_CurrentData.Inputs[OLE DB Destination Input].Columns[Latitude]"
                      cachedDataType="wstr"
                      cachedLength="16"
                      cachedName="Latitude"
                      externalMetadataColumnId="Package\DFT - Load Current Data\OLEDB_Dest - Load Stagging_CurrentData.Inputs[OLE DB Destination Input].ExternalColumns[Latitude]"
                      lineageId="Package\DFT - Load Current Data\SCR - Extract Current Data from OWM API.Outputs[Output 0].Columns[Latitude]" />
                    <inputColumn
                      refId="Package\DFT - Load Current Data\OLEDB_Dest - Load Stagging_CurrentData.Inputs[OLE DB Destination Input].Columns[Longitude]"
                      cachedDataType="wstr"
                      cachedLength="16"
                      cachedName="Longitude"
                      externalMetadataColumnId="Package\DFT - Load Current Data\OLEDB_Dest - Load Stagging_CurrentData.Inputs[OLE DB Destination Input].ExternalColumns[Longitude]"
                      lineageId="Package\DFT - Load Current Data\SCR - Extract Current Data from OWM API.Outputs[Output 0].Columns[Longitude]" />
                    <inputColumn
                      refId="Package\DFT - Load Current Data\OLEDB_Dest - Load Stagging_CurrentData.Inputs[OLE DB Destination Input].Columns[CountryCode]"
                      cachedDataType="wstr"
                      cachedLength="2"
                      cachedName="CountryCode"
                      externalMetadataColumnId="Package\DFT - Load Current Data\OLEDB_Dest - Load Stagging_CurrentData.Inputs[OLE DB Destination Input].ExternalColumns[CountryCode]"
                      lineageId="Package\DFT - Load Current Data\SCR - Extract Current Data from OWM API.Outputs[Output 0].Columns[CountryCode]" />
                    <inputColumn
                      refId="Package\DFT - Load Current Data\OLEDB_Dest - Load Stagging_CurrentData.Inputs[OLE DB Destination Input].Columns[TimeZone]"
                      cachedDataType="wstr"
                      cachedLength="16"
                      cachedName="TimeZone"
                      externalMetadataColumnId="Package\DFT - Load Current Data\OLEDB_Dest - Load Stagging_CurrentData.Inputs[OLE DB Destination Input].ExternalColumns[TimeZone]"
                      lineageId="Package\DFT - Load Current Data\SCR - Extract Current Data from OWM API.Outputs[Output 0].Columns[TimeZone]" />
                    <inputColumn
                      refId="Package\DFT - Load Current Data\OLEDB_Dest - Load Stagging_CurrentData.Inputs[OLE DB Destination Input].Columns[Sunrise]"
                      cachedDataType="wstr"
                      cachedLength="12"
                      cachedName="Sunrise"
                      externalMetadataColumnId="Package\DFT - Load Current Data\OLEDB_Dest - Load Stagging_CurrentData.Inputs[OLE DB Destination Input].ExternalColumns[Sunrise]"
                      lineageId="Package\DFT - Load Current Data\SCR - Extract Current Data from OWM API.Outputs[Output 0].Columns[Sunrise]" />
                    <inputColumn
                      refId="Package\DFT - Load Current Data\OLEDB_Dest - Load Stagging_CurrentData.Inputs[OLE DB Destination Input].Columns[Sunset]"
                      cachedDataType="wstr"
                      cachedLength="12"
                      cachedName="Sunset"
                      externalMetadataColumnId="Package\DFT - Load Current Data\OLEDB_Dest - Load Stagging_CurrentData.Inputs[OLE DB Destination Input].ExternalColumns[Sunset]"
                      lineageId="Package\DFT - Load Current Data\SCR - Extract Current Data from OWM API.Outputs[Output 0].Columns[Sunset]" />
                    <inputColumn
                      refId="Package\DFT - Load Current Data\OLEDB_Dest - Load Stagging_CurrentData.Inputs[OLE DB Destination Input].Columns[Cnt]"
                      cachedDataType="i4"
                      cachedName="Cnt"
                      externalMetadataColumnId="Package\DFT - Load Current Data\OLEDB_Dest - Load Stagging_CurrentData.Inputs[OLE DB Destination Input].ExternalColumns[Cnt]"
                      lineageId="Package\DFT - Load Current Data\SCR - Extract Current Data from OWM API.Outputs[Output 0].Columns[Cnt]" />
                    <inputColumn
                      refId="Package\DFT - Load Current Data\OLEDB_Dest - Load Stagging_CurrentData.Inputs[OLE DB Destination Input].Columns[WeatherID]"
                      cachedDataType="i4"
                      cachedName="WeatherID"
                      externalMetadataColumnId="Package\DFT - Load Current Data\OLEDB_Dest - Load Stagging_CurrentData.Inputs[OLE DB Destination Input].ExternalColumns[WeatherID]"
                      lineageId="Package\DFT - Load Current Data\SCR - Extract Current Data from OWM API.Outputs[Output 0].Columns[WeatherID]" />
                    <inputColumn
                      refId="Package\DFT - Load Current Data\OLEDB_Dest - Load Stagging_CurrentData.Inputs[OLE DB Destination Input].Columns[WeatherMain]"
                      cachedDataType="wstr"
                      cachedLength="60"
                      cachedName="WeatherMain"
                      externalMetadataColumnId="Package\DFT - Load Current Data\OLEDB_Dest - Load Stagging_CurrentData.Inputs[OLE DB Destination Input].ExternalColumns[WeatherMain]"
                      lineageId="Package\DFT - Load Current Data\SCR - Extract Current Data from OWM API.Outputs[Output 0].Columns[WeatherMain]" />
                    <inputColumn
                      refId="Package\DFT - Load Current Data\OLEDB_Dest - Load Stagging_CurrentData.Inputs[OLE DB Destination Input].Columns[WeatherIcon]"
                      cachedDataType="wstr"
                      cachedLength="10"
                      cachedName="WeatherIcon"
                      externalMetadataColumnId="Package\DFT - Load Current Data\OLEDB_Dest - Load Stagging_CurrentData.Inputs[OLE DB Destination Input].ExternalColumns[WeatherIcon]"
                      lineageId="Package\DFT - Load Current Data\SCR - Extract Current Data from OWM API.Outputs[Output 0].Columns[WeatherIcon]" />
                    <inputColumn
                      refId="Package\DFT - Load Current Data\OLEDB_Dest - Load Stagging_CurrentData.Inputs[OLE DB Destination Input].Columns[Pressure]"
                      cachedDataType="i4"
                      cachedName="Pressure"
                      externalMetadataColumnId="Package\DFT - Load Current Data\OLEDB_Dest - Load Stagging_CurrentData.Inputs[OLE DB Destination Input].ExternalColumns[Pressure]"
                      lineageId="Package\DFT - Load Current Data\SCR - Extract Current Data from OWM API.Outputs[Output 0].Columns[Pressure]" />
                    <inputColumn
                      refId="Package\DFT - Load Current Data\OLEDB_Dest - Load Stagging_CurrentData.Inputs[OLE DB Destination Input].Columns[Humidity]"
                      cachedDataType="i4"
                      cachedName="Humidity"
                      externalMetadataColumnId="Package\DFT - Load Current Data\OLEDB_Dest - Load Stagging_CurrentData.Inputs[OLE DB Destination Input].ExternalColumns[Humidity]"
                      lineageId="Package\DFT - Load Current Data\SCR - Extract Current Data from OWM API.Outputs[Output 0].Columns[Humidity]" />
                    <inputColumn
                      refId="Package\DFT - Load Current Data\OLEDB_Dest - Load Stagging_CurrentData.Inputs[OLE DB Destination Input].Columns[Visibility]"
                      cachedDataType="i4"
                      cachedName="Visibility"
                      externalMetadataColumnId="Package\DFT - Load Current Data\OLEDB_Dest - Load Stagging_CurrentData.Inputs[OLE DB Destination Input].ExternalColumns[Visibility]"
                      lineageId="Package\DFT - Load Current Data\SCR - Extract Current Data from OWM API.Outputs[Output 0].Columns[Visibility]" />
                    <inputColumn
                      refId="Package\DFT - Load Current Data\OLEDB_Dest - Load Stagging_CurrentData.Inputs[OLE DB Destination Input].Columns[WindSpeed]"
                      cachedDataType="decimal"
                      cachedName="WindSpeed"
                      externalMetadataColumnId="Package\DFT - Load Current Data\OLEDB_Dest - Load Stagging_CurrentData.Inputs[OLE DB Destination Input].ExternalColumns[WindSpeed]"
                      lineageId="Package\DFT - Load Current Data\SCR - Extract Current Data from OWM API.Outputs[Output 0].Columns[WindSpeed]" />
                    <inputColumn
                      refId="Package\DFT - Load Current Data\OLEDB_Dest - Load Stagging_CurrentData.Inputs[OLE DB Destination Input].Columns[WindDeg]"
                      cachedDataType="decimal"
                      cachedName="WindDeg"
                      externalMetadataColumnId="Package\DFT - Load Current Data\OLEDB_Dest - Load Stagging_CurrentData.Inputs[OLE DB Destination Input].ExternalColumns[WindDeg]"
                      lineageId="Package\DFT - Load Current Data\SCR - Extract Current Data from OWM API.Outputs[Output 0].Columns[WindDeg]" />
                    <inputColumn
                      refId="Package\DFT - Load Current Data\OLEDB_Dest - Load Stagging_CurrentData.Inputs[OLE DB Destination Input].Columns[CitiID]"
                      cachedDataType="i4"
                      cachedName="CitiID"
                      externalMetadataColumnId="Package\DFT - Load Current Data\OLEDB_Dest - Load Stagging_CurrentData.Inputs[OLE DB Destination Input].ExternalColumns[CityID]"
                      lineageId="Package\DFT - Load Current Data\SCR - Extract Current Data from OWM API.Outputs[Output 0].Columns[CitiID]" />
                    <inputColumn
                      refId="Package\DFT - Load Current Data\OLEDB_Dest - Load Stagging_CurrentData.Inputs[OLE DB Destination Input].Columns[CitiName]"
                      cachedDataType="wstr"
                      cachedLength="60"
                      cachedName="CitiName"
                      externalMetadataColumnId="Package\DFT - Load Current Data\OLEDB_Dest - Load Stagging_CurrentData.Inputs[OLE DB Destination Input].ExternalColumns[CityName]"
                      lineageId="Package\DFT - Load Current Data\SCR - Extract Current Data from OWM API.Outputs[Output 0].Columns[CitiName]" />
                    <inputColumn
                      refId="Package\DFT - Load Current Data\OLEDB_Dest - Load Stagging_CurrentData.Inputs[OLE DB Destination Input].Columns[WeatherDescription]"
                      cachedDataType="wstr"
                      cachedLength="100"
                      cachedName="WeatherDescription"
                      externalMetadataColumnId="Package\DFT - Load Current Data\OLEDB_Dest - Load Stagging_CurrentData.Inputs[OLE DB Destination Input].ExternalColumns[WeatherDesc]"
                      lineageId="Package\DFT - Load Current Data\SCR - Extract Current Data from OWM API.Outputs[Output 0].Columns[WeatherDescription]" />
                    <inputColumn
                      refId="Package\DFT - Load Current Data\OLEDB_Dest - Load Stagging_CurrentData.Inputs[OLE DB Destination Input].Columns[Temparature]"
                      cachedDataType="decimal"
                      cachedName="Temparature"
                      externalMetadataColumnId="Package\DFT - Load Current Data\OLEDB_Dest - Load Stagging_CurrentData.Inputs[OLE DB Destination Input].ExternalColumns[Temperature]"
                      lineageId="Package\DFT - Load Current Data\SCR - Extract Current Data from OWM API.Outputs[Output 0].Columns[Temparature]" />
                    <inputColumn
                      refId="Package\DFT - Load Current Data\OLEDB_Dest - Load Stagging_CurrentData.Inputs[OLE DB Destination Input].Columns[TempMin]"
                      cachedDataType="decimal"
                      cachedName="TempMin"
                      externalMetadataColumnId="Package\DFT - Load Current Data\OLEDB_Dest - Load Stagging_CurrentData.Inputs[OLE DB Destination Input].ExternalColumns[Temp_Min]"
                      lineageId="Package\DFT - Load Current Data\SCR - Extract Current Data from OWM API.Outputs[Output 0].Columns[TempMin]" />
                    <inputColumn
                      refId="Package\DFT - Load Current Data\OLEDB_Dest - Load Stagging_CurrentData.Inputs[OLE DB Destination Input].Columns[TempMax]"
                      cachedDataType="decimal"
                      cachedName="TempMax"
                      externalMetadataColumnId="Package\DFT - Load Current Data\OLEDB_Dest - Load Stagging_CurrentData.Inputs[OLE DB Destination Input].ExternalColumns[Temp_Max]"
                      lineageId="Package\DFT - Load Current Data\SCR - Extract Current Data from OWM API.Outputs[Output 0].Columns[TempMax]" />
                    <inputColumn
                      refId="Package\DFT - Load Current Data\OLEDB_Dest - Load Stagging_CurrentData.Inputs[OLE DB Destination Input].Columns[Cloudiness]"
                      cachedDataType="i4"
                      cachedName="Cloudiness"
                      externalMetadataColumnId="Package\DFT - Load Current Data\OLEDB_Dest - Load Stagging_CurrentData.Inputs[OLE DB Destination Input].ExternalColumns[Cloudniess]"
                      lineageId="Package\DFT - Load Current Data\SCR - Extract Current Data from OWM API.Outputs[Output 0].Columns[Cloudiness]" />
                    <inputColumn
                      refId="Package\DFT - Load Current Data\OLEDB_Dest - Load Stagging_CurrentData.Inputs[OLE DB Destination Input].Columns[CalculatedDate]"
                      cachedDataType="wstr"
                      cachedLength="12"
                      cachedName="CalculatedDate"
                      externalMetadataColumnId="Package\DFT - Load Current Data\OLEDB_Dest - Load Stagging_CurrentData.Inputs[OLE DB Destination Input].ExternalColumns[CalulatedDateTime]"
                      lineageId="Package\DFT - Load Current Data\SCR - Extract Current Data from OWM API.Outputs[Output 0].Columns[CalculatedDate]" />
                  </inputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\DFT - Load Current Data\OLEDB_Dest - Load Stagging_CurrentData.Inputs[OLE DB Destination Input].ExternalColumns[CityID]"
                      dataType="i4"
                      name="CityID" />
                    <externalMetadataColumn
                      refId="Package\DFT - Load Current Data\OLEDB_Dest - Load Stagging_CurrentData.Inputs[OLE DB Destination Input].ExternalColumns[CityName]"
                      dataType="wstr"
                      length="60"
                      name="CityName" />
                    <externalMetadataColumn
                      refId="Package\DFT - Load Current Data\OLEDB_Dest - Load Stagging_CurrentData.Inputs[OLE DB Destination Input].ExternalColumns[Latitude]"
                      dataType="wstr"
                      length="16"
                      name="Latitude" />
                    <externalMetadataColumn
                      refId="Package\DFT - Load Current Data\OLEDB_Dest - Load Stagging_CurrentData.Inputs[OLE DB Destination Input].ExternalColumns[Longitude]"
                      dataType="wstr"
                      length="16"
                      name="Longitude" />
                    <externalMetadataColumn
                      refId="Package\DFT - Load Current Data\OLEDB_Dest - Load Stagging_CurrentData.Inputs[OLE DB Destination Input].ExternalColumns[CountryCode]"
                      dataType="wstr"
                      length="2"
                      name="CountryCode" />
                    <externalMetadataColumn
                      refId="Package\DFT - Load Current Data\OLEDB_Dest - Load Stagging_CurrentData.Inputs[OLE DB Destination Input].ExternalColumns[TimeZone]"
                      dataType="wstr"
                      length="16"
                      name="TimeZone" />
                    <externalMetadataColumn
                      refId="Package\DFT - Load Current Data\OLEDB_Dest - Load Stagging_CurrentData.Inputs[OLE DB Destination Input].ExternalColumns[Sunrise]"
                      dataType="wstr"
                      length="12"
                      name="Sunrise" />
                    <externalMetadataColumn
                      refId="Package\DFT - Load Current Data\OLEDB_Dest - Load Stagging_CurrentData.Inputs[OLE DB Destination Input].ExternalColumns[Sunset]"
                      dataType="wstr"
                      length="12"
                      name="Sunset" />
                    <externalMetadataColumn
                      refId="Package\DFT - Load Current Data\OLEDB_Dest - Load Stagging_CurrentData.Inputs[OLE DB Destination Input].ExternalColumns[Cnt]"
                      dataType="i4"
                      name="Cnt" />
                    <externalMetadataColumn
                      refId="Package\DFT - Load Current Data\OLEDB_Dest - Load Stagging_CurrentData.Inputs[OLE DB Destination Input].ExternalColumns[WeatherID]"
                      dataType="i4"
                      name="WeatherID" />
                    <externalMetadataColumn
                      refId="Package\DFT - Load Current Data\OLEDB_Dest - Load Stagging_CurrentData.Inputs[OLE DB Destination Input].ExternalColumns[WeatherMain]"
                      dataType="wstr"
                      length="60"
                      name="WeatherMain" />
                    <externalMetadataColumn
                      refId="Package\DFT - Load Current Data\OLEDB_Dest - Load Stagging_CurrentData.Inputs[OLE DB Destination Input].ExternalColumns[WeatherDesc]"
                      dataType="wstr"
                      length="100"
                      name="WeatherDesc" />
                    <externalMetadataColumn
                      refId="Package\DFT - Load Current Data\OLEDB_Dest - Load Stagging_CurrentData.Inputs[OLE DB Destination Input].ExternalColumns[WeatherIcon]"
                      dataType="wstr"
                      length="10"
                      name="WeatherIcon" />
                    <externalMetadataColumn
                      refId="Package\DFT - Load Current Data\OLEDB_Dest - Load Stagging_CurrentData.Inputs[OLE DB Destination Input].ExternalColumns[Temperature]"
                      dataType="numeric"
                      name="Temperature"
                      precision="5"
                      scale="2" />
                    <externalMetadataColumn
                      refId="Package\DFT - Load Current Data\OLEDB_Dest - Load Stagging_CurrentData.Inputs[OLE DB Destination Input].ExternalColumns[Pressure]"
                      dataType="i2"
                      name="Pressure" />
                    <externalMetadataColumn
                      refId="Package\DFT - Load Current Data\OLEDB_Dest - Load Stagging_CurrentData.Inputs[OLE DB Destination Input].ExternalColumns[Humidity]"
                      dataType="i2"
                      name="Humidity" />
                    <externalMetadataColumn
                      refId="Package\DFT - Load Current Data\OLEDB_Dest - Load Stagging_CurrentData.Inputs[OLE DB Destination Input].ExternalColumns[Temp_Min]"
                      dataType="numeric"
                      name="Temp_Min"
                      precision="5"
                      scale="2" />
                    <externalMetadataColumn
                      refId="Package\DFT - Load Current Data\OLEDB_Dest - Load Stagging_CurrentData.Inputs[OLE DB Destination Input].ExternalColumns[Temp_Max]"
                      dataType="numeric"
                      name="Temp_Max"
                      precision="5"
                      scale="2" />
                    <externalMetadataColumn
                      refId="Package\DFT - Load Current Data\OLEDB_Dest - Load Stagging_CurrentData.Inputs[OLE DB Destination Input].ExternalColumns[Visibility]"
                      dataType="i4"
                      name="Visibility" />
                    <externalMetadataColumn
                      refId="Package\DFT - Load Current Data\OLEDB_Dest - Load Stagging_CurrentData.Inputs[OLE DB Destination Input].ExternalColumns[WindSpeed]"
                      dataType="wstr"
                      length="6"
                      name="WindSpeed" />
                    <externalMetadataColumn
                      refId="Package\DFT - Load Current Data\OLEDB_Dest - Load Stagging_CurrentData.Inputs[OLE DB Destination Input].ExternalColumns[WindDeg]"
                      dataType="numeric"
                      name="WindDeg"
                      precision="6"
                      scale="3" />
                    <externalMetadataColumn
                      refId="Package\DFT - Load Current Data\OLEDB_Dest - Load Stagging_CurrentData.Inputs[OLE DB Destination Input].ExternalColumns[Cloudniess]"
                      dataType="i2"
                      name="Cloudniess" />
                    <externalMetadataColumn
                      refId="Package\DFT - Load Current Data\OLEDB_Dest - Load Stagging_CurrentData.Inputs[OLE DB Destination Input].ExternalColumns[CalulatedDateTime]"
                      dataType="wstr"
                      length="16"
                      name="CalulatedDateTime" />
                    <externalMetadataColumn
                      refId="Package\DFT - Load Current Data\OLEDB_Dest - Load Stagging_CurrentData.Inputs[OLE DB Destination Input].ExternalColumns[InsertedDateTime]"
                      dataType="dbTimeStamp"
                      name="InsertedDateTime" />
                  </externalMetadataColumns>
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\DFT - Load Current Data\OLEDB_Dest - Load Stagging_CurrentData.Outputs[OLE DB Destination Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="OLE DB Destination Error Output"
                  synchronousInputId="Package\DFT - Load Current Data\OLEDB_Dest - Load Stagging_CurrentData.Inputs[OLE DB Destination Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\DFT - Load Current Data\OLEDB_Dest - Load Stagging_CurrentData.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\DFT - Load Current Data\OLEDB_Dest - Load Stagging_CurrentData.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\DFT - Load Current Data\OLEDB_Dest - Load Stagging_CurrentData.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\DFT - Load Current Data\OLEDB_Dest - Load Stagging_CurrentData.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\DFT - Load Current Data\SCR - Extract Current Data from OWM API"
              componentClassID="Microsoft.ManagedComponentHost"
              contactInfo="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum.;Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;11"
              description="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum."
              name="SCR - Extract Current Data from OWM API"
              version="11">
              <properties>
                <property
                  dataType="System.String"
                  description="Stores the source code of the component"
                  isArray="true"
                  name="SourceCode"
                  state="cdata">
                  <arrayElements
                    arrayElementCount="33">
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Resources.resx]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[main.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[#region Help:  Introduction to the Script Component
/* The Script Component allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services data flow.
 *
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script component. */
#endregion

#region Namespaces
using System;
using System.Collections.Generic;
using System.Data;
using System.Web.Script.Serialization;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;
#endregion

/// <summary>
/// This is the class to which to add your code.  Do not change the name, attributes, or parent
/// of this class.
/// </summary>
[Microsoft.SqlServer.Dts.Pipeline.SSISScriptComponentEntryPointAttribute]
public class ScriptMain : UserComponent
{
    #region Help:  Using Integration Services variables and parameters
    /* To use a variable in this script, first ensure that the variable has been added to
     * either the list contained in the ReadOnlyVariables property or the list contained in
     * the ReadWriteVariables property of this script component, according to whether or not your
     * code needs to write into the variable.  To do so, save this script, close this instance of
     * Visual Studio, and update the ReadOnlyVariables and ReadWriteVariables properties in the
     * Script Transformation Editor window.
     * To use a parameter in this script, follow the same steps. Parameters are always read-only.
     *
     * Example of reading from a variable or parameter:
     *  DateTime startTime = Variables.MyStartTime;
     *
     * Example of writing to a variable:
     *  Variables.myStringVariable = "new value";
     */
    #endregion

    #region Help:  Using Integration Services Connnection Managers
    /* Some types of connection managers can be used in this script component.  See the help topic
     * "Working with Connection Managers Programatically" for details.
     *
     * To use a connection manager in this script, first ensure that the connection manager has
     * been added to either the list of connection managers on the Connection Managers page of the
     * script component editor.  To add the connection manager, save this script, close this instance of
     * Visual Studio, and add the Connection Manager to the list.
     *
     * If the component needs to hold a connection open while processing rows, override the
     * AcquireConnections and ReleaseConnections methods.
     * 
     * Example of using an ADO.Net connection manager to acquire a SqlConnection:
     *  object rawConnection = Connections.SalesDB.AcquireConnection(transaction);
     *  SqlConnection salesDBConn = (SqlConnection)rawConnection;
     *
     * Example of using a File connection manager to acquire a file path:
     *  object rawConnection = Connections.Prices_zip.AcquireConnection(transaction);
     *  string filePath = (string)rawConnection;
     *
     * Example of releasing a connection manager:
     *  Connections.SalesDB.ReleaseConnection(rawConnection);
     */
    #endregion

    #region Help:  Firing Integration Services Events
    /* This script component can fire events.
     *
     * Example of firing an error event:
     *  ComponentMetaData.FireError(10, "Process Values", "Bad value", "", 0, out cancel);
     *
     * Example of firing an information event:
     *  ComponentMetaData.FireInformation(10, "Process Values", "Processing has started", "", 0, fireAgain);
     *
     * Example of firing a warning event:
     *  ComponentMetaData.FireWarning(10, "Process Values", "No rows were received", "", 0);
     */
    #endregion

    /// <summary>
    /// This method is called once, before rows begin to be processed in the data flow.
    ///
    /// You can remove this method if you don't need to do anything here.
    /// </summary>
    public override void PreExecute()
    {
        base.PreExecute();
        /*
         * Add your code here
         */
    }

    /// <summary>
    /// This method is called after all the rows have passed through this component.
    ///
    /// You can delete this method if you don't need to do anything here.
    /// </summary>
    public override void PostExecute()
    {
        base.PostExecute();
        /*
         * Add your code here
         */
    }

    public override void CreateNewOutputRows()
    {
        /*
          Add rows by calling the AddRow method on the member variable named "<Output Name>Buffer".
          For example, call MyOutputBuffer.AddRow() if your output was named "MyOutput".
        */
        var currentUrl = Variables.CurrentURL;
        var citiIdsList = Variables.CitiIDsList;
        var units = Variables.Units;
        var apiKey = Variables.APIKey;

        //Set URL for the location 
        var apiUrl = currentUrl + citiIdsList + "&units=" + units + "&appid=" + apiKey;

        //Read file from web
        var textFromFile = (new System.Net.WebClient()).DownloadString(apiUrl);

        var data = new JavaScriptSerializer().Deserialize<RootObject>(textFromFile);
        
        foreach (var item in data.list)
        {
            foreach (var weather in item.weather)
            {
                Output0Buffer.AddRow();
                Output0Buffer.CitiID = item.sys.id;
                Output0Buffer.CitiName = item.name;
                Output0Buffer.Latitude = item.coord.lat;
                Output0Buffer.Longitude = item.coord.lon;
                Output0Buffer.CountryCode = item.sys.country;
                Output0Buffer.Sunrise = item.sys.sunrise;
                Output0Buffer.Sunset = item.sys.sunset;
                Output0Buffer.Cnt = data.cnt;
                Output0Buffer.WeatherID = weather.id;
                Output0Buffer.WeatherMain = weather.main;
                Output0Buffer.WeatherDescription = weather.description;
                Output0Buffer.WeatherIcon = weather.icon;
                Output0Buffer.Temparature = item.main.temp;
                Output0Buffer.Pressure = item.main.pressure;
                Output0Buffer.Humidity = item.main.humidity;
                Output0Buffer.TempMin = item.main.temp_min;
                Output0Buffer.TempMax = item.main.temp_max;
                Output0Buffer.Visibility = item.visibility;
                Output0Buffer.WindSpeed = item.wind.speed;
                Output0Buffer.WindDeg = item.wind.deg;
                Output0Buffer.Cloudiness = item.clouds.all;
                Output0Buffer.CalculatedDate = item.dt;

            }
            
        }
    }
    public class Coord
    {
        public string lon { get; set; }
        public string lat { get; set; }
    }

    public class Sys
    {
        public int type { get; set; }
        public int id { get; set; }
        public double message { get; set; }
        public string country { get; set; }
        public string sunrise { get; set; }
        public string sunset { get; set; }
    }

    public class Weather
    {
        public int id { get; set; }
        public string main { get; set; }
        public string description { get; set; }
        public string icon { get; set; }
    }

    public class Main
    {
        public decimal temp { get; set; }
        public int pressure { get; set; }
        public int humidity { get; set; }
        public decimal temp_min { get; set; }
        public decimal temp_max { get; set; }
    }

    public class Wind
    {
        public decimal speed { get; set; }
        public decimal deg { get; set; }
    }

    public class Clouds
    {
        public int all { get; set; }
    }

    public class WeatherData
    {
        public Coord coord { get; set; }
        public Sys sys { get; set; }
        public List<Weather> weather { get; set; }
        public Main main { get; set; }
        public int visibility { get; set; }
        public Wind wind { get; set; }
        public Clouds clouds { get; set; }
        public string dt { get; set; }
        public int id { get; set; }
        public string name { get; set; }
    }
    public class RootObject
    {
        public int cnt { get; set; }

        public List<WeatherData> list { get; set; }
    }
}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[BufferWrapper.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services buffer wrappers
*  This module defines classes for accessing data flow buffers
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */



using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;

public class Output0Buffer: ScriptBuffer

{
    public Output0Buffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public Int32 CitiID
    {
        set
        {
            this[0] = value;
        }
    }
    public bool CitiID_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(0);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String CitiName
    {
        set
        {
            this[1] = value;
        }
    }
    public bool CitiName_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(1);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String Latitude
    {
        set
        {
            this[2] = value;
        }
    }
    public bool Latitude_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(2);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String Longitude
    {
        set
        {
            this[3] = value;
        }
    }
    public bool Longitude_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(3);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String CountryCode
    {
        set
        {
            this[4] = value;
        }
    }
    public bool CountryCode_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(4);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String TimeZone
    {
        set
        {
            this[5] = value;
        }
    }
    public bool TimeZone_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(5);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String Sunrise
    {
        set
        {
            this[6] = value;
        }
    }
    public bool Sunrise_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(6);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String Sunset
    {
        set
        {
            this[7] = value;
        }
    }
    public bool Sunset_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(7);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Int32 Cnt
    {
        set
        {
            this[8] = value;
        }
    }
    public bool Cnt_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(8);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Int32 WeatherID
    {
        set
        {
            this[9] = value;
        }
    }
    public bool WeatherID_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(9);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String WeatherMain
    {
        set
        {
            this[10] = value;
        }
    }
    public bool WeatherMain_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(10);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String WeatherDescription
    {
        set
        {
            this[11] = value;
        }
    }
    public bool WeatherDescription_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(11);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String WeatherIcon
    {
        set
        {
            this[12] = value;
        }
    }
    public bool WeatherIcon_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(12);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Decimal Temparature
    {
        set
        {
            this[13] = value;
        }
    }
    public bool Temparature_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(13);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Int32 Pressure
    {
        set
        {
            this[14] = value;
        }
    }
    public bool Pressure_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(14);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Int32 Humidity
    {
        set
        {
            this[15] = value;
        }
    }
    public bool Humidity_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(15);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Decimal TempMin
    {
        set
        {
            this[16] = value;
        }
    }
    public bool TempMin_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(16);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Decimal TempMax
    {
        set
        {
            this[17] = value;
        }
    }
    public bool TempMax_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(17);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Int32 Visibility
    {
        set
        {
            this[18] = value;
        }
    }
    public bool Visibility_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(18);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Decimal WindSpeed
    {
        set
        {
            this[19] = value;
        }
    }
    public bool WindSpeed_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(19);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Decimal WindDeg
    {
        set
        {
            this[20] = value;
        }
    }
    public bool WindDeg_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(20);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Int32 Cloudiness
    {
        set
        {
            this[21] = value;
        }
    }
    public bool Cloudiness_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(21);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String CalculatedDate
    {
        set
        {
            this[22] = value;
        }
    }
    public bool CalculatedDate_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(22);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    new public void AddRow()
    {
        base.AddRow();
    }

    new public void SetEndOfRowset()
    {
        base.SetEndOfRowset();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[ComponentWrapper.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services component wrapper
*  This module defines the base class for your component
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

public class UserComponent: ScriptComponent
{
    public Connections Connections;
    public Variables Variables;
    public UserComponent()
    {
        Connections = new Connections(this);
        Variables = new Variables(this);
    }

    public Output0Buffer Output0Buffer;

    public virtual void FinishOutputs()
    {
    }

    private void MarkOutputsFinished()
    {

        if (null != Output0Buffer)
        {
            Output0Buffer.SetEndOfRowset();
            Output0Buffer = null;
        }

    }

    public override void PrimeOutput(int Outputs, int[] OutputIDs, PipelineBuffer[] Buffers, OutputNameMap OutputMap)
    {
       for(int Idx = 0; Idx < Outputs; Idx++)
       {
            if(OutputIDs[Idx] == GetOutputID(OutputMap, @"Output 0"))
            {
                Output0Buffer = new Output0Buffer(Buffers[Idx], GetColumnIndexes(OutputIDs[Idx]), OutputMap);
            }
        }

        CreateNewOutputRows();

        FinishOutputs();
        MarkOutputsFinished();

    }

    public virtual void CreateNewOutputRows()
    {
    }

}

public class Connections
{
    ScriptComponent ParentComponent;

    public Connections(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}

public class Variables
{
    ScriptComponent ParentComponent;

    public Variables(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

    public String APIKey
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["APIKey"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public String CitiIDsList
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["CitiIDsList"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public String CurrentURL
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["Current_URL"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public String Units
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["Units"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Settings.Designer.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_c7a065bb6a644cc4b6959cd6b4c5300c.Properties.Settings.get_Default():SC_c7a065bb6a644cc4b6959cd6b4c5300c.Properties.Sett" +
    "ings")]

namespace SC_c7a065bb6a644cc4b6959cd6b4c5300c.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[SC_c7a065bb6a644cc4b6959cd6b4c5300c.csproj]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{DFBDEB16-1293-4E57-8AA0-13AB42A2A5BC}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>SC_c7a065bb6a644cc4b6959cd6b4c5300c</RootNamespace>
    <AssemblyName>SC_c7a065bb6a644cc4b6959cd6b4c5300c</AssemblyName>
    <TargetFrameworkVersion>v4.5</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Web.Extensions" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.TxScript, Version=14.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSRuntimeWrap, Version=14.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSPipelineWrap, Version=14.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.PipelineHost, Version=14.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Compile Include="main.cs" />
    <Compile Include="BufferWrapper.cs" />
    <Compile Include="ComponentWrapper.cs" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <!-- This section defines VSTA properties that describe the host-changable project properties. -->
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" />
        <Host Name="ScriptComponent" IconIndex="0" />
        <ProjectClient>
          <HostIdentifier>SSIS_SC140</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Project]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:CodeName>SC_c7a065bb6a644cc4b6959cd6b4c5300c</msb:CodeName>
    <msb:Language>msBuild</msb:Language>
    <msb:DisplayName>SC_c7a065bb6a644cc4b6959cd6b4c5300c</msb:DisplayName>
    <msb:ProjectId>{41173A89-B590-4406-B5F3-3CE8AFBE5884}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="SC_c7a065bb6a644cc4b6959cd6b4c5300c.csproj" />
    <msb:File Include="ComponentWrapper.cs" />
    <msb:File Include="Properties\Settings.Designer.cs" />
    <msb:File Include="main.cs" />
    <msb:File Include="BufferWrapper.cs" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="Properties\Resources.resx" />
    <msb:File Include="Properties\Resources.Designer.cs" />
  </msb:ItemGroup>
</c:Project>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\AssemblyInfo.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("SC_c7a065bb6a644cc4b6959cd6b4c5300c")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("SC_c7a065bb6a644cc4b6959cd6b4c5300c")]
[assembly: AssemblyCopyright("Copyright @  2019")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.0.0")]
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Settings.settings]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Resources.Designer.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_c7a065bb6a644cc4b6959cd6b4c5300c.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_c7a065bb6a644cc4b6959cd6b4c5300c.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_c7a065bb6a644cc4b6959cd6b4c5300c.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace SC_c7a065bb6a644cc4b6959cd6b4c5300c.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SC_c7a065bb6a644cc4b6959cd6b4c5300c.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[packages.config]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<packages>
  <package id="Newtonsoft.Json" version="12.0.2" targetFramework="net45" />
</packages>]]></arrayElement>
                  </arrayElements>
                </property>
                <property
                  dataType="System.String"
                  description="Stores the binary representation of the component"
                  isArray="true"
                  name="BinaryCode"
                  state="cdata">
                  <arrayElements
                    arrayElementCount="2">
                    <arrayElement
                      dataType="System.String"><![CDATA[SC_c7a065bb6a644cc4b6959cd6b4c5300c.dll]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[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
AQBXBwAAAQBXBwAAAQBXBwAAAQBXBwAAAQBXBwAAAQBXBwAAAQBXBwAAAQBXBwAAAQBXBwAAAQBX
BwAAAQBXBwAAAQBXBwAAAQBXBwAAAQBXBwAAAQBXBwAAAQBXBwAAAQDNDQAAAgBUDAAAAwCmDQAA
BABfCwAAAQC6DgAAAQC6DgAAAQBXBwAAAQBXBwAAAQBXBwAAAQBXBwAAAQBXBwAAAQBXBwAAAQBX
BwAAAQBXBwAAAQBXBwAAAQBXBwAAAQBXBwAAAQBXBwAAAQBXBwAAAQBXBwAAAQBXBwAAAQBXBwAA
AQBXBwAAAQBXBwAAAQBXBwAAAQBXBwAAAQBXBwAAAQBXBwAAAQBXBwAAAQBXBwAAAQBXBwAAAQBX
BwAAAQBXBwAAAQBXBwAAAQBXBwAAAQBXBwAAAQBXBwAAAQBXBwAAAQBXBwkARwwBABEARwwGABkA
RwwKACkARwwQADEARwwQADkARwwQAEEARwwQAEkARwwQAFEARwwQAFkARwwQAGEARwwQAGkARwwG
AIkARwwGALkARwwGANkARwwVALEAQAcGALEASwcGAOkA/Q02APEARwwGAPEAnwc8APkARwwGAPkA
XQdBAAwAOQxUABQAxA5kABwAOQxUACQAxA5kACQAPA93AAEBcgUGABQAPA93AJkARwx7AJkA9wmF
AJkA5gkBABEBRwwQAJkAiQ8GAJkAWQ4GAJkAXA53ALEARwwGALEAaQCPALEAag2WAIEARwwGALEA
QA2cABkB7gmiALEAdA+pACEBRQ+vADkBYQS2ADkBwQ+/AMEARwzFAOEARwwGAC4ACwAtAi4AEwA2
Ai4AGwBVAi4AIwBeAi4AKwCHAi4AMwCHAi4AOwCHAi4AQwBeAi4ASwCNAi4AUwCHAi4AWwCkAkMA
YwDuAuMAcwDuAgEBawDuAiEBawDuAkEBawDuAmEBawDuAoEBawDuAqEBawDuAsEBawDuAuEBawDu
AgECawDuAiECawDuAkECawDuAmECawDuAoECawDuAqECawDuAsECawDuAuECawDuAgEDawDuAiED
awDuAkEDawDuAmEDawDuAoEDawDuAqEDawDuAsEDawDuAuEDawDuAgEEawDuAiEEawDuAkEEawDu
AmEEawDuAoEEawDuAqEEawDuAsEEawDuAuEEawDuAgEFawDuAmkGewBVAokGewBVAiAJawDuAkAJ
awDuAmAJawDuAoAJawDuAsAJawDuAuAJawDuAgAKawDuAiAKawDuAkAKawDuAmAKawDuAoAKawDu
AqAKawDuAsAKawDuAuAKawDuAgALawDuAiALawDuAmALawDuAoALawDuAqALawDuAsALawDuAuAL
awDuAgAMawDuAiAMawDuAkAMawDuAoAMawDuAqAMawDuAsAMawDuAuAMawDuAgANawDuAiANawDu
AkANawDuAmANawDuAoANawDuAqANawDuAuANawDuAgAOawDuAiAOawDuAkAOawDuAoAOawDuAqAO
awDuAuAOawDuAgAPawDuAiAPawDuAkAPawDuAmAPawDuAoAPawDuAqAPawDuAsAPawDuAuAPawDu
AgAQawDuAiAQawDuAkAQawDuAmAQawDuAoAQawDuAqAQawDuAsAQawDuAuAQawDuAgARawDuAiAR
awDuAkARawDuAoARawDuAqARawDuAsARawDuAuARawDuAhsAiwADAAEABgAvAAcAMwAIADUACQA2
AAoAOAALAD4ADABCAA0ARwAOAEkADwBKABAAVAAAAFQA3gEAAAgI4gEAAHcE5gEAAIQI4gEAACIE
5gEAAHAI4gEAABQE5gEAAFsI4gEAAAQE5gEAAEQI4gEAALcE5gEAAJgI4gEAAFIF5gEAANcI4gEA
ADwO5gEAAIwJ4gEAAHgO3gEAAJ4J4gEAAF8A3gEAABoI4gEAACMK5gEAACoJ4gEAAAIL5gEAAFgJ
4gEAAGoK5gEAAEEJ4gEAAAIF6gEAAMAI4gEAANsE3gEAAKwI4gEAAOoP3gEAAMAJ4gEAABcK6gEA
ABcJ4gEAAJQP6gEAAK0J4gEAABEQ3gEAANQJ4gEAANwA6gEAAC8I4gEAAG0H6gEAAAQJ4gEAALIN
3gEAAHYJ4gEAAH4F5gEAAOoI4gEAALoP5gEAAPEO5gEAAHkA5gEAAMEN5gEAAMwL7wEAAC4F9AEA
AGwO+QEAAEEL5gEAABAO5gEAANIE3gEAABkB3gEAADsE/gEAAN4P5gEAAGoF5gEAAFIO5gEAABkB
3gEAAEcK5gEAACkL5gEAAIMK5gEAAJkL6gEAAPUE3gEAAAQQ3gEAAF0K6gEAAK0P6gEAAPQA6gEA
AIEH6gEAANgH3gEAAOoDAgIAAPkNBwIAAPQLDAIAAEcKFQIAAC8Q3gEAANEDGgIAAIcMHwIAACoO
5gEAABkB3gEAAI0E5gEAAIgO3gEAAAoPJAIBAAYAAwABAAcABQABAAgABwABAAkACQABAAoACwAB
AAsADQABAAwADwABAA0AEQABAA4AEwABAA8AFQABABAAFwABABEAGQABABIAGwABABMAHQABABQA
HwABABUAIQABABYAIwABABcAJQABABgAJwABABkAKQABABoAKwABABsALQABABwALwABAB0AMQAB
AB4AMwABAB8ANQABACAANwABACEAOQABACIAOwABACMAPQABACQAPwABACUAQQABACYAQwABACcA
RQABACgARwABACkASQABACoASwABACsATQABACwATwABAC0AUQABAC4AUwABAC8AVQABADAAVwAB
ADEAWQABADIAWwABADMAXQACAD4AXwACAD8AYQACAEAAYwACAEEAZQACAEMAZwACAEQAaQABAEUA
aQACAEYAawACAEkAbQABAEoAbQACAEsAbwABAEwAbwACAE4AcQABAE8AcQACAFAAcwABAFEAcwAC
AFIAdQABAFMAdQACAFQAdwABAFUAdwACAFYAeQABAFcAeQACAFgAewABAFkAewACAFsAfQABAFwA
fQACAF0AfwABAF4AfwACAF8AgQABAGAAgQACAGEAgwABAGIAgwACAGQAhQABAGUAhQACAGYAhwAB
AGcAhwACAGgAiQABAGkAiQACAGoAiwABAGsAiwACAGwAjQABAG0AjQACAG8AjwABAHAAjwACAHEA
kQABAHIAkQACAHQAkwABAHUAkwACAHcAlQABAHgAlQACAHkAlwABAHoAlwACAHsAmQABAHwAmQAC
AH0AmwABAH4AmwACAH8AnQABAIAAnQACAIEAnwABAIIAnwACAIMAoQABAIQAoQACAIUAowABAIYA
owACAIcApQABAIgApQACAIkApwABAIoApwACAIwAqQABAI0AqQACAI4AqwABAI8AqwBNAF0AaQBw
AASAAAABAAAAAAAAAAAAAAAAAJkAAAAEAAAAAAAAAAAAAADNAJAAAAAAAA4AAAAAAAAAAAAAANYA
0A4AAAAADgAAAAAAAAAAAAAA1gAPDwAAAAAEAAAAAAAAAAAAAADNAAAKAAAAAAQAAAAAAAAAAAAA
AN8AhA0AAAAADgAAAAAAAAAAAAAA1gBpCwAAAAAAAAAAAQAAAL8MAAAJAAIACgACAAsAAgAMAAIA
DQACAA4AAgAPAAIAEAACAC0ASAAAAAAAAElEVFNWYXJpYWJsZTEwMABJRFRTVmFyaWFibGVzMTAw
AElEVFNFdmFsdWF0b3JDb250ZXh0MTAwAExpc3RgMQBJbnQzMgA8TW9kdWxlPgBzZXRfQ2l0aUlE
AHNldF9XZWF0aGVySUQAR2V0T3V0cHV0SUQAZ2V0X0N1cnJlbnRVUkwAV2VhdGhlckRhdGEAbXNj
b3JsaWIAU0NfYzdhMDY1YmI2YTY0NGNjNGI2OTU5Y2Q2YjRjNTMwMGMAU3lzdGVtLkNvbGxlY3Rp
b25zLkdlbmVyaWMAc2V0X1dpbmRTcGVlZABnZXRfc3BlZWQAc2V0X3NwZWVkAE1hcmtPdXRwdXRz
RmluaXNoZWQAZ2V0X2lkAHNldF9pZAA8c3BlZWQ+a19fQmFja2luZ0ZpZWxkADxpZD5rX19CYWNr
aW5nRmllbGQAPHdpbmQ+a19fQmFja2luZ0ZpZWxkADxjb29yZD5rX19CYWNraW5nRmllbGQAPG1l
c3NhZ2U+a19fQmFja2luZ0ZpZWxkADxuYW1lPmtfX0JhY2tpbmdGaWVsZAA8dHlwZT5rX19CYWNr
aW5nRmllbGQAPHByZXNzdXJlPmtfX0JhY2tpbmdGaWVsZAA8c3VucmlzZT5rX19CYWNraW5nRmll
bGQAPGRlZz5rX19CYWNraW5nRmllbGQAPGFsbD5rX19CYWNraW5nRmllbGQAPG1haW4+a19fQmFj
a2luZ0ZpZWxkADx0ZW1wX21pbj5rX19CYWNraW5nRmllbGQAPGljb24+a19fQmFja2luZ0ZpZWxk
ADxkZXNjcmlwdGlvbj5rX19CYWNraW5nRmllbGQAPGxvbj5rX19CYWNraW5nRmllbGQAPHRlbXA+
a19fQmFja2luZ0ZpZWxkADx3ZWF0aGVyPmtfX0JhY2tpbmdGaWVsZAA8Y2xvdWRzPmtfX0JhY2tp
bmdGaWVsZAA8c3lzPmtfX0JhY2tpbmdGaWVsZAA8bGF0PmtfX0JhY2tpbmdGaWVsZAA8ZHQ+a19f
QmFja2luZ0ZpZWxkADxzdW5zZXQ+a19fQmFja2luZ0ZpZWxkADxjbnQ+a19fQmFja2luZ0ZpZWxk
ADxsaXN0PmtfX0JhY2tpbmdGaWVsZAA8dGVtcF9tYXg+a19fQmFja2luZ0ZpZWxkADxjb3VudHJ5
PmtfX0JhY2tpbmdGaWVsZAA8aHVtaWRpdHk+a19fQmFja2luZ0ZpZWxkADx2aXNpYmlsaXR5Pmtf
X0JhY2tpbmdGaWVsZABXaW5kAGdldF93aW5kAHNldF93aW5kAENvb3JkAGdldF9jb29yZABzZXRf
Y29vcmQAZGVmYXVsdEluc3RhbmNlAHNldF9Db3VudHJ5Q29kZQBzZXRfTG9uZ2l0dWRlAHNldF9M
YXRpdHVkZQBnZXRfbWVzc2FnZQBzZXRfbWVzc2FnZQBJRGlzcG9zYWJsZQBSdW50aW1lVHlwZUhh
bmRsZQBHZXRUeXBlRnJvbUhhbmRsZQBzZXRfQ2l0aU5hbWUAZ2V0X25hbWUAc2V0X25hbWUATWlj
cm9zb2Z0LlNxbFNlcnZlci5EdHMuUGlwZWxpbmUAc2V0X1RpbWVab25lAFR5cGUAZ2V0X3R5cGUA
c2V0X3R5cGUAc2V0X1ByZXNzdXJlAGdldF9wcmVzc3VyZQBzZXRfcHJlc3N1cmUAc2V0X1RlbXBh
cmF0dXJlAGdldF9DdWx0dXJlAHNldF9DdWx0dXJlAHJlc291cmNlQ3VsdHVyZQBBcHBsaWNhdGlv
blNldHRpbmdzQmFzZQBzZXRfU3VucmlzZQBnZXRfc3VucmlzZQBzZXRfc3VucmlzZQBEaXNwb3Nl
AHNldF9DYWxjdWxhdGVkRGF0ZQBFZGl0b3JCcm93c2FibGVTdGF0ZQBDb21waWxlckdlbmVyYXRl
ZEF0dHJpYnV0ZQBEZWJ1Z2dlck5vblVzZXJDb2RlQXR0cmlidXRlAERlYnVnZ2FibGVBdHRyaWJ1
dGUARWRpdG9yQnJvd3NhYmxlQXR0cmlidXRlAEFzc2VtYmx5VGl0bGVBdHRyaWJ1dGUAQXNzZW1i
bHlUcmFkZW1hcmtBdHRyaWJ1dGUAVGFyZ2V0RnJhbWV3b3JrQXR0cmlidXRlAEFzc2VtYmx5Q29u
ZmlndXJhdGlvbkF0dHJpYnV0ZQBBc3NlbWJseURlc2NyaXB0aW9uQXR0cmlidXRlAENvbXBpbGF0
aW9uUmVsYXhhdGlvbnNBdHRyaWJ1dGUAQXNzZW1ibHlQcm9kdWN0QXR0cmlidXRlAEFzc2VtYmx5
Q29weXJpZ2h0QXR0cmlidXRlAFNTSVNTY3JpcHRDb21wb25lbnRFbnRyeVBvaW50QXR0cmlidXRl
AEFzc2VtYmx5Q29tcGFueUF0dHJpYnV0ZQBSdW50aW1lQ29tcGF0aWJpbGl0eUF0dHJpYnV0ZQBQ
cmVFeGVjdXRlAFBvc3RFeGVjdXRlAHZhbHVlAERlc2VyaWFsaXplAHNldF9XaW5kRGVnAGdldF9k
ZWcAc2V0X2RlZwBTeXN0ZW0uUnVudGltZS5WZXJzaW9uaW5nAERvd25sb2FkU3RyaW5nAERlY2lt
YWwAU3lzdGVtLkNvbXBvbmVudE1vZGVsAGdldF9hbGwAc2V0X2FsbABTQ19jN2EwNjViYjZhNjQ0
Y2M0YjY5NTljZDZiNGM1MzAwYy5kbGwAc2V0X0NpdGlJRF9Jc051bGwAc2V0X1dlYXRoZXJJRF9J
c051bGwAc2V0X1dpbmRTcGVlZF9Jc051bGwAc2V0X0NvdW50cnlDb2RlX0lzTnVsbABzZXRfTG9u
Z2l0dWRlX0lzTnVsbABzZXRfTGF0aXR1ZGVfSXNOdWxsAHNldF9DaXRpTmFtZV9Jc051bGwAc2V0
X1RpbWVab25lX0lzTnVsbABzZXRfUHJlc3N1cmVfSXNOdWxsAHNldF9UZW1wYXJhdHVyZV9Jc051
bGwAc2V0X1N1bnJpc2VfSXNOdWxsAHNldF9DYWxjdWxhdGVkRGF0ZV9Jc051bGwAc2V0X1dpbmRE
ZWdfSXNOdWxsAHNldF9UZW1wTWluX0lzTnVsbABzZXRfV2VhdGhlck1haW5fSXNOdWxsAHNldF9X
ZWF0aGVySWNvbl9Jc051bGwAc2V0X1dlYXRoZXJEZXNjcmlwdGlvbl9Jc051bGwAc2V0X0Nsb3Vk
aW5lc3NfSXNOdWxsAHNldF9TdW5zZXRfSXNOdWxsAHNldF9DbnRfSXNOdWxsAHNldF9UZW1wTWF4
X0lzTnVsbABzZXRfSHVtaWRpdHlfSXNOdWxsAHNldF9WaXNpYmlsaXR5X0lzTnVsbABTZXROdWxs
AGdldF9JdGVtAHNldF9JdGVtAFN5c3RlbQByZXNvdXJjZU1hbgBzZXRfVGVtcE1pbgBzZXRfV2Vh
dGhlck1haW4AU2NyaXB0TWFpbgBnZXRfbWFpbgBzZXRfbWFpbgBnZXRfdGVtcF9taW4Ac2V0X3Rl
bXBfbWluAHNldF9XZWF0aGVySWNvbgBnZXRfaWNvbgBzZXRfaWNvbgBTeXN0ZW0uQ29uZmlndXJh
dGlvbgBTeXN0ZW0uR2xvYmFsaXphdGlvbgBTeXN0ZW0uV2ViLlNjcmlwdC5TZXJpYWxpemF0aW9u
AFN5c3RlbS5SZWZsZWN0aW9uAEludmFsaWRPcGVyYXRpb25FeGNlcHRpb24Ac2V0X1dlYXRoZXJE
ZXNjcmlwdGlvbgBnZXRfZGVzY3JpcHRpb24Ac2V0X2Rlc2NyaXB0aW9uAGdldF9sb24Ac2V0X2xv
bgBDdWx0dXJlSW5mbwBPdXRwdXROYW1lTWFwAE91dHB1dE1hcABNaWNyb3NvZnQuU3FsU2VydmVy
LkRUU1J1bnRpbWVXcmFwAGdldF90ZW1wAHNldF90ZW1wAE91dHB1dDBCdWZmZXIAUGlwZWxpbmVC
dWZmZXIAU2NyaXB0QnVmZmVyAGdldF9SZXNvdXJjZU1hbmFnZXIAV2VhdGhlcgBnZXRfd2VhdGhl
cgBzZXRfd2VhdGhlcgBNaWNyb3NvZnQuU3FsU2VydmVyLkR0cy5SdW50aW1lLldyYXBwZXIASmF2
YVNjcmlwdFNlcmlhbGl6ZXIAR2V0RW51bWVyYXRvcgAuY3RvcgAuY2N0b3IAT3V0cHV0SURzAFN5
c3RlbS5EaWFnbm9zdGljcwBDbG91ZHMAZ2V0X2Nsb3VkcwBzZXRfY2xvdWRzAFN5c3RlbS5SdW50
aW1lLkNvbXBpbGVyU2VydmljZXMAU3lzdGVtLlJlc291cmNlcwBTQ19jN2EwNjViYjZhNjQ0Y2M0
YjY5NTljZDZiNGM1MzAwYy5Qcm9wZXJ0aWVzLlJlc291cmNlcy5yZXNvdXJjZXMARGVidWdnaW5n
TW9kZXMAU0NfYzdhMDY1YmI2YTY0NGNjNGI2OTU5Y2Q2YjRjNTMwMGMuUHJvcGVydGllcwBnZXRf
UmVhZE9ubHlWYXJpYWJsZXMAQnVmZmVyQ29sdW1uSW5kZXhlcwBHZXRDb2x1bW5JbmRleGVzAFNl
dHRpbmdzAFN5c3RlbS5XZWIuRXh0ZW5zaW9ucwBDb25uZWN0aW9ucwBCdWZmZXJzAHNldF9DbG91
ZGluZXNzAGdldF9Vbml0cwBGaW5pc2hPdXRwdXRzAENyZWF0ZU5ld091dHB1dFJvd3MAU3lzAGdl
dF9zeXMAc2V0X3N5cwBDb25jYXQAZ2V0X2xhdABzZXRfbGF0AFJvb3RPYmplY3QAZ2V0X2R0AHNl
dF9kdABTeXN0ZW0uTmV0AHNldF9TdW5zZXQAZ2V0X3N1bnNldABzZXRfc3Vuc2V0AFNldEVuZE9m
Um93c2V0AGdldF9EZWZhdWx0AHNldF9DbnQAZ2V0X2NudABzZXRfY250AFdlYkNsaWVudABVc2Vy
Q29tcG9uZW50AFBhcmVudENvbXBvbmVudABTY3JpcHRDb21wb25lbnQAZ2V0X0N1cnJlbnQATWlj
cm9zb2Z0LlNxbFNlcnZlci5UeFNjcmlwdABnZXRfQ2l0aUlEc0xpc3QAZ2V0X2xpc3QAc2V0X2xp
c3QATWljcm9zb2Z0LlNxbFNlcnZlci5QaXBlbGluZUhvc3QAUHJpbWVPdXRwdXQATW92ZU5leHQA
R2V0VmFsdWVXaXRoQ29udGV4dABTY3JpcHRDb21wb25lbnRFdmFsQ29udGV4dABnZXRfRXZhbHVh
dG9yQ29udGV4dABBZGRSb3cAc2V0X1RlbXBNYXgAZ2V0X3RlbXBfbWF4AHNldF90ZW1wX21heABn
ZXRfQVBJS2V5AGdldF9Bc3NlbWJseQBnZXRfY291bnRyeQBzZXRfY291bnRyeQBzZXRfSHVtaWRp
dHkAZ2V0X2h1bWlkaXR5AHNldF9odW1pZGl0eQBzZXRfVmlzaWJpbGl0eQBnZXRfdmlzaWJpbGl0
eQBzZXRfdmlzaWJpbGl0eQAAAAAPJgB1AG4AaQB0AHMAPQAADyYAYQBwAHAAaQBkAD0AAICbSQBz
AE4AdQBsAGwAIABwAHIAbwBwAGUAcgB0AHkAIABjAGEAbgBuAG8AdAAgAGIAZQAgAHMAZQB0ACAA
dABvACAARgBhAGwAcwBlAC4AIABBAHMAcwBpAGcAbgAgAGEAIAB2AGEAbAB1AGUAIAB0AG8AIAB0
AGgAZQAgAGMAbwBsAHUAbQBuACAAaQBuAHMAdABlAGEAZAAuAAARTwB1AHQAcAB1AHQAIAAwAAAN
QQBQAEkASwBlAHkAABdDAGkAdABpAEkARABzAEwAaQBzAHQAABdDAHUAcgByAGUAbgB0AF8AVQBS
AEwAAAtVAG4AaQB0AHMAAHFTAEMAXwBjADcAYQAwADYANQBiAGIANgBhADYANAA0AGMAYwA0AGIA
NgA5ADUAOQBjAGQANgBiADQAYwA1ADMAMAAwAGMALgBQAHIAbwBwAGUAcgB0AGkAZQBzAC4AUgBl
AHMAbwB1AHIAYwBlAHMAAJEC2Ow3ZS1JpXS1mib7HhMABCABAQgDIAABBSABARERBCABAQ4FIAEB
EWkaBwsODg4ODg4SQBURPQESPBI8FRE9ARIsEiwFAAEOHQ4EIAEODgYwAQEeAA4ECgESQAYVEjkB
EjwIIAAVET0BEwAGFRE9ARI8BCAAEwAGFRI5ARIsBhURPQESLAMgAAIJIAMBElEdCBJVBSACAQgc
AwcBCAYAAggSVQ4FIAEdCAgFIAASgI0GIAESgJEcBQAAEoCVBiABHBKAmQgAARKAnRGAoQUgABKA
pQcgAgEOEoClCLd6XFYZNOCJCImEXc2AgMyRCDG/OFatNk41AwYSFAMGEhgDBhIMAwYSWQMGEmED
BhJlAwYSIAIGDgIGCAIGDQMGEUkDBhIkAwYSKAcGFRI5ARIsAwYSMAMGEjQDBhI4BwYVEjkBEjwE
IAEBAgUgAQERSQsgBAEIHQgdElESVQUgAQESWQMgAA4EAAASYQQAABJlBQABARJlBAAAEiADAAAB
AyAACAMgAA0EIAEBDQQgABFJBCAAEiQFIAEBEiQEIAASKAUgAQESKAggABUSOQESLAkgAQEVEjkB
EiwEIAASMAUgAQESMAQgABI0BSABARI0BCAAEjgFIAEBEjgIIAAVEjkBEjwJIAEBFRI5ARI8AygA
CAMoAAIDKAAOBCgAEUkECAASYQQIABJlBAgAEiADKAANBCgAEiQEKAASKAgoABUSOQESLAQoABIw
BCgAEjQEKAASOAgoABUSOQESPAgBAAgAAAAAAB4BAAEAVAIWV3JhcE5vbkV4Y2VwdGlvblRocm93
cwEIAQACAAAAAAAoAQAjU0NfYzdhMDY1YmI2YTY0NGNjNGI2OTU5Y2Q2YjRjNTMwMGMAAAUBAAAA
ABYBABFDb3B5cmlnaHQgQCAgMjAxOQAASQEAGi5ORVRGcmFtZXdvcmssVmVyc2lvbj12NC41AQBU
DhRGcmFtZXdvcmtEaXNwbGF5TmFtZRIuTkVUIEZyYW1ld29yayA0LjUEAQAAAAC0AAAAzsrvvgEA
AACRAAAAbFN5c3RlbS5SZXNvdXJjZXMuUmVzb3VyY2VSZWFkZXIsIG1zY29ybGliLCBWZXJzaW9u
PTQuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3YTVjNTYxOTM0ZTA4
OSNTeXN0ZW0uUmVzb3VyY2VzLlJ1bnRpbWVSZXNvdXJjZVNldAIAAAAAAAAAAAAAAFBBRFBBRFC0
AAAAZFcAAAAAAAAAAAAAflcAAAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHBXAAAAAAAAAAAAAAAA
X0NvckRsbE1haW4AbXNjb3JlZS5kbGwAAAAAAP8lACAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAQAAAAGAAAgAAAAAAA
AAAAAAAAAAAAAQABAAAAMAAAgAAAAAAAAAAAAAAAAAAAAQAAAAAASAAAAFhgAADsAwAAAAAAAAAA
AADsAzQAAABWAFMAXwBWAEUAUgBTAEkATwBOAF8ASQBOAEYATwAAAAAAvQTv/gAAAQAAAAEAAAAA
AAAAAQAAAAAAPwAAAAAAAAAEAAAAAgAAAAAAAAAAAAAAAAAAAEQAAAABAFYAYQByAEYAaQBsAGUA
SQBuAGYAbwAAAAAAJAAEAAAAVAByAGEAbgBzAGwAYQB0AGkAbwBuAAAAAAAAALAETAMAAAEAUwB0
AHIAaQBuAGcARgBpAGwAZQBJAG4AZgBvAAAAKAMAAAEAMAAwADAAMAAwADQAYgAwAAAAGgABAAEA
QwBvAG0AbQBlAG4AdABzAAAAAAAAACIAAQABAEMAbwBtAHAAYQBuAHkATgBhAG0AZQAAAAAAAAAA
AHAAJAABAEYAaQBsAGUARABlAHMAYwByAGkAcAB0AGkAbwBuAAAAAABTAEMAXwBjADcAYQAwADYA
NQBiAGIANgBhADYANAA0AGMAYwA0AGIANgA5ADUAOQBjAGQANgBiADQAYwA1ADMAMAAwAGMAAAAw
AAgAAQBGAGkAbABlAFYAZQByAHMAaQBvAG4AAAAAADEALgAwAC4AMAAuADAAAABwACgAAQBJAG4A
dABlAHIAbgBhAGwATgBhAG0AZQAAAFMAQwBfAGMANwBhADAANgA1AGIAYgA2AGEANgA0ADQAYwBj
ADQAYgA2ADkANQA5AGMAZAA2AGIANABjADUAMwAwADAAYwAuAGQAbABsAAAASAASAAEATABlAGcA
YQBsAEMAbwBwAHkAcgBpAGcAaAB0AAAAQwBvAHAAeQByAGkAZwBoAHQAIABAACAAIAAyADAAMQA5
AAAAKgABAAEATABlAGcAYQBsAFQAcgBhAGQAZQBtAGEAcgBrAHMAAAAAAAAAAAB4ACgAAQBPAHIA
aQBnAGkAbgBhAGwARgBpAGwAZQBuAGEAbQBlAAAAUwBDAF8AYwA3AGEAMAA2ADUAYgBiADYAYQA2
ADQANABjAGMANABiADYAOQA1ADkAYwBkADYAYgA0AGMANQAzADAAMABjAC4AZABsAGwAAABoACQA
AQBQAHIAbwBkAHUAYwB0AE4AYQBtAGUAAAAAAFMAQwBfAGMANwBhADAANgA1AGIAYgA2AGEANgA0
ADQAYwBjADQAYgA2ADkANQA5AGMAZAA2AGIANABjADUAMwAwADAAYwAAADQACAABAFAAcgBvAGQA
dQBjAHQAVgBlAHIAcwBpAG8AbgAAADEALgAwAC4AMAAuADAAAAA4AAgAAQBBAHMAcwBlAG0AYgBs
AHkAIABWAGUAcgBzAGkAbwBuAAAAMQAuADAALgAwAC4AMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABQAAAMAAAAkDcAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA]]></arrayElement>
                  </arrayElements>
                </property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the Microsoft Visual Studio Tools for Applications project. Project names must be unique within a package."
                  name="VSTAProjectName"
                  typeConverter="NOTBROWSABLE">SC_c7a065bb6a644cc4b6959cd6b4c5300c</property>
                <property
                  dataType="System.String"
                  description="Specifies the programming language used by the script."
                  name="ScriptLanguage"
                  typeConverter="Microsoft.SqlServer.VSTAHosting.ScriptingLanguages">CSharp</property>
                <property
                  dataType="System.String"
                  description="Specifies a comma-separated list of read-only variables."
                  name="ReadOnlyVariables"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIVariablePickerDlg">User::CitiIDsList,User::Current_URL,$Project::APIKey,$Project::Units</property>
                <property
                  dataType="System.String"
                  description="Specifies a comma-separated list of read/write variables."
                  name="ReadWriteVariables"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIWriteableVariablePickerDlg"></property>
                <property
                  dataType="System.String"
                  description="List of breakpoints present on the script."
                  isArray="true"
                  name="BreakpointCollection"
                  typeConverter="NOTBROWSABLE">
                  <arrayElements
                    arrayElementCount="0" />
                </property>
                <property
                  dataType="System.String"
                  description="Checksum to match component metedata against compiled codes."
                  name="MetadataChecksum140"
                  typeConverter="NOTBROWSABLE">F4</property>
                <property
                  dataType="System.String"
                  name="UserComponentTypeName">Microsoft.ScriptComponentHost</property>
              </properties>
              <outputs>
                <output
                  refId="Package\DFT - Load Current Data\SCR - Extract Current Data from OWM API.Outputs[Output 0]"
                  hasSideEffects="true"
                  name="Output 0">
                  <outputColumns>
                    <outputColumn
                      refId="Package\DFT - Load Current Data\SCR - Extract Current Data from OWM API.Outputs[Output 0].Columns[CitiID]"
                      dataType="i4"
                      lineageId="Package\DFT - Load Current Data\SCR - Extract Current Data from OWM API.Outputs[Output 0].Columns[CitiID]"
                      name="CitiID" />
                    <outputColumn
                      refId="Package\DFT - Load Current Data\SCR - Extract Current Data from OWM API.Outputs[Output 0].Columns[CitiName]"
                      dataType="wstr"
                      length="60"
                      lineageId="Package\DFT - Load Current Data\SCR - Extract Current Data from OWM API.Outputs[Output 0].Columns[CitiName]"
                      name="CitiName" />
                    <outputColumn
                      refId="Package\DFT - Load Current Data\SCR - Extract Current Data from OWM API.Outputs[Output 0].Columns[Latitude]"
                      dataType="wstr"
                      length="16"
                      lineageId="Package\DFT - Load Current Data\SCR - Extract Current Data from OWM API.Outputs[Output 0].Columns[Latitude]"
                      name="Latitude" />
                    <outputColumn
                      refId="Package\DFT - Load Current Data\SCR - Extract Current Data from OWM API.Outputs[Output 0].Columns[Longitude]"
                      dataType="wstr"
                      length="16"
                      lineageId="Package\DFT - Load Current Data\SCR - Extract Current Data from OWM API.Outputs[Output 0].Columns[Longitude]"
                      name="Longitude" />
                    <outputColumn
                      refId="Package\DFT - Load Current Data\SCR - Extract Current Data from OWM API.Outputs[Output 0].Columns[CountryCode]"
                      dataType="wstr"
                      length="2"
                      lineageId="Package\DFT - Load Current Data\SCR - Extract Current Data from OWM API.Outputs[Output 0].Columns[CountryCode]"
                      name="CountryCode" />
                    <outputColumn
                      refId="Package\DFT - Load Current Data\SCR - Extract Current Data from OWM API.Outputs[Output 0].Columns[TimeZone]"
                      dataType="wstr"
                      length="16"
                      lineageId="Package\DFT - Load Current Data\SCR - Extract Current Data from OWM API.Outputs[Output 0].Columns[TimeZone]"
                      name="TimeZone" />
                    <outputColumn
                      refId="Package\DFT - Load Current Data\SCR - Extract Current Data from OWM API.Outputs[Output 0].Columns[Sunrise]"
                      dataType="wstr"
                      length="12"
                      lineageId="Package\DFT - Load Current Data\SCR - Extract Current Data from OWM API.Outputs[Output 0].Columns[Sunrise]"
                      name="Sunrise" />
                    <outputColumn
                      refId="Package\DFT - Load Current Data\SCR - Extract Current Data from OWM API.Outputs[Output 0].Columns[Sunset]"
                      dataType="wstr"
                      length="12"
                      lineageId="Package\DFT - Load Current Data\SCR - Extract Current Data from OWM API.Outputs[Output 0].Columns[Sunset]"
                      name="Sunset" />
                    <outputColumn
                      refId="Package\DFT - Load Current Data\SCR - Extract Current Data from OWM API.Outputs[Output 0].Columns[Cnt]"
                      dataType="i4"
                      lineageId="Package\DFT - Load Current Data\SCR - Extract Current Data from OWM API.Outputs[Output 0].Columns[Cnt]"
                      name="Cnt" />
                    <outputColumn
                      refId="Package\DFT - Load Current Data\SCR - Extract Current Data from OWM API.Outputs[Output 0].Columns[WeatherID]"
                      dataType="i4"
                      lineageId="Package\DFT - Load Current Data\SCR - Extract Current Data from OWM API.Outputs[Output 0].Columns[WeatherID]"
                      name="WeatherID" />
                    <outputColumn
                      refId="Package\DFT - Load Current Data\SCR - Extract Current Data from OWM API.Outputs[Output 0].Columns[WeatherMain]"
                      dataType="wstr"
                      length="60"
                      lineageId="Package\DFT - Load Current Data\SCR - Extract Current Data from OWM API.Outputs[Output 0].Columns[WeatherMain]"
                      name="WeatherMain" />
                    <outputColumn
                      refId="Package\DFT - Load Current Data\SCR - Extract Current Data from OWM API.Outputs[Output 0].Columns[WeatherDescription]"
                      dataType="wstr"
                      length="100"
                      lineageId="Package\DFT - Load Current Data\SCR - Extract Current Data from OWM API.Outputs[Output 0].Columns[WeatherDescription]"
                      name="WeatherDescription" />
                    <outputColumn
                      refId="Package\DFT - Load Current Data\SCR - Extract Current Data from OWM API.Outputs[Output 0].Columns[WeatherIcon]"
                      dataType="wstr"
                      length="10"
                      lineageId="Package\DFT - Load Current Data\SCR - Extract Current Data from OWM API.Outputs[Output 0].Columns[WeatherIcon]"
                      name="WeatherIcon" />
                    <outputColumn
                      refId="Package\DFT - Load Current Data\SCR - Extract Current Data from OWM API.Outputs[Output 0].Columns[Temparature]"
                      dataType="decimal"
                      lineageId="Package\DFT - Load Current Data\SCR - Extract Current Data from OWM API.Outputs[Output 0].Columns[Temparature]"
                      name="Temparature" />
                    <outputColumn
                      refId="Package\DFT - Load Current Data\SCR - Extract Current Data from OWM API.Outputs[Output 0].Columns[Pressure]"
                      dataType="i4"
                      lineageId="Package\DFT - Load Current Data\SCR - Extract Current Data from OWM API.Outputs[Output 0].Columns[Pressure]"
                      name="Pressure" />
                    <outputColumn
                      refId="Package\DFT - Load Current Data\SCR - Extract Current Data from OWM API.Outputs[Output 0].Columns[Humidity]"
                      dataType="i4"
                      lineageId="Package\DFT - Load Current Data\SCR - Extract Current Data from OWM API.Outputs[Output 0].Columns[Humidity]"
                      name="Humidity" />
                    <outputColumn
                      refId="Package\DFT - Load Current Data\SCR - Extract Current Data from OWM API.Outputs[Output 0].Columns[TempMin]"
                      dataType="decimal"
                      lineageId="Package\DFT - Load Current Data\SCR - Extract Current Data from OWM API.Outputs[Output 0].Columns[TempMin]"
                      name="TempMin" />
                    <outputColumn
                      refId="Package\DFT - Load Current Data\SCR - Extract Current Data from OWM API.Outputs[Output 0].Columns[TempMax]"
                      dataType="decimal"
                      lineageId="Package\DFT - Load Current Data\SCR - Extract Current Data from OWM API.Outputs[Output 0].Columns[TempMax]"
                      name="TempMax" />
                    <outputColumn
                      refId="Package\DFT - Load Current Data\SCR - Extract Current Data from OWM API.Outputs[Output 0].Columns[Visibility]"
                      dataType="i4"
                      lineageId="Package\DFT - Load Current Data\SCR - Extract Current Data from OWM API.Outputs[Output 0].Columns[Visibility]"
                      name="Visibility" />
                    <outputColumn
                      refId="Package\DFT - Load Current Data\SCR - Extract Current Data from OWM API.Outputs[Output 0].Columns[WindSpeed]"
                      dataType="decimal"
                      lineageId="Package\DFT - Load Current Data\SCR - Extract Current Data from OWM API.Outputs[Output 0].Columns[WindSpeed]"
                      name="WindSpeed" />
                    <outputColumn
                      refId="Package\DFT - Load Current Data\SCR - Extract Current Data from OWM API.Outputs[Output 0].Columns[WindDeg]"
                      dataType="decimal"
                      lineageId="Package\DFT - Load Current Data\SCR - Extract Current Data from OWM API.Outputs[Output 0].Columns[WindDeg]"
                      name="WindDeg" />
                    <outputColumn
                      refId="Package\DFT - Load Current Data\SCR - Extract Current Data from OWM API.Outputs[Output 0].Columns[Cloudiness]"
                      dataType="i4"
                      lineageId="Package\DFT - Load Current Data\SCR - Extract Current Data from OWM API.Outputs[Output 0].Columns[Cloudiness]"
                      name="Cloudiness" />
                    <outputColumn
                      refId="Package\DFT - Load Current Data\SCR - Extract Current Data from OWM API.Outputs[Output 0].Columns[CalculatedDate]"
                      dataType="wstr"
                      length="12"
                      lineageId="Package\DFT - Load Current Data\SCR - Extract Current Data from OWM API.Outputs[Output 0].Columns[CalculatedDate]"
                      name="CalculatedDate" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
          </components>
          <paths>
            <path
              refId="Package\DFT - Load Current Data.Paths[Output 0]"
              endId="Package\DFT - Load Current Data\OLEDB_Dest - Load Stagging_CurrentData.Inputs[OLE DB Destination Input]"
              name="Output 0"
              startId="Package\DFT - Load Current Data\SCR - Extract Current Data from OWM API.Outputs[Output 0]" />
          </paths>
        </pipeline>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\SQL - Get Citi ID from DIM_Cities"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{B5855A52-4DAA-4534-A8BA-710BA9C0A826}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="SQL - Get Citi ID from DIM_Cities"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{2F0B9ABE-B0F6-4174-9360-6F341960A908}"
          SQLTask:SqlStatementSource="SELECT DISTINCT CAST (STUFF(&#xA;      (SELECT ','+ CAST(CitiNK AS VARCHAR(10))&#xA;       FROM [DIM].[Cities]&#xA;       ORDER BY CitiNK&#xA;       FOR XML PATH('')),1,1,'') AS NVARCHAR(200)) CityIDsList&#xA;FROM [DIM].[Cities]"
          SQLTask:ResultType="ResultSetType_SingleRow" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
          <SQLTask:ResultBinding
            SQLTask:ResultName="0"
            SQLTask:DtsVariableName="User::CitiIDsList" />
        </SQLTask:SqlTaskData>
      </DTS:ObjectData>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:PrecedenceConstraints>
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint]"
      DTS:CreationName=""
      DTS:DTSID="{2AADD50E-7D76-495C-BDFC-E713D6B8F54F}"
      DTS:From="Package\SQL - Get Citi ID from DIM_Cities"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint"
      DTS:To="Package\DFT - Load Current Data" />
  </DTS:PrecedenceConstraints>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--This CDATA section contains the layout information of the package. The section includes information such as (x,y) coordinates, width, and height.-->
<!--If you manually edit this section and make a mistake, you can delete it. -->
<!--The package will still be able to load normally but the previous layout information will be lost and the designer will automatically re-arrange the elements on the design surface.-->
<Objects
  Version="8">
  <!--Each node below will contain properties that do not affect runtime behavior.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml">
        <NodeLayout
          Size="195,42"
          Id="Package\DFT - Load Current Data"
          TopLeft="286,167" />
        <NodeLayout
          Size="237,42"
          Id="Package\SQL - Get Citi ID from DIM_Cities"
          TopLeft="260,60" />
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint]"
          TopLeft="381,102">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,65"
              Start="0,0"
              End="0,57.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,57.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </Package>
  <TaskHost
    design-time-name="Package\DFT - Load Current Data">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml">
        <NodeLayout
          Size="279,42"
          Id="Package\DFT - Load Current Data\SCR - Extract Current Data from OWM API"
          TopLeft="327,90" />
        <NodeLayout
          Size="279,42"
          Id="Package\DFT - Load Current Data\OLEDB_Dest - Load Stagging_CurrentData"
          TopLeft="332,250" />
        <EdgeLayout
          Id="Package\DFT - Load Current Data.Paths[Output 0]"
          TopLeft="469,132">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,118"
              Start="0,0"
              End="0,110.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,110.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\DFT - Load Current Data\OLEDB_Dest - Load Stagging_CurrentData">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>