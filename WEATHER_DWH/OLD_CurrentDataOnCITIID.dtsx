<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="10/5/2019 8:28:02 AM"
  DTS:CreationName="Microsoft.Package"
  DTS:CreatorComputerName="MYLAPTOP"
  DTS:CreatorName="MYLAPTOP\ygang"
  DTS:DTSID="{1A37890D-B105-4EC7-915F-E19C5EBEE123}"
  DTS:ExecutableType="Microsoft.Package"
  DTS:LastModifiedProductVersion="15.0.1301.433"
  DTS:LocaleID="16393"
  DTS:ObjectName="OLD_CurrentDataOnCITIID"
  DTS:PackageType="5"
  DTS:VersionBuild="58"
  DTS:VersionGUID="{2E50A896-BE84-4583-A40A-00447719225D}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">8</DTS:Property>
  <DTS:Variables>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{B40A237B-F161-45FE-B68B-9A7AF465CCC3}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="CitiIDsList">
      <DTS:VariableValue
        DTS:DataType="8">2644605,2650497,2650629,2657789,4608147,7299942</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{B5CFB3B8-4843-4737-8BC1-51465BA48561}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="Current_URL">
      <DTS:VariableValue
        DTS:DataType="8">https://api.openweathermap.org/data/2.5/group?id=</DTS:VariableValue>
    </DTS:Variable>
  </DTS:Variables>
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\DFT - Load Current Data"
      DTS:CreationName="Microsoft.Pipeline"
      DTS:Description="Data Flow Task"
      DTS:DTSID="{6FA6FFA0-EA34-4F3D-BD8C-DD7F39B4907C}"
      DTS:ExecutableType="Microsoft.Pipeline"
      DTS:LocaleID="-1"
      DTS:ObjectName="DFT - Load Current Data"
      DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
      <DTS:Variables />
      <DTS:ObjectData>
        <pipeline
          version="1">
          <components>
            <component
              refId="Package\DFT - Load Current Data\OLEDB_Dest - Load Stagging_CurrentData"
              componentClassID="Microsoft.OLEDBDestination"
              contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
              description="OLE DB Destination"
              name="OLEDB_Dest - Load Stagging_CurrentData"
              usesDispositions="true"
              version="4">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset">[Staging].[CurrentData_OLD]</property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Forces the use of the DefaultCodePage property value when describing character data."
                  name="AlwaysUseDefaultCodePage">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">3</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepIdentity">false</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepNulls">false</property>
                <property
                  dataType="System.String"
                  description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                  name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS</property>
                <property
                  dataType="System.Int32"
                  description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                  name="FastLoadMaxInsertCommitSize">2147483647</property>
              </properties>
              <connections>
                <connection
                  refId="Package\DFT - Load Current Data\OLEDB_Dest - Load Stagging_CurrentData.Connections[OleDbConnection]"
                  connectionManagerID="{2F0B9ABE-B0F6-4174-9360-6F341960A908}:external"
                  connectionManagerRefId="Project.ConnectionManagers[WeatherDWH_DBConnection]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\DFT - Load Current Data\OLEDB_Dest - Load Stagging_CurrentData.Inputs[OLE DB Destination Input]"
                  errorOrTruncationOperation="Insert"
                  errorRowDisposition="FailComponent"
                  hasSideEffects="true"
                  name="OLE DB Destination Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\DFT - Load Current Data\OLEDB_Dest - Load Stagging_CurrentData.Inputs[OLE DB Destination Input].Columns[Latitude]"
                      cachedDataType="wstr"
                      cachedLength="16"
                      cachedName="Latitude"
                      externalMetadataColumnId="Package\DFT - Load Current Data\OLEDB_Dest - Load Stagging_CurrentData.Inputs[OLE DB Destination Input].ExternalColumns[Latitude]"
                      lineageId="Package\DFT - Load Current Data\SCR - Extract Current Data from OWM API.Outputs[Output 0].Columns[Latitude]" />
                    <inputColumn
                      refId="Package\DFT - Load Current Data\OLEDB_Dest - Load Stagging_CurrentData.Inputs[OLE DB Destination Input].Columns[Longitude]"
                      cachedDataType="wstr"
                      cachedLength="16"
                      cachedName="Longitude"
                      externalMetadataColumnId="Package\DFT - Load Current Data\OLEDB_Dest - Load Stagging_CurrentData.Inputs[OLE DB Destination Input].ExternalColumns[Longitude]"
                      lineageId="Package\DFT - Load Current Data\SCR - Extract Current Data from OWM API.Outputs[Output 0].Columns[Longitude]" />
                    <inputColumn
                      refId="Package\DFT - Load Current Data\OLEDB_Dest - Load Stagging_CurrentData.Inputs[OLE DB Destination Input].Columns[CountryCode]"
                      cachedDataType="wstr"
                      cachedLength="2"
                      cachedName="CountryCode"
                      externalMetadataColumnId="Package\DFT - Load Current Data\OLEDB_Dest - Load Stagging_CurrentData.Inputs[OLE DB Destination Input].ExternalColumns[CountryCode]"
                      lineageId="Package\DFT - Load Current Data\SCR - Extract Current Data from OWM API.Outputs[Output 0].Columns[CountryCode]" />
                    <inputColumn
                      refId="Package\DFT - Load Current Data\OLEDB_Dest - Load Stagging_CurrentData.Inputs[OLE DB Destination Input].Columns[TimeZone]"
                      cachedDataType="wstr"
                      cachedLength="16"
                      cachedName="TimeZone"
                      externalMetadataColumnId="Package\DFT - Load Current Data\OLEDB_Dest - Load Stagging_CurrentData.Inputs[OLE DB Destination Input].ExternalColumns[TimeZone]"
                      lineageId="Package\DFT - Load Current Data\SCR - Extract Current Data from OWM API.Outputs[Output 0].Columns[TimeZone]" />
                    <inputColumn
                      refId="Package\DFT - Load Current Data\OLEDB_Dest - Load Stagging_CurrentData.Inputs[OLE DB Destination Input].Columns[Sunrise]"
                      cachedDataType="wstr"
                      cachedLength="12"
                      cachedName="Sunrise"
                      externalMetadataColumnId="Package\DFT - Load Current Data\OLEDB_Dest - Load Stagging_CurrentData.Inputs[OLE DB Destination Input].ExternalColumns[Sunrise]"
                      lineageId="Package\DFT - Load Current Data\SCR - Extract Current Data from OWM API.Outputs[Output 0].Columns[Sunrise]" />
                    <inputColumn
                      refId="Package\DFT - Load Current Data\OLEDB_Dest - Load Stagging_CurrentData.Inputs[OLE DB Destination Input].Columns[Sunset]"
                      cachedDataType="wstr"
                      cachedLength="12"
                      cachedName="Sunset"
                      externalMetadataColumnId="Package\DFT - Load Current Data\OLEDB_Dest - Load Stagging_CurrentData.Inputs[OLE DB Destination Input].ExternalColumns[Sunset]"
                      lineageId="Package\DFT - Load Current Data\SCR - Extract Current Data from OWM API.Outputs[Output 0].Columns[Sunset]" />
                    <inputColumn
                      refId="Package\DFT - Load Current Data\OLEDB_Dest - Load Stagging_CurrentData.Inputs[OLE DB Destination Input].Columns[Cnt]"
                      cachedDataType="i4"
                      cachedName="Cnt"
                      externalMetadataColumnId="Package\DFT - Load Current Data\OLEDB_Dest - Load Stagging_CurrentData.Inputs[OLE DB Destination Input].ExternalColumns[Cnt]"
                      lineageId="Package\DFT - Load Current Data\SCR - Extract Current Data from OWM API.Outputs[Output 0].Columns[Cnt]" />
                    <inputColumn
                      refId="Package\DFT - Load Current Data\OLEDB_Dest - Load Stagging_CurrentData.Inputs[OLE DB Destination Input].Columns[WeatherID]"
                      cachedDataType="i4"
                      cachedName="WeatherID"
                      externalMetadataColumnId="Package\DFT - Load Current Data\OLEDB_Dest - Load Stagging_CurrentData.Inputs[OLE DB Destination Input].ExternalColumns[WeatherID]"
                      lineageId="Package\DFT - Load Current Data\SCR - Extract Current Data from OWM API.Outputs[Output 0].Columns[WeatherID]" />
                    <inputColumn
                      refId="Package\DFT - Load Current Data\OLEDB_Dest - Load Stagging_CurrentData.Inputs[OLE DB Destination Input].Columns[WeatherMain]"
                      cachedDataType="wstr"
                      cachedLength="60"
                      cachedName="WeatherMain"
                      externalMetadataColumnId="Package\DFT - Load Current Data\OLEDB_Dest - Load Stagging_CurrentData.Inputs[OLE DB Destination Input].ExternalColumns[WeatherMain]"
                      lineageId="Package\DFT - Load Current Data\SCR - Extract Current Data from OWM API.Outputs[Output 0].Columns[WeatherMain]" />
                    <inputColumn
                      refId="Package\DFT - Load Current Data\OLEDB_Dest - Load Stagging_CurrentData.Inputs[OLE DB Destination Input].Columns[WeatherIcon]"
                      cachedDataType="wstr"
                      cachedLength="10"
                      cachedName="WeatherIcon"
                      externalMetadataColumnId="Package\DFT - Load Current Data\OLEDB_Dest - Load Stagging_CurrentData.Inputs[OLE DB Destination Input].ExternalColumns[WeatherIcon]"
                      lineageId="Package\DFT - Load Current Data\SCR - Extract Current Data from OWM API.Outputs[Output 0].Columns[WeatherIcon]" />
                    <inputColumn
                      refId="Package\DFT - Load Current Data\OLEDB_Dest - Load Stagging_CurrentData.Inputs[OLE DB Destination Input].Columns[Pressure]"
                      cachedDataType="i4"
                      cachedName="Pressure"
                      externalMetadataColumnId="Package\DFT - Load Current Data\OLEDB_Dest - Load Stagging_CurrentData.Inputs[OLE DB Destination Input].ExternalColumns[Pressure]"
                      lineageId="Package\DFT - Load Current Data\SCR - Extract Current Data from OWM API.Outputs[Output 0].Columns[Pressure]" />
                    <inputColumn
                      refId="Package\DFT - Load Current Data\OLEDB_Dest - Load Stagging_CurrentData.Inputs[OLE DB Destination Input].Columns[Humidity]"
                      cachedDataType="i4"
                      cachedName="Humidity"
                      externalMetadataColumnId="Package\DFT - Load Current Data\OLEDB_Dest - Load Stagging_CurrentData.Inputs[OLE DB Destination Input].ExternalColumns[Humidity]"
                      lineageId="Package\DFT - Load Current Data\SCR - Extract Current Data from OWM API.Outputs[Output 0].Columns[Humidity]" />
                    <inputColumn
                      refId="Package\DFT - Load Current Data\OLEDB_Dest - Load Stagging_CurrentData.Inputs[OLE DB Destination Input].Columns[Visibility]"
                      cachedDataType="i4"
                      cachedName="Visibility"
                      externalMetadataColumnId="Package\DFT - Load Current Data\OLEDB_Dest - Load Stagging_CurrentData.Inputs[OLE DB Destination Input].ExternalColumns[Visibility]"
                      lineageId="Package\DFT - Load Current Data\SCR - Extract Current Data from OWM API.Outputs[Output 0].Columns[Visibility]" />
                    <inputColumn
                      refId="Package\DFT - Load Current Data\OLEDB_Dest - Load Stagging_CurrentData.Inputs[OLE DB Destination Input].Columns[WindSpeed]"
                      cachedDataType="decimal"
                      cachedName="WindSpeed"
                      externalMetadataColumnId="Package\DFT - Load Current Data\OLEDB_Dest - Load Stagging_CurrentData.Inputs[OLE DB Destination Input].ExternalColumns[WindSpeed]"
                      lineageId="Package\DFT - Load Current Data\SCR - Extract Current Data from OWM API.Outputs[Output 0].Columns[WindSpeed]" />
                    <inputColumn
                      refId="Package\DFT - Load Current Data\OLEDB_Dest - Load Stagging_CurrentData.Inputs[OLE DB Destination Input].Columns[WindDeg]"
                      cachedDataType="decimal"
                      cachedName="WindDeg"
                      externalMetadataColumnId="Package\DFT - Load Current Data\OLEDB_Dest - Load Stagging_CurrentData.Inputs[OLE DB Destination Input].ExternalColumns[WindDeg]"
                      lineageId="Package\DFT - Load Current Data\SCR - Extract Current Data from OWM API.Outputs[Output 0].Columns[WindDeg]" />
                    <inputColumn
                      refId="Package\DFT - Load Current Data\OLEDB_Dest - Load Stagging_CurrentData.Inputs[OLE DB Destination Input].Columns[CitiID]"
                      cachedDataType="i4"
                      cachedName="CitiID"
                      externalMetadataColumnId="Package\DFT - Load Current Data\OLEDB_Dest - Load Stagging_CurrentData.Inputs[OLE DB Destination Input].ExternalColumns[CityID]"
                      lineageId="Package\DFT - Load Current Data\SCR - Extract Current Data from OWM API.Outputs[Output 0].Columns[CitiID]" />
                    <inputColumn
                      refId="Package\DFT - Load Current Data\OLEDB_Dest - Load Stagging_CurrentData.Inputs[OLE DB Destination Input].Columns[CitiName]"
                      cachedDataType="wstr"
                      cachedLength="60"
                      cachedName="CitiName"
                      externalMetadataColumnId="Package\DFT - Load Current Data\OLEDB_Dest - Load Stagging_CurrentData.Inputs[OLE DB Destination Input].ExternalColumns[CityName]"
                      lineageId="Package\DFT - Load Current Data\SCR - Extract Current Data from OWM API.Outputs[Output 0].Columns[CitiName]" />
                    <inputColumn
                      refId="Package\DFT - Load Current Data\OLEDB_Dest - Load Stagging_CurrentData.Inputs[OLE DB Destination Input].Columns[WeatherDescription]"
                      cachedDataType="wstr"
                      cachedLength="100"
                      cachedName="WeatherDescription"
                      externalMetadataColumnId="Package\DFT - Load Current Data\OLEDB_Dest - Load Stagging_CurrentData.Inputs[OLE DB Destination Input].ExternalColumns[WeatherDesc]"
                      lineageId="Package\DFT - Load Current Data\SCR - Extract Current Data from OWM API.Outputs[Output 0].Columns[WeatherDescription]" />
                    <inputColumn
                      refId="Package\DFT - Load Current Data\OLEDB_Dest - Load Stagging_CurrentData.Inputs[OLE DB Destination Input].Columns[Temparature]"
                      cachedDataType="decimal"
                      cachedName="Temparature"
                      externalMetadataColumnId="Package\DFT - Load Current Data\OLEDB_Dest - Load Stagging_CurrentData.Inputs[OLE DB Destination Input].ExternalColumns[Temperature]"
                      lineageId="Package\DFT - Load Current Data\SCR - Extract Current Data from OWM API.Outputs[Output 0].Columns[Temparature]" />
                    <inputColumn
                      refId="Package\DFT - Load Current Data\OLEDB_Dest - Load Stagging_CurrentData.Inputs[OLE DB Destination Input].Columns[TempMin]"
                      cachedDataType="decimal"
                      cachedName="TempMin"
                      externalMetadataColumnId="Package\DFT - Load Current Data\OLEDB_Dest - Load Stagging_CurrentData.Inputs[OLE DB Destination Input].ExternalColumns[Temp_Min]"
                      lineageId="Package\DFT - Load Current Data\SCR - Extract Current Data from OWM API.Outputs[Output 0].Columns[TempMin]" />
                    <inputColumn
                      refId="Package\DFT - Load Current Data\OLEDB_Dest - Load Stagging_CurrentData.Inputs[OLE DB Destination Input].Columns[TempMax]"
                      cachedDataType="decimal"
                      cachedName="TempMax"
                      externalMetadataColumnId="Package\DFT - Load Current Data\OLEDB_Dest - Load Stagging_CurrentData.Inputs[OLE DB Destination Input].ExternalColumns[Temp_Max]"
                      lineageId="Package\DFT - Load Current Data\SCR - Extract Current Data from OWM API.Outputs[Output 0].Columns[TempMax]" />
                    <inputColumn
                      refId="Package\DFT - Load Current Data\OLEDB_Dest - Load Stagging_CurrentData.Inputs[OLE DB Destination Input].Columns[Cloudiness]"
                      cachedDataType="i4"
                      cachedName="Cloudiness"
                      externalMetadataColumnId="Package\DFT - Load Current Data\OLEDB_Dest - Load Stagging_CurrentData.Inputs[OLE DB Destination Input].ExternalColumns[Cloudniess]"
                      lineageId="Package\DFT - Load Current Data\SCR - Extract Current Data from OWM API.Outputs[Output 0].Columns[Cloudiness]" />
                    <inputColumn
                      refId="Package\DFT - Load Current Data\OLEDB_Dest - Load Stagging_CurrentData.Inputs[OLE DB Destination Input].Columns[CalculatedDate]"
                      cachedDataType="wstr"
                      cachedLength="12"
                      cachedName="CalculatedDate"
                      externalMetadataColumnId="Package\DFT - Load Current Data\OLEDB_Dest - Load Stagging_CurrentData.Inputs[OLE DB Destination Input].ExternalColumns[CalulatedDateTime]"
                      lineageId="Package\DFT - Load Current Data\SCR - Extract Current Data from OWM API.Outputs[Output 0].Columns[CalculatedDate]" />
                  </inputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\DFT - Load Current Data\OLEDB_Dest - Load Stagging_CurrentData.Inputs[OLE DB Destination Input].ExternalColumns[CityID]"
                      dataType="i4"
                      name="CityID" />
                    <externalMetadataColumn
                      refId="Package\DFT - Load Current Data\OLEDB_Dest - Load Stagging_CurrentData.Inputs[OLE DB Destination Input].ExternalColumns[CityName]"
                      dataType="wstr"
                      length="60"
                      name="CityName" />
                    <externalMetadataColumn
                      refId="Package\DFT - Load Current Data\OLEDB_Dest - Load Stagging_CurrentData.Inputs[OLE DB Destination Input].ExternalColumns[Latitude]"
                      dataType="wstr"
                      length="16"
                      name="Latitude" />
                    <externalMetadataColumn
                      refId="Package\DFT - Load Current Data\OLEDB_Dest - Load Stagging_CurrentData.Inputs[OLE DB Destination Input].ExternalColumns[Longitude]"
                      dataType="wstr"
                      length="16"
                      name="Longitude" />
                    <externalMetadataColumn
                      refId="Package\DFT - Load Current Data\OLEDB_Dest - Load Stagging_CurrentData.Inputs[OLE DB Destination Input].ExternalColumns[CountryCode]"
                      dataType="wstr"
                      length="2"
                      name="CountryCode" />
                    <externalMetadataColumn
                      refId="Package\DFT - Load Current Data\OLEDB_Dest - Load Stagging_CurrentData.Inputs[OLE DB Destination Input].ExternalColumns[TimeZone]"
                      dataType="wstr"
                      length="16"
                      name="TimeZone" />
                    <externalMetadataColumn
                      refId="Package\DFT - Load Current Data\OLEDB_Dest - Load Stagging_CurrentData.Inputs[OLE DB Destination Input].ExternalColumns[Sunrise]"
                      dataType="wstr"
                      length="12"
                      name="Sunrise" />
                    <externalMetadataColumn
                      refId="Package\DFT - Load Current Data\OLEDB_Dest - Load Stagging_CurrentData.Inputs[OLE DB Destination Input].ExternalColumns[Sunset]"
                      dataType="wstr"
                      length="12"
                      name="Sunset" />
                    <externalMetadataColumn
                      refId="Package\DFT - Load Current Data\OLEDB_Dest - Load Stagging_CurrentData.Inputs[OLE DB Destination Input].ExternalColumns[Cnt]"
                      dataType="i4"
                      name="Cnt" />
                    <externalMetadataColumn
                      refId="Package\DFT - Load Current Data\OLEDB_Dest - Load Stagging_CurrentData.Inputs[OLE DB Destination Input].ExternalColumns[WeatherID]"
                      dataType="i4"
                      name="WeatherID" />
                    <externalMetadataColumn
                      refId="Package\DFT - Load Current Data\OLEDB_Dest - Load Stagging_CurrentData.Inputs[OLE DB Destination Input].ExternalColumns[WeatherMain]"
                      dataType="wstr"
                      length="60"
                      name="WeatherMain" />
                    <externalMetadataColumn
                      refId="Package\DFT - Load Current Data\OLEDB_Dest - Load Stagging_CurrentData.Inputs[OLE DB Destination Input].ExternalColumns[WeatherDesc]"
                      dataType="wstr"
                      length="100"
                      name="WeatherDesc" />
                    <externalMetadataColumn
                      refId="Package\DFT - Load Current Data\OLEDB_Dest - Load Stagging_CurrentData.Inputs[OLE DB Destination Input].ExternalColumns[WeatherIcon]"
                      dataType="wstr"
                      length="10"
                      name="WeatherIcon" />
                    <externalMetadataColumn
                      refId="Package\DFT - Load Current Data\OLEDB_Dest - Load Stagging_CurrentData.Inputs[OLE DB Destination Input].ExternalColumns[Temperature]"
                      dataType="numeric"
                      name="Temperature"
                      precision="5"
                      scale="2" />
                    <externalMetadataColumn
                      refId="Package\DFT - Load Current Data\OLEDB_Dest - Load Stagging_CurrentData.Inputs[OLE DB Destination Input].ExternalColumns[Pressure]"
                      dataType="i2"
                      name="Pressure" />
                    <externalMetadataColumn
                      refId="Package\DFT - Load Current Data\OLEDB_Dest - Load Stagging_CurrentData.Inputs[OLE DB Destination Input].ExternalColumns[Humidity]"
                      dataType="i2"
                      name="Humidity" />
                    <externalMetadataColumn
                      refId="Package\DFT - Load Current Data\OLEDB_Dest - Load Stagging_CurrentData.Inputs[OLE DB Destination Input].ExternalColumns[Temp_Min]"
                      dataType="numeric"
                      name="Temp_Min"
                      precision="5"
                      scale="2" />
                    <externalMetadataColumn
                      refId="Package\DFT - Load Current Data\OLEDB_Dest - Load Stagging_CurrentData.Inputs[OLE DB Destination Input].ExternalColumns[Temp_Max]"
                      dataType="numeric"
                      name="Temp_Max"
                      precision="5"
                      scale="2" />
                    <externalMetadataColumn
                      refId="Package\DFT - Load Current Data\OLEDB_Dest - Load Stagging_CurrentData.Inputs[OLE DB Destination Input].ExternalColumns[Visibility]"
                      dataType="i4"
                      name="Visibility" />
                    <externalMetadataColumn
                      refId="Package\DFT - Load Current Data\OLEDB_Dest - Load Stagging_CurrentData.Inputs[OLE DB Destination Input].ExternalColumns[WindSpeed]"
                      dataType="wstr"
                      length="6"
                      name="WindSpeed" />
                    <externalMetadataColumn
                      refId="Package\DFT - Load Current Data\OLEDB_Dest - Load Stagging_CurrentData.Inputs[OLE DB Destination Input].ExternalColumns[WindDeg]"
                      dataType="numeric"
                      name="WindDeg"
                      precision="6"
                      scale="3" />
                    <externalMetadataColumn
                      refId="Package\DFT - Load Current Data\OLEDB_Dest - Load Stagging_CurrentData.Inputs[OLE DB Destination Input].ExternalColumns[Cloudniess]"
                      dataType="i2"
                      name="Cloudniess" />
                    <externalMetadataColumn
                      refId="Package\DFT - Load Current Data\OLEDB_Dest - Load Stagging_CurrentData.Inputs[OLE DB Destination Input].ExternalColumns[CalulatedDateTime]"
                      dataType="wstr"
                      length="16"
                      name="CalulatedDateTime" />
                    <externalMetadataColumn
                      refId="Package\DFT - Load Current Data\OLEDB_Dest - Load Stagging_CurrentData.Inputs[OLE DB Destination Input].ExternalColumns[InsertedDateTime]"
                      dataType="dbTimeStamp"
                      name="InsertedDateTime" />
                  </externalMetadataColumns>
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\DFT - Load Current Data\OLEDB_Dest - Load Stagging_CurrentData.Outputs[OLE DB Destination Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="OLE DB Destination Error Output"
                  synchronousInputId="Package\DFT - Load Current Data\OLEDB_Dest - Load Stagging_CurrentData.Inputs[OLE DB Destination Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\DFT - Load Current Data\OLEDB_Dest - Load Stagging_CurrentData.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\DFT - Load Current Data\OLEDB_Dest - Load Stagging_CurrentData.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\DFT - Load Current Data\OLEDB_Dest - Load Stagging_CurrentData.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\DFT - Load Current Data\OLEDB_Dest - Load Stagging_CurrentData.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\DFT - Load Current Data\SCR - Extract Current Data from OWM API"
              componentClassID="Microsoft.ManagedComponentHost"
              contactInfo="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum.;Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;11"
              description="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum."
              name="SCR - Extract Current Data from OWM API"
              version="11">
              <properties>
                <property
                  dataType="System.String"
                  description="Stores the source code of the component"
                  isArray="true"
                  name="SourceCode"
                  state="cdata">
                  <arrayElements
                    arrayElementCount="33">
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Resources.resx]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[main.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[#region Help:  Introduction to the Script Component
/* The Script Component allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services data flow.
 *
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script component. */
#endregion

#region Namespaces
using System;
using System.Collections.Generic;
using System.Data;
using System.Web.Script.Serialization;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;
#endregion

/// <summary>
/// This is the class to which to add your code.  Do not change the name, attributes, or parent
/// of this class.
/// </summary>
[Microsoft.SqlServer.Dts.Pipeline.SSISScriptComponentEntryPointAttribute]
public class ScriptMain : UserComponent
{
    #region Help:  Using Integration Services variables and parameters
    /* To use a variable in this script, first ensure that the variable has been added to
     * either the list contained in the ReadOnlyVariables property or the list contained in
     * the ReadWriteVariables property of this script component, according to whether or not your
     * code needs to write into the variable.  To do so, save this script, close this instance of
     * Visual Studio, and update the ReadOnlyVariables and ReadWriteVariables properties in the
     * Script Transformation Editor window.
     * To use a parameter in this script, follow the same steps. Parameters are always read-only.
     *
     * Example of reading from a variable or parameter:
     *  DateTime startTime = Variables.MyStartTime;
     *
     * Example of writing to a variable:
     *  Variables.myStringVariable = "new value";
     */
    #endregion

    #region Help:  Using Integration Services Connnection Managers
    /* Some types of connection managers can be used in this script component.  See the help topic
     * "Working with Connection Managers Programatically" for details.
     *
     * To use a connection manager in this script, first ensure that the connection manager has
     * been added to either the list of connection managers on the Connection Managers page of the
     * script component editor.  To add the connection manager, save this script, close this instance of
     * Visual Studio, and add the Connection Manager to the list.
     *
     * If the component needs to hold a connection open while processing rows, override the
     * AcquireConnections and ReleaseConnections methods.
     * 
     * Example of using an ADO.Net connection manager to acquire a SqlConnection:
     *  object rawConnection = Connections.SalesDB.AcquireConnection(transaction);
     *  SqlConnection salesDBConn = (SqlConnection)rawConnection;
     *
     * Example of using a File connection manager to acquire a file path:
     *  object rawConnection = Connections.Prices_zip.AcquireConnection(transaction);
     *  string filePath = (string)rawConnection;
     *
     * Example of releasing a connection manager:
     *  Connections.SalesDB.ReleaseConnection(rawConnection);
     */
    #endregion

    #region Help:  Firing Integration Services Events
    /* This script component can fire events.
     *
     * Example of firing an error event:
     *  ComponentMetaData.FireError(10, "Process Values", "Bad value", "", 0, out cancel);
     *
     * Example of firing an information event:
     *  ComponentMetaData.FireInformation(10, "Process Values", "Processing has started", "", 0, fireAgain);
     *
     * Example of firing a warning event:
     *  ComponentMetaData.FireWarning(10, "Process Values", "No rows were received", "", 0);
     */
    #endregion

    /// <summary>
    /// This method is called once, before rows begin to be processed in the data flow.
    ///
    /// You can remove this method if you don't need to do anything here.
    /// </summary>
    public override void PreExecute()
    {
        base.PreExecute();
        /*
         * Add your code here
         */
    }

    /// <summary>
    /// This method is called after all the rows have passed through this component.
    ///
    /// You can delete this method if you don't need to do anything here.
    /// </summary>
    public override void PostExecute()
    {
        base.PostExecute();
        /*
         * Add your code here
         */
    }

    public override void CreateNewOutputRows()
    {
        /*
          Add rows by calling the AddRow method on the member variable named "<Output Name>Buffer".
          For example, call MyOutputBuffer.AddRow() if your output was named "MyOutput".
        */
        var currentUrl = Variables.CurrentURL;
        var citiIdsList = Variables.CitiIDsList;
        var units = Variables.Units;
        var apiKey = Variables.APIKey;

        //Set URL for the location 
        var apiUrl = currentUrl + citiIdsList + "&units=" + units + "&appid=" + apiKey;

        //Read file from web
        var textFromFile = (new System.Net.WebClient()).DownloadString(apiUrl);

        var data = new JavaScriptSerializer().Deserialize<RootObject>(textFromFile);
        
        foreach (var item in data.list)
        {
            foreach (var weather in item.weather)
            {
                Output0Buffer.AddRow();
                Output0Buffer.CitiID = item.id;
                Output0Buffer.CitiName = item.name;
                Output0Buffer.Latitude = item.coord.lat;
                Output0Buffer.Longitude = item.coord.lon;
                Output0Buffer.CountryCode = item.sys.country;
                Output0Buffer.TimeZone = item.sys.timezone;
                Output0Buffer.Sunrise = item.sys.sunrise;
                Output0Buffer.Sunset = item.sys.sunset;
                Output0Buffer.Cnt = data.cnt;
                Output0Buffer.WeatherID = weather.id;
                Output0Buffer.WeatherMain = weather.main;
                Output0Buffer.WeatherDescription = weather.description;
                Output0Buffer.WeatherIcon = weather.icon;
                Output0Buffer.Temparature = item.main.temp;
                Output0Buffer.Pressure = item.main.pressure;
                Output0Buffer.Humidity = item.main.humidity;
                Output0Buffer.TempMin = item.main.temp_min;
                Output0Buffer.TempMax = item.main.temp_max;
                Output0Buffer.Visibility = item.visibility;
                Output0Buffer.WindSpeed = item.wind.speed;
                Output0Buffer.WindDeg = item.wind.deg;
                Output0Buffer.Cloudiness = item.clouds.all;
                Output0Buffer.CalculatedDate = item.dt;

            }
            
        }
    }
    public class Coord
    {
        public string lon { get; set; }
        public string lat { get; set; }
    }

    public class Sys
    {
        public int type { get; set; }
        public int id { get; set; }
        public double message { get; set; }
        public string country { get; set; }
        public string sunrise { get; set; }
        public string sunset { get; set; }
        public string timezone { get; set; }
    }

    public class Weather
    {
        public int id { get; set; }
        public string main { get; set; }
        public string description { get; set; }
        public string icon { get; set; }
    }

    public class Main
    {
        public decimal temp { get; set; }
        public int pressure { get; set; }
        public int humidity { get; set; }
        public decimal temp_min { get; set; }
        public decimal temp_max { get; set; }
    }

    public class Wind
    {
        public decimal speed { get; set; }
        public decimal deg { get; set; }
    }

    public class Clouds
    {
        public int all { get; set; }
    }

    public class WeatherData
    {
        public Coord coord { get; set; }
        public Sys sys { get; set; }
        public List<Weather> weather { get; set; }
        public Main main { get; set; }
        public int visibility { get; set; }
        public Wind wind { get; set; }
        public Clouds clouds { get; set; }
        public string dt { get; set; }
        public int id { get; set; }
        public string name { get; set; }
        
    }
    public class RootObject
    {
        public int cnt { get; set; }

        public List<WeatherData> list { get; set; }
    }
}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[BufferWrapper.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services buffer wrappers
*  This module defines classes for accessing data flow buffers
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */



using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;

public class Output0Buffer: ScriptBuffer

{
    public Output0Buffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public Int32 CitiID
    {
        set
        {
            this[0] = value;
        }
    }
    public bool CitiID_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(0);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String CitiName
    {
        set
        {
            this[1] = value;
        }
    }
    public bool CitiName_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(1);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String Latitude
    {
        set
        {
            this[2] = value;
        }
    }
    public bool Latitude_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(2);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String Longitude
    {
        set
        {
            this[3] = value;
        }
    }
    public bool Longitude_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(3);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String CountryCode
    {
        set
        {
            this[4] = value;
        }
    }
    public bool CountryCode_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(4);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String TimeZone
    {
        set
        {
            this[5] = value;
        }
    }
    public bool TimeZone_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(5);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String Sunrise
    {
        set
        {
            this[6] = value;
        }
    }
    public bool Sunrise_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(6);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String Sunset
    {
        set
        {
            this[7] = value;
        }
    }
    public bool Sunset_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(7);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Int32 Cnt
    {
        set
        {
            this[8] = value;
        }
    }
    public bool Cnt_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(8);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Int32 WeatherID
    {
        set
        {
            this[9] = value;
        }
    }
    public bool WeatherID_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(9);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String WeatherMain
    {
        set
        {
            this[10] = value;
        }
    }
    public bool WeatherMain_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(10);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String WeatherDescription
    {
        set
        {
            this[11] = value;
        }
    }
    public bool WeatherDescription_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(11);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String WeatherIcon
    {
        set
        {
            this[12] = value;
        }
    }
    public bool WeatherIcon_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(12);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Decimal Temparature
    {
        set
        {
            this[13] = value;
        }
    }
    public bool Temparature_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(13);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Int32 Pressure
    {
        set
        {
            this[14] = value;
        }
    }
    public bool Pressure_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(14);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Int32 Humidity
    {
        set
        {
            this[15] = value;
        }
    }
    public bool Humidity_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(15);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Decimal TempMin
    {
        set
        {
            this[16] = value;
        }
    }
    public bool TempMin_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(16);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Decimal TempMax
    {
        set
        {
            this[17] = value;
        }
    }
    public bool TempMax_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(17);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Int32 Visibility
    {
        set
        {
            this[18] = value;
        }
    }
    public bool Visibility_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(18);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Decimal WindSpeed
    {
        set
        {
            this[19] = value;
        }
    }
    public bool WindSpeed_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(19);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Decimal WindDeg
    {
        set
        {
            this[20] = value;
        }
    }
    public bool WindDeg_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(20);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Int32 Cloudiness
    {
        set
        {
            this[21] = value;
        }
    }
    public bool Cloudiness_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(21);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String CalculatedDate
    {
        set
        {
            this[22] = value;
        }
    }
    public bool CalculatedDate_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(22);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    new public void AddRow()
    {
        base.AddRow();
    }

    new public void SetEndOfRowset()
    {
        base.SetEndOfRowset();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[ComponentWrapper.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services component wrapper
*  This module defines the base class for your component
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

public class UserComponent: ScriptComponent
{
    public Connections Connections;
    public Variables Variables;
    public UserComponent()
    {
        Connections = new Connections(this);
        Variables = new Variables(this);
    }

    public Output0Buffer Output0Buffer;

    public virtual void FinishOutputs()
    {
    }

    private void MarkOutputsFinished()
    {

        if (null != Output0Buffer)
        {
            Output0Buffer.SetEndOfRowset();
            Output0Buffer = null;
        }

    }

    public override void PrimeOutput(int Outputs, int[] OutputIDs, PipelineBuffer[] Buffers, OutputNameMap OutputMap)
    {
       for(int Idx = 0; Idx < Outputs; Idx++)
       {
            if(OutputIDs[Idx] == GetOutputID(OutputMap, @"Output 0"))
            {
                Output0Buffer = new Output0Buffer(Buffers[Idx], GetColumnIndexes(OutputIDs[Idx]), OutputMap);
            }
        }

        CreateNewOutputRows();

        FinishOutputs();
        MarkOutputsFinished();

    }

    public virtual void CreateNewOutputRows()
    {
    }

}

public class Connections
{
    ScriptComponent ParentComponent;

    public Connections(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}

public class Variables
{
    ScriptComponent ParentComponent;

    public Variables(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

    public String APIKey
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["APIKey"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public String CitiIDsList
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["CitiIDsList"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public String CurrentURL
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["Current_URL"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public String Units
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["Units"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Settings.Designer.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_c7a065bb6a644cc4b6959cd6b4c5300c.Properties.Settings.get_Default():SC_c7a065bb6a644cc4b6959cd6b4c5300c.Properties.Sett" +
    "ings")]

namespace SC_c7a065bb6a644cc4b6959cd6b4c5300c.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[SC_c7a065bb6a644cc4b6959cd6b4c5300c.csproj]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{DFBDEB16-1293-4E57-8AA0-13AB42A2A5BC}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>SC_c7a065bb6a644cc4b6959cd6b4c5300c</RootNamespace>
    <AssemblyName>SC_c7a065bb6a644cc4b6959cd6b4c5300c</AssemblyName>
    <TargetFrameworkVersion>v4.5</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Web.Extensions" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.TxScript, Version=14.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSRuntimeWrap, Version=14.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSPipelineWrap, Version=14.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.PipelineHost, Version=14.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Compile Include="main.cs" />
    <Compile Include="BufferWrapper.cs" />
    <Compile Include="ComponentWrapper.cs" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <!-- This section defines VSTA properties that describe the host-changable project properties. -->
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" />
        <Host Name="ScriptComponent" IconIndex="0" />
        <ProjectClient>
          <HostIdentifier>SSIS_SC140</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Project]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:CodeName>SC_c7a065bb6a644cc4b6959cd6b4c5300c</msb:CodeName>
    <msb:Language>msBuild</msb:Language>
    <msb:DisplayName>SC_c7a065bb6a644cc4b6959cd6b4c5300c</msb:DisplayName>
    <msb:ProjectId>{F324F08A-77FF-4DC0-BD65-1E0898A0F93B}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="SC_c7a065bb6a644cc4b6959cd6b4c5300c.csproj" />
    <msb:File Include="ComponentWrapper.cs" />
    <msb:File Include="Properties\Settings.Designer.cs" />
    <msb:File Include="main.cs" />
    <msb:File Include="BufferWrapper.cs" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="Properties\Resources.resx" />
    <msb:File Include="Properties\Resources.Designer.cs" />
  </msb:ItemGroup>
</c:Project>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\AssemblyInfo.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("SC_c7a065bb6a644cc4b6959cd6b4c5300c")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("SC_c7a065bb6a644cc4b6959cd6b4c5300c")]
[assembly: AssemblyCopyright("Copyright @  2019")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.0.0")]
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Settings.settings]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Resources.Designer.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_c7a065bb6a644cc4b6959cd6b4c5300c.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_c7a065bb6a644cc4b6959cd6b4c5300c.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_c7a065bb6a644cc4b6959cd6b4c5300c.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace SC_c7a065bb6a644cc4b6959cd6b4c5300c.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SC_c7a065bb6a644cc4b6959cd6b4c5300c.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[packages.config]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<packages>
  <package id="Newtonsoft.Json" version="12.0.2" targetFramework="net45" />
</packages>]]></arrayElement>
                  </arrayElements>
                </property>
                <property
                  dataType="System.String"
                  description="Stores the binary representation of the component"
                  isArray="true"
                  name="BinaryCode"
                  state="cdata">
                  <arrayElements
                    arrayElementCount="2">
                    <arrayElement
                      dataType="System.String"><![CDATA[SC_c7a065bb6a644cc4b6959cd6b4c5300c.dll]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[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
6gcSACIG6gcSAGoFvAoGANsHNAoSAMAOYQ4WAFgM5goGAF0ENAoGAEEANAoGABgLNAoaABEAMAwa
AAEAMAxbAI0PAAAaACIAMAwGAPQENAoGAGkENAoGAPkPBgsAAAAARwAAAAAAAQABAAEAEABjCgAA
EAABAAEAAQAQANILAABNAAEABQABABAAyg4AAFkAAQA3AAEAEADODQAAQQAEADwAAQAQAIANAABB
AAUAPQAAABAA6QxFDUEABgBCAAABEACvDUUNcQAIAEYAAgAQAPADAABBAAkASQACABAAHQ4AAEEA
CwBOAAIAEAAQDAAAQQASAF0AAgAQAGkKAABBABYAZgACABAA2QMAAEEAGwBxAAIAEAClDAAAQQAd
AHYAAgAQAIQAAABBAB4AeQACABAASA4AAEEAKACOAAYAzg3oAAYAgA3sAAYA0gvwAAEA2A70AAEA
2A70ABEAOwr4ABEAWgX8ABEACgQAAQEAkwIEAQEABAMEAQEAvQEHAQEAMwEHAQEAdAEKAQEAigME
AQEA7QEEAQEALQMEAQEAowEEAQEAMwEHAQEAMAIEAQEAdgIEAQEAYAIEAQEAqAINAQEA0wEHAQEA
owMHAQEARgINAQEAcAMNAQEAHAENAQEABgINAQEAGwIHAQEAXQERAQEA7wIVAQEAvgIZAQEAMAIh
AQEAvQMHAQEARwElAQEA1wIpAQEAGQMEAQEAMwEHAQEAjQEEAQEARQMHAQEAWgMtAVAgAAAAAMYA
dAcGAAEAWCAAAAAAxgB/BwYAAQBgIAAAAADGAAkOBgABAHwjAAAAAIYYewwGAAEAhCMAAAAAhhh7
DHsAAQCPIwAAAACGCFAAAQAEAJ4jAAAAAIYIOAg1AQUAtSMAAAAAhgiNBBAABgC/IwAAAACGCLQI
NQEHANYjAAAAAIYIOAQQAAgA4CMAAAAAhgigCDUBCQD3IwAAAACGCCoEEAAKAAEkAAAAAIYIiwg1
AQsAGCQAAAAAhggaBBAADAAiJAAAAACGCHQINQENADkkAAAAAIYIzQQQAA4AQyQAAAAAhgjICDUB
DwBaJAAAAACGCIIFEAAQAGQkAAAAAIYIBwk1AREAeyQAAAAAhghsDhAAEgCFJAAAAACGCLwJNQET
AJwkAAAAAIYIqA4BABQAqyQAAAAAhgjOCTUBFQDCJAAAAACGCFsAAQAWANIkAAAAAIYISgg1ARcA
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
iwcAAAEAiwcAAAEAiwcAAAEAiwcAAAEAiwcAAAEAiwcAAAEAiwcAAAEAiwcAAAEAiwcAAAEAiwcA
AAEAiwcAAAEAiwcAAAEAiwcAAAEAiwcAAAEAiwcAAAEAiwcAAAEAiwcAAAEAiwcAAAEAiwcAAAEA
iwcAAAEAiwcAAAEAiwcAAAEAiwcAAAEAiwcAAAEAiwcAAAEAiwcAAAEAiwcAAAEAiwcAAAEAAQ4A
AAIAiAwAAAMA2g0AAAQAkwsAAAEA7g4AAAEA7g4AAAEAiwcAAAEAiwcAAAEAiwcAAAEAiwcAAAEA
iwcAAAEAiwcAAAEAiwcAAAEAiwcAAAEAiwcAAAEAiwcAAAEAiwcAAAEAiwcAAAEAiwcAAAEAiwcA
AAEAiwcAAAEAiwcAAAEAiwcAAAEAiwcAAAEAiwcAAAEAiwcAAAEAiwcAAAEAiwcAAAEAiwcAAAEA
iwcAAAEAiwcAAAEAiwcAAAEAiwcAAAEAiwcAAAEAiwcAAAEAiwcAAAEAiwcAAAEAiwcAAAEAiwcA
AAEAiwcJAHsMAQARAHsMBgAZAHsMCgApAHsMEAAxAHsMEAA5AHsMEABBAHsMEABJAHsMEABRAHsM
EABZAHsMEABhAHsMEABpAHsMBgCJAHsMBgC5AHsMBgDZAHsMFQCxAHQHBgCxAH8HBgDpADEONgDx
AHsMBgDxANMHPAD5AHsMBgD5AJEHQQAMAG0MVAAUAPgOZAAcAG0MVAAkAPgOZAAkAHAPdwABAaYF
BgAUAHAPdwCZAHsMewCZACsKhQCZABoKAQARAXsMEACZAL0PBgCZAI0OBgCZAJAOdwCxAHsMBgCx
AGkAjwCxAJ4NlgCBAHsMBgCxAHQNnAAZASIKogCxAKgPqQAhAXkPrwA5AXsEtgA5AfUPvwDBAHsM
xQDhAHsMBgAuAAsALQIuABMANgIuABsAVQIuACMAXgIuACsAhwIuADMAhwIuADsAhwIuAEMAXgIu
AEsAjQIuAFMAhwIuAFsApAJDAGMA7gLjAHMA7gIBAWsA7gIhAWsA7gJBAWsA7gJhAWsA7gKBAWsA
7gKhAWsA7gLBAWsA7gLhAWsA7gIBAmsA7gIhAmsA7gJBAmsA7gJhAmsA7gKBAmsA7gKhAmsA7gLB
AmsA7gLhAmsA7gIBA2sA7gIhA2sA7gJBA2sA7gJhA2sA7gKBA2sA7gKhA2sA7gLBA2sA7gLhA2sA
7gIBBGsA7gIhBGsA7gJBBGsA7gJhBGsA7gKBBGsA7gKhBGsA7gLBBGsA7gLhBGsA7gIBBWsA7gIh
BWsA7gJpBnsAVQKJBnsAVQIgCWsA7gJACWsA7gJgCWsA7gKACWsA7gLACWsA7gLgCWsA7gIACmsA
7gIgCmsA7gJACmsA7gJgCmsA7gKACmsA7gKgCmsA7gLACmsA7gLgCmsA7gIAC2sA7gIgC2sA7gJA
C2sA7gJgC2sA7gKgC2sA7gLAC2sA7gLgC2sA7gIADGsA7gIgDGsA7gJADGsA7gJgDGsA7gKADGsA
7gLADGsA7gLgDGsA7gIADWsA7gIgDWsA7gJADWsA7gJgDWsA7gKADWsA7gKgDWsA7gLADWsA7gLg
DWsA7gIgDmsA7gJADmsA7gJgDmsA7gKADmsA7gLADmsA7gLgDmsA7gIgD2sA7gJAD2sA7gJgD2sA
7gKAD2sA7gKgD2sA7gLAD2sA7gLgD2sA7gIAEGsA7gIgEGsA7gJAEGsA7gJgEGsA7gKAEGsA7gKg
EGsA7gLAEGsA7gLgEGsA7gIAEWsA7gIgEWsA7gJAEWsA7gJgEWsA7gKAEWsA7gLAEWsA7gLgEWsA
7gIAEmsA7gIgEmsA7gIbAIsAAwABAAYALwAHADMACAA1AAkANgAKADgACwA/AAwAQwANAEgADgBK
AA8ASwAQAFUAAABUAN4BAAA8COIBAACRBOYBAAC4COIBAAA8BOYBAACkCOIBAAAuBOYBAACPCOIB
AAAeBOYBAAB4COIBAADRBOYBAADMCOIBAACGBeYBAAALCeIBAABwDuYBAADACeIBAACsDt4BAADS
CeIBAABfAN4BAABOCOIBAABXCuYBAABeCeIBAAA2C+YBAACMCeIBAACeCuYBAAB1CeIBAAA2BeoB
AAD0COIBAAAPBd4BAADgCOIBAAAeEN4BAAD0CeIBAABLCuoBAABLCeIBAADID+oBAADhCeIBAABF
EN4BAAAICuIBAADcAOoBAABjCOIBAAChB+oBAAA4CeIBAADmDd4BAACqCeIBAACyBeYBAAAeCeIB
AADuD+YBAAAlD+YBAAB5AOYBAAD1DeYBAAAADO8BAABiBfQBAACgDvkBAAB1C+YBAABEDuYBAAAG
Bd4BAAAZAd4BAABVBP4BAAASEOYBAACeBeYBAACGDuYBAADrBOYBAAAZAd4BAAB7CuYBAABdC+YB
AAC3CuYBAADNC+oBAAApBd4BAAA4EN4BAACRCuoBAADhD+oBAAD0AOoBAAC1B+oBAAAMCN4BAAAE
BAICAAAtDgcCAAAoDAwCAAB7ChUCAABjEN4BAADrAxoCAAC7DB8CAABeDuYBAAAZAd4BAACnBOYB
AAC8Dt4BAAA+DyQCAQAGAAMAAQAHAAUAAQAIAAcAAQAJAAkAAQAKAAsAAQALAA0AAQAMAA8AAQAN
ABEAAQAOABMAAQAPABUAAQAQABcAAQARABkAAQASABsAAQATAB0AAQAUAB8AAQAVACEAAQAWACMA
AQAXACUAAQAYACcAAQAZACkAAQAaACsAAQAbAC0AAQAcAC8AAQAdADEAAQAeADMAAQAfADUAAQAg
ADcAAQAhADkAAQAiADsAAQAjAD0AAQAkAD8AAQAlAEEAAQAmAEMAAQAnAEUAAQAoAEcAAQApAEkA
AQAqAEsAAQArAE0AAQAsAE8AAQAtAFEAAQAuAFMAAQAvAFUAAQAwAFcAAQAxAFkAAQAyAFsAAQAz
AF0AAgA+AF8AAgA/AGEAAgBAAGMAAgBBAGUAAgBDAGcAAgBEAGkAAQBFAGkAAgBGAGsAAgBJAG0A
AQBKAG0AAgBLAG8AAQBMAG8AAgBOAHEAAQBPAHEAAgBQAHMAAQBRAHMAAgBSAHUAAQBTAHUAAgBU
AHcAAQBVAHcAAgBWAHkAAQBXAHkAAgBYAHsAAQBZAHsAAgBaAH0AAQBbAH0AAgBdAH8AAQBeAH8A
AgBfAIEAAQBgAIEAAgBhAIMAAQBiAIMAAgBjAIUAAQBkAIUAAgBmAIcAAQBnAIcAAgBoAIkAAQBp
AIkAAgBqAIsAAQBrAIsAAgBsAI0AAQBtAI0AAgBuAI8AAQBvAI8AAgBxAJEAAQByAJEAAgBzAJMA
AQB0AJMAAgB2AJUAAQB3AJUAAgB5AJcAAQB6AJcAAgB7AJkAAQB8AJkAAgB9AJsAAQB+AJsAAgB/
AJ0AAQCAAJ0AAgCBAJ8AAQCCAJ8AAgCDAKEAAQCEAKEAAgCFAKMAAQCGAKMAAgCHAKUAAQCIAKUA
AgCJAKcAAQCKAKcAAgCLAKkAAQCMAKkAAgCOAKsAAQCPAKsAAgCQAK0AAQCRAK0ATQBdAGkAcAAE
gAAAAQAAAAAAAAAAAAAAAACZAAAABAAAAAAAAAAAAAAAzQCQAAAAAAAOAAAAAAAAAAAAAADWAAQP
AAAAAA4AAAAAAAAAAAAAANYAQw8AAAAABAAAAAAAAAAAAAAAzQA0CgAAAAAEAAAAAAAAAAAAAADf
ALgNAAAAAA4AAAAAAAAAAAAAANYAnQsAAAAAAAAAAAEAAADzDAAACQACAAoAAgALAAIADAACAA0A
AgAOAAIADwACABAAAgAtAEgAAAAAAABJRFRTVmFyaWFibGUxMDAASURUU1ZhcmlhYmxlczEwMABJ
RFRTRXZhbHVhdG9yQ29udGV4dDEwMABMaXN0YDEASW50MzIAPE1vZHVsZT4Ac2V0X0NpdGlJRABz
ZXRfV2VhdGhlcklEAEdldE91dHB1dElEAGdldF9DdXJyZW50VVJMAFdlYXRoZXJEYXRhAG1zY29y
bGliAFNDX2M3YTA2NWJiNmE2NDRjYzRiNjk1OWNkNmI0YzUzMDBjAFN5c3RlbS5Db2xsZWN0aW9u
cy5HZW5lcmljAHNldF9XaW5kU3BlZWQAZ2V0X3NwZWVkAHNldF9zcGVlZABNYXJrT3V0cHV0c0Zp
bmlzaGVkAGdldF9pZABzZXRfaWQAPHNwZWVkPmtfX0JhY2tpbmdGaWVsZAA8aWQ+a19fQmFja2lu
Z0ZpZWxkADx3aW5kPmtfX0JhY2tpbmdGaWVsZAA8Y29vcmQ+a19fQmFja2luZ0ZpZWxkADxtZXNz
YWdlPmtfX0JhY2tpbmdGaWVsZAA8bmFtZT5rX19CYWNraW5nRmllbGQAPHRpbWV6b25lPmtfX0Jh
Y2tpbmdGaWVsZAA8dHlwZT5rX19CYWNraW5nRmllbGQAPHByZXNzdXJlPmtfX0JhY2tpbmdGaWVs
ZAA8c3VucmlzZT5rX19CYWNraW5nRmllbGQAPGRlZz5rX19CYWNraW5nRmllbGQAPGFsbD5rX19C
YWNraW5nRmllbGQAPG1haW4+a19fQmFja2luZ0ZpZWxkADx0ZW1wX21pbj5rX19CYWNraW5nRmll
bGQAPGljb24+a19fQmFja2luZ0ZpZWxkADxkZXNjcmlwdGlvbj5rX19CYWNraW5nRmllbGQAPGxv
bj5rX19CYWNraW5nRmllbGQAPHRlbXA+a19fQmFja2luZ0ZpZWxkADx3ZWF0aGVyPmtfX0JhY2tp
bmdGaWVsZAA8Y2xvdWRzPmtfX0JhY2tpbmdGaWVsZAA8c3lzPmtfX0JhY2tpbmdGaWVsZAA8bGF0
PmtfX0JhY2tpbmdGaWVsZAA8ZHQ+a19fQmFja2luZ0ZpZWxkADxzdW5zZXQ+a19fQmFja2luZ0Zp
ZWxkADxjbnQ+a19fQmFja2luZ0ZpZWxkADxsaXN0PmtfX0JhY2tpbmdGaWVsZAA8dGVtcF9tYXg+
a19fQmFja2luZ0ZpZWxkADxjb3VudHJ5PmtfX0JhY2tpbmdGaWVsZAA8aHVtaWRpdHk+a19fQmFj
a2luZ0ZpZWxkADx2aXNpYmlsaXR5PmtfX0JhY2tpbmdGaWVsZABXaW5kAGdldF93aW5kAHNldF93
aW5kAENvb3JkAGdldF9jb29yZABzZXRfY29vcmQAZGVmYXVsdEluc3RhbmNlAHNldF9Db3VudHJ5
Q29kZQBzZXRfTG9uZ2l0dWRlAHNldF9MYXRpdHVkZQBnZXRfbWVzc2FnZQBzZXRfbWVzc2FnZQBJ
RGlzcG9zYWJsZQBSdW50aW1lVHlwZUhhbmRsZQBHZXRUeXBlRnJvbUhhbmRsZQBzZXRfQ2l0aU5h
bWUAZ2V0X25hbWUAc2V0X25hbWUATWljcm9zb2Z0LlNxbFNlcnZlci5EdHMuUGlwZWxpbmUAc2V0
X1RpbWVab25lAGdldF90aW1lem9uZQBzZXRfdGltZXpvbmUAVHlwZQBnZXRfdHlwZQBzZXRfdHlw
ZQBzZXRfUHJlc3N1cmUAZ2V0X3ByZXNzdXJlAHNldF9wcmVzc3VyZQBzZXRfVGVtcGFyYXR1cmUA
Z2V0X0N1bHR1cmUAc2V0X0N1bHR1cmUAcmVzb3VyY2VDdWx0dXJlAEFwcGxpY2F0aW9uU2V0dGlu
Z3NCYXNlAHNldF9TdW5yaXNlAGdldF9zdW5yaXNlAHNldF9zdW5yaXNlAERpc3Bvc2UAc2V0X0Nh
bGN1bGF0ZWREYXRlAEVkaXRvckJyb3dzYWJsZVN0YXRlAENvbXBpbGVyR2VuZXJhdGVkQXR0cmli
dXRlAERlYnVnZ2VyTm9uVXNlckNvZGVBdHRyaWJ1dGUARGVidWdnYWJsZUF0dHJpYnV0ZQBFZGl0
b3JCcm93c2FibGVBdHRyaWJ1dGUAQXNzZW1ibHlUaXRsZUF0dHJpYnV0ZQBBc3NlbWJseVRyYWRl
bWFya0F0dHJpYnV0ZQBUYXJnZXRGcmFtZXdvcmtBdHRyaWJ1dGUAQXNzZW1ibHlDb25maWd1cmF0
aW9uQXR0cmlidXRlAEFzc2VtYmx5RGVzY3JpcHRpb25BdHRyaWJ1dGUAQ29tcGlsYXRpb25SZWxh
eGF0aW9uc0F0dHJpYnV0ZQBBc3NlbWJseVByb2R1Y3RBdHRyaWJ1dGUAQXNzZW1ibHlDb3B5cmln
aHRBdHRyaWJ1dGUAU1NJU1NjcmlwdENvbXBvbmVudEVudHJ5UG9pbnRBdHRyaWJ1dGUAQXNzZW1i
bHlDb21wYW55QXR0cmlidXRlAFJ1bnRpbWVDb21wYXRpYmlsaXR5QXR0cmlidXRlAFByZUV4ZWN1
dGUAUG9zdEV4ZWN1dGUAdmFsdWUARGVzZXJpYWxpemUAc2V0X1dpbmREZWcAZ2V0X2RlZwBzZXRf
ZGVnAFN5c3RlbS5SdW50aW1lLlZlcnNpb25pbmcARG93bmxvYWRTdHJpbmcARGVjaW1hbABTeXN0
ZW0uQ29tcG9uZW50TW9kZWwAZ2V0X2FsbABzZXRfYWxsAFNDX2M3YTA2NWJiNmE2NDRjYzRiNjk1
OWNkNmI0YzUzMDBjLmRsbABzZXRfQ2l0aUlEX0lzTnVsbABzZXRfV2VhdGhlcklEX0lzTnVsbABz
ZXRfV2luZFNwZWVkX0lzTnVsbABzZXRfQ291bnRyeUNvZGVfSXNOdWxsAHNldF9Mb25naXR1ZGVf
SXNOdWxsAHNldF9MYXRpdHVkZV9Jc051bGwAc2V0X0NpdGlOYW1lX0lzTnVsbABzZXRfVGltZVpv
bmVfSXNOdWxsAHNldF9QcmVzc3VyZV9Jc051bGwAc2V0X1RlbXBhcmF0dXJlX0lzTnVsbABzZXRf
U3VucmlzZV9Jc051bGwAc2V0X0NhbGN1bGF0ZWREYXRlX0lzTnVsbABzZXRfV2luZERlZ19Jc051
bGwAc2V0X1RlbXBNaW5fSXNOdWxsAHNldF9XZWF0aGVyTWFpbl9Jc051bGwAc2V0X1dlYXRoZXJJ
Y29uX0lzTnVsbABzZXRfV2VhdGhlckRlc2NyaXB0aW9uX0lzTnVsbABzZXRfQ2xvdWRpbmVzc19J
c051bGwAc2V0X1N1bnNldF9Jc051bGwAc2V0X0NudF9Jc051bGwAc2V0X1RlbXBNYXhfSXNOdWxs
AHNldF9IdW1pZGl0eV9Jc051bGwAc2V0X1Zpc2liaWxpdHlfSXNOdWxsAFNldE51bGwAZ2V0X0l0
ZW0Ac2V0X0l0ZW0AU3lzdGVtAHJlc291cmNlTWFuAHNldF9UZW1wTWluAHNldF9XZWF0aGVyTWFp
bgBTY3JpcHRNYWluAGdldF9tYWluAHNldF9tYWluAGdldF90ZW1wX21pbgBzZXRfdGVtcF9taW4A
c2V0X1dlYXRoZXJJY29uAGdldF9pY29uAHNldF9pY29uAFN5c3RlbS5Db25maWd1cmF0aW9uAFN5
c3RlbS5HbG9iYWxpemF0aW9uAFN5c3RlbS5XZWIuU2NyaXB0LlNlcmlhbGl6YXRpb24AU3lzdGVt
LlJlZmxlY3Rpb24ASW52YWxpZE9wZXJhdGlvbkV4Y2VwdGlvbgBzZXRfV2VhdGhlckRlc2NyaXB0
aW9uAGdldF9kZXNjcmlwdGlvbgBzZXRfZGVzY3JpcHRpb24AZ2V0X2xvbgBzZXRfbG9uAEN1bHR1
cmVJbmZvAE91dHB1dE5hbWVNYXAAT3V0cHV0TWFwAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRFRTUnVu
dGltZVdyYXAAZ2V0X3RlbXAAc2V0X3RlbXAAT3V0cHV0MEJ1ZmZlcgBQaXBlbGluZUJ1ZmZlcgBT
Y3JpcHRCdWZmZXIAZ2V0X1Jlc291cmNlTWFuYWdlcgBXZWF0aGVyAGdldF93ZWF0aGVyAHNldF93
ZWF0aGVyAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRHRzLlJ1bnRpbWUuV3JhcHBlcgBKYXZhU2NyaXB0
U2VyaWFsaXplcgBHZXRFbnVtZXJhdG9yAC5jdG9yAC5jY3RvcgBPdXRwdXRJRHMAU3lzdGVtLkRp
YWdub3N0aWNzAENsb3VkcwBnZXRfY2xvdWRzAHNldF9jbG91ZHMAU3lzdGVtLlJ1bnRpbWUuQ29t
cGlsZXJTZXJ2aWNlcwBTeXN0ZW0uUmVzb3VyY2VzAFNDX2M3YTA2NWJiNmE2NDRjYzRiNjk1OWNk
NmI0YzUzMDBjLlByb3BlcnRpZXMuUmVzb3VyY2VzLnJlc291cmNlcwBEZWJ1Z2dpbmdNb2RlcwBT
Q19jN2EwNjViYjZhNjQ0Y2M0YjY5NTljZDZiNGM1MzAwYy5Qcm9wZXJ0aWVzAGdldF9SZWFkT25s
eVZhcmlhYmxlcwBCdWZmZXJDb2x1bW5JbmRleGVzAEdldENvbHVtbkluZGV4ZXMAU2V0dGluZ3MA
U3lzdGVtLldlYi5FeHRlbnNpb25zAENvbm5lY3Rpb25zAEJ1ZmZlcnMAc2V0X0Nsb3VkaW5lc3MA
Z2V0X1VuaXRzAEZpbmlzaE91dHB1dHMAQ3JlYXRlTmV3T3V0cHV0Um93cwBTeXMAZ2V0X3N5cwBz
ZXRfc3lzAENvbmNhdABnZXRfbGF0AHNldF9sYXQAUm9vdE9iamVjdABnZXRfZHQAc2V0X2R0AFN5
c3RlbS5OZXQAc2V0X1N1bnNldABnZXRfc3Vuc2V0AHNldF9zdW5zZXQAU2V0RW5kT2ZSb3dzZXQA
Z2V0X0RlZmF1bHQAc2V0X0NudABnZXRfY250AHNldF9jbnQAV2ViQ2xpZW50AFVzZXJDb21wb25l
bnQAUGFyZW50Q29tcG9uZW50AFNjcmlwdENvbXBvbmVudABnZXRfQ3VycmVudABNaWNyb3NvZnQu
U3FsU2VydmVyLlR4U2NyaXB0AGdldF9DaXRpSURzTGlzdABnZXRfbGlzdABzZXRfbGlzdABNaWNy
b3NvZnQuU3FsU2VydmVyLlBpcGVsaW5lSG9zdABQcmltZU91dHB1dABNb3ZlTmV4dABHZXRWYWx1
ZVdpdGhDb250ZXh0AFNjcmlwdENvbXBvbmVudEV2YWxDb250ZXh0AGdldF9FdmFsdWF0b3JDb250
ZXh0AEFkZFJvdwBzZXRfVGVtcE1heABnZXRfdGVtcF9tYXgAc2V0X3RlbXBfbWF4AGdldF9BUElL
ZXkAZ2V0X0Fzc2VtYmx5AGdldF9jb3VudHJ5AHNldF9jb3VudHJ5AHNldF9IdW1pZGl0eQBnZXRf
aHVtaWRpdHkAc2V0X2h1bWlkaXR5AHNldF9WaXNpYmlsaXR5AGdldF92aXNpYmlsaXR5AHNldF92
aXNpYmlsaXR5AAAAAA8mAHUAbgBpAHQAcwA9AAAPJgBhAHAAcABpAGQAPQAAgJtJAHMATgB1AGwA
bAAgAHAAcgBvAHAAZQByAHQAeQAgAGMAYQBuAG4AbwB0ACAAYgBlACAAcwBlAHQAIAB0AG8AIABG
AGEAbABzAGUALgAgAEEAcwBzAGkAZwBuACAAYQAgAHYAYQBsAHUAZQAgAHQAbwAgAHQAaABlACAA
YwBvAGwAdQBtAG4AIABpAG4AcwB0AGUAYQBkAC4AABFPAHUAdABwAHUAdAAgADAAAA1BAFAASQBL
AGUAeQAAF0MAaQB0AGkASQBEAHMATABpAHMAdAAAF0MAdQByAHIAZQBuAHQAXwBVAFIATAAAC1UA
bgBpAHQAcwAAcVMAQwBfAGMANwBhADAANgA1AGIAYgA2AGEANgA0ADQAYwBjADQAYgA2ADkANQA5
AGMAZAA2AGIANABjADUAMwAwADAAYwAuAFAAcgBvAHAAZQByAHQAaQBlAHMALgBSAGUAcwBvAHUA
cgBjAGUAcwAA0ra41RjOikCfhq6i5wzaJQAEIAEBCAMgAAEFIAEBEREEIAEBDgUgAQERaRoHCw4O
Dg4ODhJAFRE9ARI8EjwVET0BEiwSLAUAAQ4dDgQgAQ4OBjABAR4ADgQKARJABhUSOQESPAggABUR
PQETAAYVET0BEjwEIAATAAYVEjkBEiwGFRE9ARIsAyAAAgkgAwESUR0IElUFIAIBCBwDBwEIBgAC
CBJVDgUgAR0ICAUgABKAjQYgARKAkRwFAAASgJUGIAEcEoCZCAABEoCdEYChBSAAEoClByACAQ4S
gKUIt3pcVhk04IkIiYRdzYCAzJEIMb84Vq02TjUDBhIUAwYSGAMGEgwDBhJZAwYSYQMGEmUDBhIg
AgYOAgYIAgYNAwYRSQMGEiQDBhIoBwYVEjkBEiwDBhIwAwYSNAMGEjgHBhUSOQESPAQgAQECBSAB
ARFJCyAEAQgdCB0SURJVBSABARJZAyAADgQAABJhBAAAEmUFAAEBEmUEAAASIAMAAAEDIAAIAyAA
DQQgAQENBCAAEUkEIAASJAUgAQESJAQgABIoBSABARIoCCAAFRI5ARIsCSABARUSOQESLAQgABIw
BSABARIwBCAAEjQFIAEBEjQEIAASOAUgAQESOAggABUSOQESPAkgAQEVEjkBEjwDKAAIAygAAgMo
AA4EKAARSQQIABJhBAgAEmUECAASIAMoAA0EKAASJAQoABIoCCgAFRI5ARIsBCgAEjAEKAASNAQo
ABI4CCgAFRI5ARI8CAEACAAAAAAAHgEAAQBUAhZXcmFwTm9uRXhjZXB0aW9uVGhyb3dzAQgBAAIA
AAAAACgBACNTQ19jN2EwNjViYjZhNjQ0Y2M0YjY5NTljZDZiNGM1MzAwYwAABQEAAAAAFgEAEUNv
cHlyaWdodCBAICAyMDE5AABJAQAaLk5FVEZyYW1ld29yayxWZXJzaW9uPXY0LjUBAFQOFEZyYW1l
d29ya0Rpc3BsYXlOYW1lEi5ORVQgRnJhbWV3b3JrIDQuNQQBAAAAALQAAADOyu++AQAAAJEAAABs
U3lzdGVtLlJlc291cmNlcy5SZXNvdXJjZVJlYWRlciwgbXNjb3JsaWIsIFZlcnNpb249NC4wLjAu
MCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj1iNzdhNWM1NjE5MzRlMDg5I1N5c3Rl
bS5SZXNvdXJjZXMuUnVudGltZVJlc291cmNlU2V0AgAAAAAAAAAAAAAAUEFEUEFEULQAAAAIWAAA
AAAAAAAAAAAiWAAAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFFgAAAAAAAAAAAAAAABfQ29yRGxs
TWFpbgBtc2NvcmVlLmRsbAAAAAAA/yUAIAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABABAAAAAYAACAAAAAAAAA
AAAAAAAAAAABAAEAAAAwAACAAAAAAAAAAAAAAAAAAAABAAAAAABIAAAAWGAAAOwDAAAAAAAAAAAA
AOwDNAAAAFYAUwBfAFYARQBSAFMASQBPAE4AXwBJAE4ARgBPAAAAAAC9BO/+AAABAAAAAQAAAAAA
AAABAAAAAAA/AAAAAAAAAAQAAAACAAAAAAAAAAAAAAAAAAAARAAAAAEAVgBhAHIARgBpAGwAZQBJ
AG4AZgBvAAAAAAAkAAQAAABUAHIAYQBuAHMAbABhAHQAaQBvAG4AAAAAAAAAsARMAwAAAQBTAHQA
cgBpAG4AZwBGAGkAbABlAEkAbgBmAG8AAAAoAwAAAQAwADAAMAAwADAANABiADAAAAAaAAEAAQBD
AG8AbQBtAGUAbgB0AHMAAAAAAAAAIgABAAEAQwBvAG0AcABhAG4AeQBOAGEAbQBlAAAAAAAAAAAA
cAAkAAEARgBpAGwAZQBEAGUAcwBjAHIAaQBwAHQAaQBvAG4AAAAAAFMAQwBfAGMANwBhADAANgA1
AGIAYgA2AGEANgA0ADQAYwBjADQAYgA2ADkANQA5AGMAZAA2AGIANABjADUAMwAwADAAYwAAADAA
CAABAEYAaQBsAGUAVgBlAHIAcwBpAG8AbgAAAAAAMQAuADAALgAwAC4AMAAAAHAAKAABAEkAbgB0
AGUAcgBuAGEAbABOAGEAbQBlAAAAUwBDAF8AYwA3AGEAMAA2ADUAYgBiADYAYQA2ADQANABjAGMA
NABiADYAOQA1ADkAYwBkADYAYgA0AGMANQAzADAAMABjAC4AZABsAGwAAABIABIAAQBMAGUAZwBh
AGwAQwBvAHAAeQByAGkAZwBoAHQAAABDAG8AcAB5AHIAaQBnAGgAdAAgAEAAIAAgADIAMAAxADkA
AAAqAAEAAQBMAGUAZwBhAGwAVAByAGEAZABlAG0AYQByAGsAcwAAAAAAAAAAAHgAKAABAE8AcgBp
AGcAaQBuAGEAbABGAGkAbABlAG4AYQBtAGUAAABTAEMAXwBjADcAYQAwADYANQBiAGIANgBhADYA
NAA0AGMAYwA0AGIANgA5ADUAOQBjAGQANgBiADQAYwA1ADMAMAAwAGMALgBkAGwAbAAAAGgAJAAB
AFAAcgBvAGQAdQBjAHQATgBhAG0AZQAAAAAAUwBDAF8AYwA3AGEAMAA2ADUAYgBiADYAYQA2ADQA
NABjAGMANABiADYAOQA1ADkAYwBkADYAYgA0AGMANQAzADAAMABjAAAANAAIAAEAUAByAG8AZAB1
AGMAdABWAGUAcgBzAGkAbwBuAAAAMQAuADAALgAwAC4AMAAAADgACAABAEEAcwBzAGUAbQBiAGwA
eQAgAFYAZQByAHMAaQBvAG4AAAAxAC4AMAAuADAALgAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFAAAAwAAAA0OAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=]]></arrayElement>
                  </arrayElements>
                </property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the Microsoft Visual Studio Tools for Applications project. Project names must be unique within a package."
                  name="VSTAProjectName"
                  typeConverter="NOTBROWSABLE">SC_c7a065bb6a644cc4b6959cd6b4c5300c</property>
                <property
                  dataType="System.String"
                  description="Specifies the programming language used by the script."
                  name="ScriptLanguage"
                  typeConverter="Microsoft.SqlServer.VSTAHosting.ScriptingLanguages">CSharp</property>
                <property
                  dataType="System.String"
                  description="Specifies a comma-separated list of read-only variables."
                  name="ReadOnlyVariables"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIVariablePickerDlg">User::CitiIDsList,User::Current_URL,$Project::APIKey,$Project::Units</property>
                <property
                  dataType="System.String"
                  description="Specifies a comma-separated list of read/write variables."
                  name="ReadWriteVariables"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIWriteableVariablePickerDlg"></property>
                <property
                  dataType="System.String"
                  description="List of breakpoints present on the script."
                  isArray="true"
                  name="BreakpointCollection"
                  typeConverter="NOTBROWSABLE">
                  <arrayElements
                    arrayElementCount="0" />
                </property>
                <property
                  dataType="System.String"
                  description="Checksum to match component metedata against compiled codes."
                  name="MetadataChecksum140"
                  typeConverter="NOTBROWSABLE">F4</property>
                <property
                  dataType="System.String"
                  name="UserComponentTypeName">Microsoft.ScriptComponentHost</property>
              </properties>
              <outputs>
                <output
                  refId="Package\DFT - Load Current Data\SCR - Extract Current Data from OWM API.Outputs[Output 0]"
                  hasSideEffects="true"
                  name="Output 0">
                  <outputColumns>
                    <outputColumn
                      refId="Package\DFT - Load Current Data\SCR - Extract Current Data from OWM API.Outputs[Output 0].Columns[CitiID]"
                      dataType="i4"
                      lineageId="Package\DFT - Load Current Data\SCR - Extract Current Data from OWM API.Outputs[Output 0].Columns[CitiID]"
                      name="CitiID" />
                    <outputColumn
                      refId="Package\DFT - Load Current Data\SCR - Extract Current Data from OWM API.Outputs[Output 0].Columns[CitiName]"
                      dataType="wstr"
                      length="60"
                      lineageId="Package\DFT - Load Current Data\SCR - Extract Current Data from OWM API.Outputs[Output 0].Columns[CitiName]"
                      name="CitiName" />
                    <outputColumn
                      refId="Package\DFT - Load Current Data\SCR - Extract Current Data from OWM API.Outputs[Output 0].Columns[Latitude]"
                      dataType="wstr"
                      length="16"
                      lineageId="Package\DFT - Load Current Data\SCR - Extract Current Data from OWM API.Outputs[Output 0].Columns[Latitude]"
                      name="Latitude" />
                    <outputColumn
                      refId="Package\DFT - Load Current Data\SCR - Extract Current Data from OWM API.Outputs[Output 0].Columns[Longitude]"
                      dataType="wstr"
                      length="16"
                      lineageId="Package\DFT - Load Current Data\SCR - Extract Current Data from OWM API.Outputs[Output 0].Columns[Longitude]"
                      name="Longitude" />
                    <outputColumn
                      refId="Package\DFT - Load Current Data\SCR - Extract Current Data from OWM API.Outputs[Output 0].Columns[CountryCode]"
                      dataType="wstr"
                      length="2"
                      lineageId="Package\DFT - Load Current Data\SCR - Extract Current Data from OWM API.Outputs[Output 0].Columns[CountryCode]"
                      name="CountryCode" />
                    <outputColumn
                      refId="Package\DFT - Load Current Data\SCR - Extract Current Data from OWM API.Outputs[Output 0].Columns[TimeZone]"
                      dataType="wstr"
                      length="16"
                      lineageId="Package\DFT - Load Current Data\SCR - Extract Current Data from OWM API.Outputs[Output 0].Columns[TimeZone]"
                      name="TimeZone" />
                    <outputColumn
                      refId="Package\DFT - Load Current Data\SCR - Extract Current Data from OWM API.Outputs[Output 0].Columns[Sunrise]"
                      dataType="wstr"
                      length="12"
                      lineageId="Package\DFT - Load Current Data\SCR - Extract Current Data from OWM API.Outputs[Output 0].Columns[Sunrise]"
                      name="Sunrise" />
                    <outputColumn
                      refId="Package\DFT - Load Current Data\SCR - Extract Current Data from OWM API.Outputs[Output 0].Columns[Sunset]"
                      dataType="wstr"
                      length="12"
                      lineageId="Package\DFT - Load Current Data\SCR - Extract Current Data from OWM API.Outputs[Output 0].Columns[Sunset]"
                      name="Sunset" />
                    <outputColumn
                      refId="Package\DFT - Load Current Data\SCR - Extract Current Data from OWM API.Outputs[Output 0].Columns[Cnt]"
                      dataType="i4"
                      lineageId="Package\DFT - Load Current Data\SCR - Extract Current Data from OWM API.Outputs[Output 0].Columns[Cnt]"
                      name="Cnt" />
                    <outputColumn
                      refId="Package\DFT - Load Current Data\SCR - Extract Current Data from OWM API.Outputs[Output 0].Columns[WeatherID]"
                      dataType="i4"
                      lineageId="Package\DFT - Load Current Data\SCR - Extract Current Data from OWM API.Outputs[Output 0].Columns[WeatherID]"
                      name="WeatherID" />
                    <outputColumn
                      refId="Package\DFT - Load Current Data\SCR - Extract Current Data from OWM API.Outputs[Output 0].Columns[WeatherMain]"
                      dataType="wstr"
                      length="60"
                      lineageId="Package\DFT - Load Current Data\SCR - Extract Current Data from OWM API.Outputs[Output 0].Columns[WeatherMain]"
                      name="WeatherMain" />
                    <outputColumn
                      refId="Package\DFT - Load Current Data\SCR - Extract Current Data from OWM API.Outputs[Output 0].Columns[WeatherDescription]"
                      dataType="wstr"
                      length="100"
                      lineageId="Package\DFT - Load Current Data\SCR - Extract Current Data from OWM API.Outputs[Output 0].Columns[WeatherDescription]"
                      name="WeatherDescription" />
                    <outputColumn
                      refId="Package\DFT - Load Current Data\SCR - Extract Current Data from OWM API.Outputs[Output 0].Columns[WeatherIcon]"
                      dataType="wstr"
                      length="10"
                      lineageId="Package\DFT - Load Current Data\SCR - Extract Current Data from OWM API.Outputs[Output 0].Columns[WeatherIcon]"
                      name="WeatherIcon" />
                    <outputColumn
                      refId="Package\DFT - Load Current Data\SCR - Extract Current Data from OWM API.Outputs[Output 0].Columns[Temparature]"
                      dataType="decimal"
                      lineageId="Package\DFT - Load Current Data\SCR - Extract Current Data from OWM API.Outputs[Output 0].Columns[Temparature]"
                      name="Temparature" />
                    <outputColumn
                      refId="Package\DFT - Load Current Data\SCR - Extract Current Data from OWM API.Outputs[Output 0].Columns[Pressure]"
                      dataType="i4"
                      lineageId="Package\DFT - Load Current Data\SCR - Extract Current Data from OWM API.Outputs[Output 0].Columns[Pressure]"
                      name="Pressure" />
                    <outputColumn
                      refId="Package\DFT - Load Current Data\SCR - Extract Current Data from OWM API.Outputs[Output 0].Columns[Humidity]"
                      dataType="i4"
                      lineageId="Package\DFT - Load Current Data\SCR - Extract Current Data from OWM API.Outputs[Output 0].Columns[Humidity]"
                      name="Humidity" />
                    <outputColumn
                      refId="Package\DFT - Load Current Data\SCR - Extract Current Data from OWM API.Outputs[Output 0].Columns[TempMin]"
                      dataType="decimal"
                      lineageId="Package\DFT - Load Current Data\SCR - Extract Current Data from OWM API.Outputs[Output 0].Columns[TempMin]"
                      name="TempMin" />
                    <outputColumn
                      refId="Package\DFT - Load Current Data\SCR - Extract Current Data from OWM API.Outputs[Output 0].Columns[TempMax]"
                      dataType="decimal"
                      lineageId="Package\DFT - Load Current Data\SCR - Extract Current Data from OWM API.Outputs[Output 0].Columns[TempMax]"
                      name="TempMax" />
                    <outputColumn
                      refId="Package\DFT - Load Current Data\SCR - Extract Current Data from OWM API.Outputs[Output 0].Columns[Visibility]"
                      dataType="i4"
                      lineageId="Package\DFT - Load Current Data\SCR - Extract Current Data from OWM API.Outputs[Output 0].Columns[Visibility]"
                      name="Visibility" />
                    <outputColumn
                      refId="Package\DFT - Load Current Data\SCR - Extract Current Data from OWM API.Outputs[Output 0].Columns[WindSpeed]"
                      dataType="decimal"
                      lineageId="Package\DFT - Load Current Data\SCR - Extract Current Data from OWM API.Outputs[Output 0].Columns[WindSpeed]"
                      name="WindSpeed" />
                    <outputColumn
                      refId="Package\DFT - Load Current Data\SCR - Extract Current Data from OWM API.Outputs[Output 0].Columns[WindDeg]"
                      dataType="decimal"
                      lineageId="Package\DFT - Load Current Data\SCR - Extract Current Data from OWM API.Outputs[Output 0].Columns[WindDeg]"
                      name="WindDeg" />
                    <outputColumn
                      refId="Package\DFT - Load Current Data\SCR - Extract Current Data from OWM API.Outputs[Output 0].Columns[Cloudiness]"
                      dataType="i4"
                      lineageId="Package\DFT - Load Current Data\SCR - Extract Current Data from OWM API.Outputs[Output 0].Columns[Cloudiness]"
                      name="Cloudiness" />
                    <outputColumn
                      refId="Package\DFT - Load Current Data\SCR - Extract Current Data from OWM API.Outputs[Output 0].Columns[CalculatedDate]"
                      dataType="wstr"
                      length="12"
                      lineageId="Package\DFT - Load Current Data\SCR - Extract Current Data from OWM API.Outputs[Output 0].Columns[CalculatedDate]"
                      name="CalculatedDate" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
          </components>
          <paths>
            <path
              refId="Package\DFT - Load Current Data.Paths[Output 0]"
              endId="Package\DFT - Load Current Data\OLEDB_Dest - Load Stagging_CurrentData.Inputs[OLE DB Destination Input]"
              name="Output 0"
              startId="Package\DFT - Load Current Data\SCR - Extract Current Data from OWM API.Outputs[Output 0]" />
          </paths>
        </pipeline>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\SQL - Get Citi ID from DIM_Cities"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{B5855A52-4DAA-4534-A8BA-710BA9C0A826}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="SQL - Get Citi ID from DIM_Cities"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{2F0B9ABE-B0F6-4174-9360-6F341960A908}"
          SQLTask:SqlStatementSource="SELECT DISTINCT CAST (STUFF(&#xA;      (SELECT ','+ CAST(CitiNK AS VARCHAR(10))&#xA;       FROM [DIM].[Cities]&#xA;       ORDER BY CitiNK&#xA;       FOR XML PATH('')),1,1,'') AS NVARCHAR(200)) CityIDsList&#xA;FROM [DIM].[Cities]"
          SQLTask:ResultType="ResultSetType_SingleRow" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
          <SQLTask:ResultBinding
            SQLTask:ResultName="0"
            SQLTask:DtsVariableName="User::CitiIDsList" />
        </SQLTask:SqlTaskData>
      </DTS:ObjectData>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:PrecedenceConstraints>
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint]"
      DTS:CreationName=""
      DTS:DTSID="{2AADD50E-7D76-495C-BDFC-E713D6B8F54F}"
      DTS:From="Package\SQL - Get Citi ID from DIM_Cities"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint"
      DTS:To="Package\DFT - Load Current Data" />
  </DTS:PrecedenceConstraints>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--This CDATA section contains the layout information of the package. The section includes information such as (x,y) coordinates, width, and height.-->
<!--If you manually edit this section and make a mistake, you can delete it. -->
<!--The package will still be able to load normally but the previous layout information will be lost and the designer will automatically re-arrange the elements on the design surface.-->
<Objects
  Version="8">
  <!--Each node below will contain properties that do not affect runtime behavior.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml">
        <NodeLayout
          Size="195,42"
          Id="Package\DFT - Load Current Data"
          TopLeft="286,167" />
        <NodeLayout
          Size="237,42"
          Id="Package\SQL - Get Citi ID from DIM_Cities"
          TopLeft="260,60" />
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint]"
          TopLeft="381,102">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,65"
              Start="0,0"
              End="0,57.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,57.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </Package>
  <TaskHost
    design-time-name="Package\DFT - Load Current Data">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml">
        <NodeLayout
          Size="279,42"
          Id="Package\DFT - Load Current Data\SCR - Extract Current Data from OWM API"
          TopLeft="327,90" />
        <NodeLayout
          Size="279,42"
          Id="Package\DFT - Load Current Data\OLEDB_Dest - Load Stagging_CurrentData"
          TopLeft="332,250" />
        <EdgeLayout
          Id="Package\DFT - Load Current Data.Paths[Output 0]"
          TopLeft="469,132">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,118"
              Start="0,0"
              End="0,110.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,110.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\DFT - Load Current Data\OLEDB_Dest - Load Stagging_CurrentData">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>