<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="10/5/2019 4:53:59 PM"
  DTS:CreationName="Microsoft.Package"
  DTS:CreatorComputerName="MYLAPTOP"
  DTS:CreatorName="MYLAPTOP\ygang"
  DTS:DTSID="{ADF57D32-0271-40A2-9DA6-5F552000DEA7}"
  DTS:ExecutableType="Microsoft.Package"
  DTS:LastModifiedProductVersion="15.0.1301.433"
  DTS:LocaleID="16393"
  DTS:ObjectName="ForecastData_3Hours"
  DTS:PackageType="5"
  DTS:VersionBuild="50"
  DTS:VersionGUID="{2EFD2A00-A83B-4599-9044-BAEE2EA1C8ED}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">8</DTS:Property>
  <DTS:Variables>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{CA56CECE-95E9-4EAF-A3D1-4E611A36895E}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="CitiID">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{D1D6D3C0-CEF3-42B9-94FB-63AD75D6A335}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="CitiIDsList">
      <DTS:VariableValue
        DTS:DataSubType="ManagedSerializable"
        DTS:DataType="13">
        <SOAP-ENV:Envelope xmlns:clr="http://schemas.microsoft.com/soap/encoding/clr/1.0" xmlns:SOAP-ENC="http://schemas.xmlsoap.org/soap/encoding/" xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
          SOAP-ENV:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/">
          <SOAP-ENV:Body>
            <xsd:anyType
              id="ref-1"></xsd:anyType>
          </SOAP-ENV:Body>
        </SOAP-ENV:Envelope>
      </DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{A1476AD8-8B74-47D7-9FE8-DAA062ED3818}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="Forecast_3h_URL">
      <DTS:VariableValue
        DTS:DataType="8">https://api.openweathermap.org/data/2.5/forecast?id=</DTS:VariableValue>
    </DTS:Variable>
  </DTS:Variables>
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\Foreach Loop  - Loop through Cities"
      DTS:CreationName="STOCK:FOREACHLOOP"
      DTS:Description="Foreach Loop Container"
      DTS:DTSID="{C53FE475-38D0-4BF2-A3A2-F7A6D69B0D41}"
      DTS:ExecutableType="STOCK:FOREACHLOOP"
      DTS:LocaleID="-1"
      DTS:ObjectName="Foreach Loop  - Loop through Cities">
      <DTS:ForEachEnumerator
        DTS:CreationName="Microsoft.ForEachADOEnumerator"
        DTS:DTSID="{C497E18B-D87F-4B94-9A87-4F3837B8C26E}"
        DTS:ObjectName="{C497E18B-D87F-4B94-9A87-4F3837B8C26E}">
        <DTS:ObjectData>
          <FEEADO
            EnumType="EnumerateAllRows"
            VarName="User::CitiIDsList" />
        </DTS:ObjectData>
      </DTS:ForEachEnumerator>
      <DTS:Variables />
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package\Foreach Loop  - Loop through Cities\DFT - Load Forcast data - 3 hour"
          DTS:CreationName="Microsoft.Pipeline"
          DTS:Description="Data Flow Task"
          DTS:DTSID="{1669ACBE-B60F-4700-A785-C201CDE6F49E}"
          DTS:ExecutableType="Microsoft.Pipeline"
          DTS:LocaleID="-1"
          DTS:ObjectName="DFT - Load Forcast data - 3 hour"
          DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
          <DTS:Variables />
          <DTS:ObjectData>
            <pipeline
              version="1">
              <components>
                <component
                  refId="Package\Foreach Loop  - Loop through Cities\DFT - Load Forcast data - 3 hour\OLEDB_Dest - Staging_Forecast_3h"
                  componentClassID="Microsoft.OLEDBDestination"
                  contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
                  description="OLE DB Destination"
                  name="OLEDB_Dest - Staging_Forecast_3h"
                  usesDispositions="true"
                  version="4">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the database object used to open a rowset."
                      name="OpenRowset">[Staging].[Forecast_3h]</property>
                    <property
                      dataType="System.String"
                      description="Specifies the variable that contains the name of the database object used to open a rowset."
                      name="OpenRowsetVariable"></property>
                    <property
                      dataType="System.String"
                      description="The SQL command to be executed."
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1252</property>
                    <property
                      dataType="System.Boolean"
                      description="Forces the use of the DefaultCodePage property value when describing character data."
                      name="AlwaysUseDefaultCodePage">false</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the mode used to access the database."
                      name="AccessMode"
                      typeConverter="AccessMode">3</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepIdentity">false</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepNulls">false</property>
                    <property
                      dataType="System.String"
                      description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                      name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                      name="FastLoadMaxInsertCommitSize">2147483647</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Foreach Loop  - Loop through Cities\DFT - Load Forcast data - 3 hour\OLEDB_Dest - Staging_Forecast_3h.Connections[OleDbConnection]"
                      connectionManagerID="{2F0B9ABE-B0F6-4174-9360-6F341960A908}:external"
                      connectionManagerRefId="Project.ConnectionManagers[WeatherDWH_DBConnection]"
                      description="The OLE DB runtime connection used to access the database."
                      name="OleDbConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Foreach Loop  - Loop through Cities\DFT - Load Forcast data - 3 hour\OLEDB_Dest - Staging_Forecast_3h.Inputs[OLE DB Destination Input]"
                      errorOrTruncationOperation="Insert"
                      errorRowDisposition="FailComponent"
                      hasSideEffects="true"
                      name="OLE DB Destination Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach Loop  - Loop through Cities\DFT - Load Forcast data - 3 hour\OLEDB_Dest - Staging_Forecast_3h.Inputs[OLE DB Destination Input].Columns[Latitude]"
                          cachedDataType="wstr"
                          cachedLength="16"
                          cachedName="Latitude"
                          externalMetadataColumnId="Package\Foreach Loop  - Loop through Cities\DFT - Load Forcast data - 3 hour\OLEDB_Dest - Staging_Forecast_3h.Inputs[OLE DB Destination Input].ExternalColumns[Latitude]"
                          lineageId="Package\Foreach Loop  - Loop through Cities\DFT - Load Forcast data - 3 hour\SCR - Extract 3Hour Forecast data from API.Outputs[Output 0].Columns[Latitude]" />
                        <inputColumn
                          refId="Package\Foreach Loop  - Loop through Cities\DFT - Load Forcast data - 3 hour\OLEDB_Dest - Staging_Forecast_3h.Inputs[OLE DB Destination Input].Columns[Longitude]"
                          cachedDataType="wstr"
                          cachedLength="16"
                          cachedName="Longitude"
                          externalMetadataColumnId="Package\Foreach Loop  - Loop through Cities\DFT - Load Forcast data - 3 hour\OLEDB_Dest - Staging_Forecast_3h.Inputs[OLE DB Destination Input].ExternalColumns[Longitude]"
                          lineageId="Package\Foreach Loop  - Loop through Cities\DFT - Load Forcast data - 3 hour\SCR - Extract 3Hour Forecast data from API.Outputs[Output 0].Columns[Longitude]" />
                        <inputColumn
                          refId="Package\Foreach Loop  - Loop through Cities\DFT - Load Forcast data - 3 hour\OLEDB_Dest - Staging_Forecast_3h.Inputs[OLE DB Destination Input].Columns[CountryCode]"
                          cachedDataType="wstr"
                          cachedLength="2"
                          cachedName="CountryCode"
                          externalMetadataColumnId="Package\Foreach Loop  - Loop through Cities\DFT - Load Forcast data - 3 hour\OLEDB_Dest - Staging_Forecast_3h.Inputs[OLE DB Destination Input].ExternalColumns[CountryCode]"
                          lineageId="Package\Foreach Loop  - Loop through Cities\DFT - Load Forcast data - 3 hour\SCR - Extract 3Hour Forecast data from API.Outputs[Output 0].Columns[CountryCode]" />
                        <inputColumn
                          refId="Package\Foreach Loop  - Loop through Cities\DFT - Load Forcast data - 3 hour\OLEDB_Dest - Staging_Forecast_3h.Inputs[OLE DB Destination Input].Columns[TimeZone]"
                          cachedDataType="wstr"
                          cachedLength="16"
                          cachedName="TimeZone"
                          externalMetadataColumnId="Package\Foreach Loop  - Loop through Cities\DFT - Load Forcast data - 3 hour\OLEDB_Dest - Staging_Forecast_3h.Inputs[OLE DB Destination Input].ExternalColumns[TimeZone]"
                          lineageId="Package\Foreach Loop  - Loop through Cities\DFT - Load Forcast data - 3 hour\SCR - Extract 3Hour Forecast data from API.Outputs[Output 0].Columns[TimeZone]" />
                        <inputColumn
                          refId="Package\Foreach Loop  - Loop through Cities\DFT - Load Forcast data - 3 hour\OLEDB_Dest - Staging_Forecast_3h.Inputs[OLE DB Destination Input].Columns[Temperature]"
                          cachedDataType="decimal"
                          cachedName="Temperature"
                          externalMetadataColumnId="Package\Foreach Loop  - Loop through Cities\DFT - Load Forcast data - 3 hour\OLEDB_Dest - Staging_Forecast_3h.Inputs[OLE DB Destination Input].ExternalColumns[Temperature]"
                          lineageId="Package\Foreach Loop  - Loop through Cities\DFT - Load Forcast data - 3 hour\SCR - Extract 3Hour Forecast data from API.Outputs[Output 0].Columns[Temperature]" />
                        <inputColumn
                          refId="Package\Foreach Loop  - Loop through Cities\DFT - Load Forcast data - 3 hour\OLEDB_Dest - Staging_Forecast_3h.Inputs[OLE DB Destination Input].Columns[Pressure]"
                          cachedDataType="decimal"
                          cachedName="Pressure"
                          externalMetadataColumnId="Package\Foreach Loop  - Loop through Cities\DFT - Load Forcast data - 3 hour\OLEDB_Dest - Staging_Forecast_3h.Inputs[OLE DB Destination Input].ExternalColumns[Pressure]"
                          lineageId="Package\Foreach Loop  - Loop through Cities\DFT - Load Forcast data - 3 hour\SCR - Extract 3Hour Forecast data from API.Outputs[Output 0].Columns[Pressure]" />
                        <inputColumn
                          refId="Package\Foreach Loop  - Loop through Cities\DFT - Load Forcast data - 3 hour\OLEDB_Dest - Staging_Forecast_3h.Inputs[OLE DB Destination Input].Columns[SeaLevel]"
                          cachedDataType="decimal"
                          cachedName="SeaLevel"
                          externalMetadataColumnId="Package\Foreach Loop  - Loop through Cities\DFT - Load Forcast data - 3 hour\OLEDB_Dest - Staging_Forecast_3h.Inputs[OLE DB Destination Input].ExternalColumns[SeaLevel]"
                          lineageId="Package\Foreach Loop  - Loop through Cities\DFT - Load Forcast data - 3 hour\SCR - Extract 3Hour Forecast data from API.Outputs[Output 0].Columns[SeaLevel]" />
                        <inputColumn
                          refId="Package\Foreach Loop  - Loop through Cities\DFT - Load Forcast data - 3 hour\OLEDB_Dest - Staging_Forecast_3h.Inputs[OLE DB Destination Input].Columns[GroundLevel]"
                          cachedDataType="decimal"
                          cachedName="GroundLevel"
                          externalMetadataColumnId="Package\Foreach Loop  - Loop through Cities\DFT - Load Forcast data - 3 hour\OLEDB_Dest - Staging_Forecast_3h.Inputs[OLE DB Destination Input].ExternalColumns[GroundLevel]"
                          lineageId="Package\Foreach Loop  - Loop through Cities\DFT - Load Forcast data - 3 hour\SCR - Extract 3Hour Forecast data from API.Outputs[Output 0].Columns[GroundLevel]" />
                        <inputColumn
                          refId="Package\Foreach Loop  - Loop through Cities\DFT - Load Forcast data - 3 hour\OLEDB_Dest - Staging_Forecast_3h.Inputs[OLE DB Destination Input].Columns[Humidity]"
                          cachedDataType="i4"
                          cachedName="Humidity"
                          externalMetadataColumnId="Package\Foreach Loop  - Loop through Cities\DFT - Load Forcast data - 3 hour\OLEDB_Dest - Staging_Forecast_3h.Inputs[OLE DB Destination Input].ExternalColumns[Humidity]"
                          lineageId="Package\Foreach Loop  - Loop through Cities\DFT - Load Forcast data - 3 hour\SCR - Extract 3Hour Forecast data from API.Outputs[Output 0].Columns[Humidity]" />
                        <inputColumn
                          refId="Package\Foreach Loop  - Loop through Cities\DFT - Load Forcast data - 3 hour\OLEDB_Dest - Staging_Forecast_3h.Inputs[OLE DB Destination Input].Columns[WeatherID]"
                          cachedDataType="i4"
                          cachedName="WeatherID"
                          externalMetadataColumnId="Package\Foreach Loop  - Loop through Cities\DFT - Load Forcast data - 3 hour\OLEDB_Dest - Staging_Forecast_3h.Inputs[OLE DB Destination Input].ExternalColumns[WeatherID]"
                          lineageId="Package\Foreach Loop  - Loop through Cities\DFT - Load Forcast data - 3 hour\SCR - Extract 3Hour Forecast data from API.Outputs[Output 0].Columns[WeatherID]" />
                        <inputColumn
                          refId="Package\Foreach Loop  - Loop through Cities\DFT - Load Forcast data - 3 hour\OLEDB_Dest - Staging_Forecast_3h.Inputs[OLE DB Destination Input].Columns[WeatherMain]"
                          cachedDataType="wstr"
                          cachedLength="60"
                          cachedName="WeatherMain"
                          externalMetadataColumnId="Package\Foreach Loop  - Loop through Cities\DFT - Load Forcast data - 3 hour\OLEDB_Dest - Staging_Forecast_3h.Inputs[OLE DB Destination Input].ExternalColumns[WeatherMain]"
                          lineageId="Package\Foreach Loop  - Loop through Cities\DFT - Load Forcast data - 3 hour\SCR - Extract 3Hour Forecast data from API.Outputs[Output 0].Columns[WeatherMain]" />
                        <inputColumn
                          refId="Package\Foreach Loop  - Loop through Cities\DFT - Load Forcast data - 3 hour\OLEDB_Dest - Staging_Forecast_3h.Inputs[OLE DB Destination Input].Columns[WeatherDesc]"
                          cachedDataType="wstr"
                          cachedLength="100"
                          cachedName="WeatherDesc"
                          externalMetadataColumnId="Package\Foreach Loop  - Loop through Cities\DFT - Load Forcast data - 3 hour\OLEDB_Dest - Staging_Forecast_3h.Inputs[OLE DB Destination Input].ExternalColumns[WeatherDesc]"
                          lineageId="Package\Foreach Loop  - Loop through Cities\DFT - Load Forcast data - 3 hour\SCR - Extract 3Hour Forecast data from API.Outputs[Output 0].Columns[WeatherDesc]" />
                        <inputColumn
                          refId="Package\Foreach Loop  - Loop through Cities\DFT - Load Forcast data - 3 hour\OLEDB_Dest - Staging_Forecast_3h.Inputs[OLE DB Destination Input].Columns[WeatherIcon]"
                          cachedDataType="wstr"
                          cachedLength="10"
                          cachedName="WeatherIcon"
                          externalMetadataColumnId="Package\Foreach Loop  - Loop through Cities\DFT - Load Forcast data - 3 hour\OLEDB_Dest - Staging_Forecast_3h.Inputs[OLE DB Destination Input].ExternalColumns[WeatherIcon]"
                          lineageId="Package\Foreach Loop  - Loop through Cities\DFT - Load Forcast data - 3 hour\SCR - Extract 3Hour Forecast data from API.Outputs[Output 0].Columns[WeatherIcon]" />
                        <inputColumn
                          refId="Package\Foreach Loop  - Loop through Cities\DFT - Load Forcast data - 3 hour\OLEDB_Dest - Staging_Forecast_3h.Inputs[OLE DB Destination Input].Columns[WindSpeed]"
                          cachedDataType="decimal"
                          cachedName="WindSpeed"
                          externalMetadataColumnId="Package\Foreach Loop  - Loop through Cities\DFT - Load Forcast data - 3 hour\OLEDB_Dest - Staging_Forecast_3h.Inputs[OLE DB Destination Input].ExternalColumns[WindSpeed]"
                          lineageId="Package\Foreach Loop  - Loop through Cities\DFT - Load Forcast data - 3 hour\SCR - Extract 3Hour Forecast data from API.Outputs[Output 0].Columns[WindSpeed]" />
                        <inputColumn
                          refId="Package\Foreach Loop  - Loop through Cities\DFT - Load Forcast data - 3 hour\OLEDB_Dest - Staging_Forecast_3h.Inputs[OLE DB Destination Input].Columns[TempMin]"
                          cachedDataType="decimal"
                          cachedName="TempMin"
                          externalMetadataColumnId="Package\Foreach Loop  - Loop through Cities\DFT - Load Forcast data - 3 hour\OLEDB_Dest - Staging_Forecast_3h.Inputs[OLE DB Destination Input].ExternalColumns[Temp_Min]"
                          lineageId="Package\Foreach Loop  - Loop through Cities\DFT - Load Forcast data - 3 hour\SCR - Extract 3Hour Forecast data from API.Outputs[Output 0].Columns[TempMin]" />
                        <inputColumn
                          refId="Package\Foreach Loop  - Loop through Cities\DFT - Load Forcast data - 3 hour\OLEDB_Dest - Staging_Forecast_3h.Inputs[OLE DB Destination Input].Columns[TempMax]"
                          cachedDataType="decimal"
                          cachedName="TempMax"
                          externalMetadataColumnId="Package\Foreach Loop  - Loop through Cities\DFT - Load Forcast data - 3 hour\OLEDB_Dest - Staging_Forecast_3h.Inputs[OLE DB Destination Input].ExternalColumns[Temp_Max]"
                          lineageId="Package\Foreach Loop  - Loop through Cities\DFT - Load Forcast data - 3 hour\SCR - Extract 3Hour Forecast data from API.Outputs[Output 0].Columns[TempMax]" />
                        <inputColumn
                          refId="Package\Foreach Loop  - Loop through Cities\DFT - Load Forcast data - 3 hour\OLEDB_Dest - Staging_Forecast_3h.Inputs[OLE DB Destination Input].Columns[CitiID]"
                          cachedDataType="i4"
                          cachedName="CitiID"
                          externalMetadataColumnId="Package\Foreach Loop  - Loop through Cities\DFT - Load Forcast data - 3 hour\OLEDB_Dest - Staging_Forecast_3h.Inputs[OLE DB Destination Input].ExternalColumns[CityID]"
                          lineageId="Package\Foreach Loop  - Loop through Cities\DFT - Load Forcast data - 3 hour\SCR - Extract 3Hour Forecast data from API.Outputs[Output 0].Columns[CitiID]" />
                        <inputColumn
                          refId="Package\Foreach Loop  - Loop through Cities\DFT - Load Forcast data - 3 hour\OLEDB_Dest - Staging_Forecast_3h.Inputs[OLE DB Destination Input].Columns[CitiName]"
                          cachedDataType="wstr"
                          cachedLength="60"
                          cachedName="CitiName"
                          externalMetadataColumnId="Package\Foreach Loop  - Loop through Cities\DFT - Load Forcast data - 3 hour\OLEDB_Dest - Staging_Forecast_3h.Inputs[OLE DB Destination Input].ExternalColumns[CityName]"
                          lineageId="Package\Foreach Loop  - Loop through Cities\DFT - Load Forcast data - 3 hour\SCR - Extract 3Hour Forecast data from API.Outputs[Output 0].Columns[CitiName]" />
                        <inputColumn
                          refId="Package\Foreach Loop  - Loop through Cities\DFT - Load Forcast data - 3 hour\OLEDB_Dest - Staging_Forecast_3h.Inputs[OLE DB Destination Input].Columns[SunSet]"
                          cachedDataType="wstr"
                          cachedLength="12"
                          cachedName="SunSet"
                          externalMetadataColumnId="Package\Foreach Loop  - Loop through Cities\DFT - Load Forcast data - 3 hour\OLEDB_Dest - Staging_Forecast_3h.Inputs[OLE DB Destination Input].ExternalColumns[SunSetTime]"
                          lineageId="Package\Foreach Loop  - Loop through Cities\DFT - Load Forcast data - 3 hour\SCR - Extract 3Hour Forecast data from API.Outputs[Output 0].Columns[SunSet]" />
                        <inputColumn
                          refId="Package\Foreach Loop  - Loop through Cities\DFT - Load Forcast data - 3 hour\OLEDB_Dest - Staging_Forecast_3h.Inputs[OLE DB Destination Input].Columns[SunRise]"
                          cachedDataType="wstr"
                          cachedLength="12"
                          cachedName="SunRise"
                          externalMetadataColumnId="Package\Foreach Loop  - Loop through Cities\DFT - Load Forcast data - 3 hour\OLEDB_Dest - Staging_Forecast_3h.Inputs[OLE DB Destination Input].ExternalColumns[SunRiseTime]"
                          lineageId="Package\Foreach Loop  - Loop through Cities\DFT - Load Forcast data - 3 hour\SCR - Extract 3Hour Forecast data from API.Outputs[Output 0].Columns[SunRise]" />
                        <inputColumn
                          refId="Package\Foreach Loop  - Loop through Cities\DFT - Load Forcast data - 3 hour\OLEDB_Dest - Staging_Forecast_3h.Inputs[OLE DB Destination Input].Columns[Cloudiness]"
                          cachedDataType="i4"
                          cachedName="Cloudiness"
                          externalMetadataColumnId="Package\Foreach Loop  - Loop through Cities\DFT - Load Forcast data - 3 hour\OLEDB_Dest - Staging_Forecast_3h.Inputs[OLE DB Destination Input].ExternalColumns[Cloudniess]"
                          lineageId="Package\Foreach Loop  - Loop through Cities\DFT - Load Forcast data - 3 hour\SCR - Extract 3Hour Forecast data from API.Outputs[Output 0].Columns[Cloudiness]" />
                        <inputColumn
                          refId="Package\Foreach Loop  - Loop through Cities\DFT - Load Forcast data - 3 hour\OLEDB_Dest - Staging_Forecast_3h.Inputs[OLE DB Destination Input].Columns[Rain_3H]"
                          cachedDataType="wstr"
                          cachedLength="10"
                          cachedName="Rain_3H"
                          externalMetadataColumnId="Package\Foreach Loop  - Loop through Cities\DFT - Load Forcast data - 3 hour\OLEDB_Dest - Staging_Forecast_3h.Inputs[OLE DB Destination Input].ExternalColumns[Rain_Vol_3H]"
                          lineageId="Package\Foreach Loop  - Loop through Cities\DFT - Load Forcast data - 3 hour\SCR - Extract 3Hour Forecast data from API.Outputs[Output 0].Columns[Rain_3H]" />
                        <inputColumn
                          refId="Package\Foreach Loop  - Loop through Cities\DFT - Load Forcast data - 3 hour\OLEDB_Dest - Staging_Forecast_3h.Inputs[OLE DB Destination Input].Columns[Message]"
                          cachedDataType="wstr"
                          cachedLength="100"
                          cachedName="Message"
                          externalMetadataColumnId="Package\Foreach Loop  - Loop through Cities\DFT - Load Forcast data - 3 hour\OLEDB_Dest - Staging_Forecast_3h.Inputs[OLE DB Destination Input].ExternalColumns[Message]"
                          lineageId="Package\Foreach Loop  - Loop through Cities\DFT - Load Forcast data - 3 hour\SCR - Extract 3Hour Forecast data from API.Outputs[Output 0].Columns[Message]" />
                        <inputColumn
                          refId="Package\Foreach Loop  - Loop through Cities\DFT - Load Forcast data - 3 hour\OLEDB_Dest - Staging_Forecast_3h.Inputs[OLE DB Destination Input].Columns[Cnt]"
                          cachedDataType="i4"
                          cachedName="Cnt"
                          externalMetadataColumnId="Package\Foreach Loop  - Loop through Cities\DFT - Load Forcast data - 3 hour\OLEDB_Dest - Staging_Forecast_3h.Inputs[OLE DB Destination Input].ExternalColumns[Cnt]"
                          lineageId="Package\Foreach Loop  - Loop through Cities\DFT - Load Forcast data - 3 hour\SCR - Extract 3Hour Forecast data from API.Outputs[Output 0].Columns[Cnt]" />
                        <inputColumn
                          refId="Package\Foreach Loop  - Loop through Cities\DFT - Load Forcast data - 3 hour\OLEDB_Dest - Staging_Forecast_3h.Inputs[OLE DB Destination Input].Columns[Temp_KF]"
                          cachedDataType="decimal"
                          cachedName="Temp_KF"
                          externalMetadataColumnId="Package\Foreach Loop  - Loop through Cities\DFT - Load Forcast data - 3 hour\OLEDB_Dest - Staging_Forecast_3h.Inputs[OLE DB Destination Input].ExternalColumns[Temp_KF]"
                          lineageId="Package\Foreach Loop  - Loop through Cities\DFT - Load Forcast data - 3 hour\SCR - Extract 3Hour Forecast data from API.Outputs[Output 0].Columns[Temp_KF]" />
                        <inputColumn
                          refId="Package\Foreach Loop  - Loop through Cities\DFT - Load Forcast data - 3 hour\OLEDB_Dest - Staging_Forecast_3h.Inputs[OLE DB Destination Input].Columns[WindDeg]"
                          cachedDataType="decimal"
                          cachedName="WindDeg"
                          externalMetadataColumnId="Package\Foreach Loop  - Loop through Cities\DFT - Load Forcast data - 3 hour\OLEDB_Dest - Staging_Forecast_3h.Inputs[OLE DB Destination Input].ExternalColumns[WindDeg]"
                          lineageId="Package\Foreach Loop  - Loop through Cities\DFT - Load Forcast data - 3 hour\SCR - Extract 3Hour Forecast data from API.Outputs[Output 0].Columns[WindDeg]" />
                        <inputColumn
                          refId="Package\Foreach Loop  - Loop through Cities\DFT - Load Forcast data - 3 hour\OLEDB_Dest - Staging_Forecast_3h.Inputs[OLE DB Destination Input].Columns[TimeofDataForecasted]"
                          cachedDataType="wstr"
                          cachedLength="16"
                          cachedName="TimeofDataForecasted"
                          externalMetadataColumnId="Package\Foreach Loop  - Loop through Cities\DFT - Load Forcast data - 3 hour\OLEDB_Dest - Staging_Forecast_3h.Inputs[OLE DB Destination Input].ExternalColumns[TimeofDataForecasted]"
                          lineageId="Package\Foreach Loop  - Loop through Cities\DFT - Load Forcast data - 3 hour\SCR - Extract 3Hour Forecast data from API.Outputs[Output 0].Columns[TimeofDataForecasted]" />
                        <inputColumn
                          refId="Package\Foreach Loop  - Loop through Cities\DFT - Load Forcast data - 3 hour\OLEDB_Dest - Staging_Forecast_3h.Inputs[OLE DB Destination Input].Columns[Code]"
                          cachedDataType="i4"
                          cachedName="Code"
                          externalMetadataColumnId="Package\Foreach Loop  - Loop through Cities\DFT - Load Forcast data - 3 hour\OLEDB_Dest - Staging_Forecast_3h.Inputs[OLE DB Destination Input].ExternalColumns[Code]"
                          lineageId="Package\Foreach Loop  - Loop through Cities\DFT - Load Forcast data - 3 hour\SCR - Extract 3Hour Forecast data from API.Outputs[Output 0].Columns[Code]" />
                        <inputColumn
                          refId="Package\Foreach Loop  - Loop through Cities\DFT - Load Forcast data - 3 hour\OLEDB_Dest - Staging_Forecast_3h.Inputs[OLE DB Destination Input].Columns[SysPod]"
                          cachedDataType="wstr"
                          cachedLength="10"
                          cachedName="SysPod"
                          externalMetadataColumnId="Package\Foreach Loop  - Loop through Cities\DFT - Load Forcast data - 3 hour\OLEDB_Dest - Staging_Forecast_3h.Inputs[OLE DB Destination Input].ExternalColumns[SysPod]"
                          lineageId="Package\Foreach Loop  - Loop through Cities\DFT - Load Forcast data - 3 hour\SCR - Extract 3Hour Forecast data from API.Outputs[Output 0].Columns[SysPod]" />
                        <inputColumn
                          refId="Package\Foreach Loop  - Loop through Cities\DFT - Load Forcast data - 3 hour\OLEDB_Dest - Staging_Forecast_3h.Inputs[OLE DB Destination Input].Columns[CalculationDateTime]"
                          cachedDataType="dbTimeStamp"
                          cachedName="CalculationDateTime"
                          externalMetadataColumnId="Package\Foreach Loop  - Loop through Cities\DFT - Load Forcast data - 3 hour\OLEDB_Dest - Staging_Forecast_3h.Inputs[OLE DB Destination Input].ExternalColumns[Calculated_DateTime]"
                          lineageId="Package\Foreach Loop  - Loop through Cities\DFT - Load Forcast data - 3 hour\SCR - Extract 3Hour Forecast data from API.Outputs[Output 0].Columns[CalculationDateTime]" />
                      </inputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Foreach Loop  - Loop through Cities\DFT - Load Forcast data - 3 hour\OLEDB_Dest - Staging_Forecast_3h.Inputs[OLE DB Destination Input].ExternalColumns[Latitude]"
                          dataType="wstr"
                          length="16"
                          name="Latitude" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop  - Loop through Cities\DFT - Load Forcast data - 3 hour\OLEDB_Dest - Staging_Forecast_3h.Inputs[OLE DB Destination Input].ExternalColumns[Longitude]"
                          dataType="wstr"
                          length="16"
                          name="Longitude" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop  - Loop through Cities\DFT - Load Forcast data - 3 hour\OLEDB_Dest - Staging_Forecast_3h.Inputs[OLE DB Destination Input].ExternalColumns[WeatherID]"
                          dataType="i4"
                          name="WeatherID" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop  - Loop through Cities\DFT - Load Forcast data - 3 hour\OLEDB_Dest - Staging_Forecast_3h.Inputs[OLE DB Destination Input].ExternalColumns[WeatherMain]"
                          dataType="wstr"
                          length="60"
                          name="WeatherMain" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop  - Loop through Cities\DFT - Load Forcast data - 3 hour\OLEDB_Dest - Staging_Forecast_3h.Inputs[OLE DB Destination Input].ExternalColumns[WeatherDesc]"
                          dataType="wstr"
                          length="100"
                          name="WeatherDesc" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop  - Loop through Cities\DFT - Load Forcast data - 3 hour\OLEDB_Dest - Staging_Forecast_3h.Inputs[OLE DB Destination Input].ExternalColumns[WeatherIcon]"
                          dataType="wstr"
                          length="10"
                          name="WeatherIcon" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop  - Loop through Cities\DFT - Load Forcast data - 3 hour\OLEDB_Dest - Staging_Forecast_3h.Inputs[OLE DB Destination Input].ExternalColumns[Temperature]"
                          dataType="numeric"
                          name="Temperature"
                          precision="5"
                          scale="2" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop  - Loop through Cities\DFT - Load Forcast data - 3 hour\OLEDB_Dest - Staging_Forecast_3h.Inputs[OLE DB Destination Input].ExternalColumns[Pressure]"
                          dataType="i4"
                          name="Pressure" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop  - Loop through Cities\DFT - Load Forcast data - 3 hour\OLEDB_Dest - Staging_Forecast_3h.Inputs[OLE DB Destination Input].ExternalColumns[Humidity]"
                          dataType="i2"
                          name="Humidity" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop  - Loop through Cities\DFT - Load Forcast data - 3 hour\OLEDB_Dest - Staging_Forecast_3h.Inputs[OLE DB Destination Input].ExternalColumns[Temp_Min]"
                          dataType="numeric"
                          name="Temp_Min"
                          precision="5"
                          scale="2" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop  - Loop through Cities\DFT - Load Forcast data - 3 hour\OLEDB_Dest - Staging_Forecast_3h.Inputs[OLE DB Destination Input].ExternalColumns[Temp_Max]"
                          dataType="numeric"
                          name="Temp_Max"
                          precision="5"
                          scale="2" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop  - Loop through Cities\DFT - Load Forcast data - 3 hour\OLEDB_Dest - Staging_Forecast_3h.Inputs[OLE DB Destination Input].ExternalColumns[SeaLevel]"
                          dataType="numeric"
                          name="SeaLevel"
                          precision="7"
                          scale="2" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop  - Loop through Cities\DFT - Load Forcast data - 3 hour\OLEDB_Dest - Staging_Forecast_3h.Inputs[OLE DB Destination Input].ExternalColumns[GroundLevel]"
                          dataType="wstr"
                          length="10"
                          name="GroundLevel" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop  - Loop through Cities\DFT - Load Forcast data - 3 hour\OLEDB_Dest - Staging_Forecast_3h.Inputs[OLE DB Destination Input].ExternalColumns[WindSpeed]"
                          dataType="numeric"
                          name="WindSpeed"
                          precision="5"
                          scale="2" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop  - Loop through Cities\DFT - Load Forcast data - 3 hour\OLEDB_Dest - Staging_Forecast_3h.Inputs[OLE DB Destination Input].ExternalColumns[Cloudniess]"
                          dataType="i2"
                          name="Cloudniess" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop  - Loop through Cities\DFT - Load Forcast data - 3 hour\OLEDB_Dest - Staging_Forecast_3h.Inputs[OLE DB Destination Input].ExternalColumns[Rain_Vol_3H]"
                          dataType="wstr"
                          length="10"
                          name="Rain_Vol_3H" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop  - Loop through Cities\DFT - Load Forcast data - 3 hour\OLEDB_Dest - Staging_Forecast_3h.Inputs[OLE DB Destination Input].ExternalColumns[CountryCode]"
                          dataType="wstr"
                          length="2"
                          name="CountryCode" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop  - Loop through Cities\DFT - Load Forcast data - 3 hour\OLEDB_Dest - Staging_Forecast_3h.Inputs[OLE DB Destination Input].ExternalColumns[SunRiseTime]"
                          dataType="wstr"
                          length="12"
                          name="SunRiseTime" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop  - Loop through Cities\DFT - Load Forcast data - 3 hour\OLEDB_Dest - Staging_Forecast_3h.Inputs[OLE DB Destination Input].ExternalColumns[SunSetTime]"
                          dataType="wstr"
                          length="12"
                          name="SunSetTime" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop  - Loop through Cities\DFT - Load Forcast data - 3 hour\OLEDB_Dest - Staging_Forecast_3h.Inputs[OLE DB Destination Input].ExternalColumns[TimeZone]"
                          dataType="wstr"
                          length="16"
                          name="TimeZone" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop  - Loop through Cities\DFT - Load Forcast data - 3 hour\OLEDB_Dest - Staging_Forecast_3h.Inputs[OLE DB Destination Input].ExternalColumns[CityID]"
                          dataType="i4"
                          name="CityID" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop  - Loop through Cities\DFT - Load Forcast data - 3 hour\OLEDB_Dest - Staging_Forecast_3h.Inputs[OLE DB Destination Input].ExternalColumns[CityName]"
                          dataType="wstr"
                          length="60"
                          name="CityName" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop  - Loop through Cities\DFT - Load Forcast data - 3 hour\OLEDB_Dest - Staging_Forecast_3h.Inputs[OLE DB Destination Input].ExternalColumns[Code]"
                          dataType="i4"
                          name="Code" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop  - Loop through Cities\DFT - Load Forcast data - 3 hour\OLEDB_Dest - Staging_Forecast_3h.Inputs[OLE DB Destination Input].ExternalColumns[Message]"
                          dataType="wstr"
                          length="100"
                          name="Message" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop  - Loop through Cities\DFT - Load Forcast data - 3 hour\OLEDB_Dest - Staging_Forecast_3h.Inputs[OLE DB Destination Input].ExternalColumns[Cnt]"
                          dataType="i4"
                          name="Cnt" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop  - Loop through Cities\DFT - Load Forcast data - 3 hour\OLEDB_Dest - Staging_Forecast_3h.Inputs[OLE DB Destination Input].ExternalColumns[Temp_KF]"
                          dataType="numeric"
                          name="Temp_KF"
                          precision="5"
                          scale="2" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop  - Loop through Cities\DFT - Load Forcast data - 3 hour\OLEDB_Dest - Staging_Forecast_3h.Inputs[OLE DB Destination Input].ExternalColumns[WindDeg]"
                          dataType="numeric"
                          name="WindDeg"
                          precision="6"
                          scale="3" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop  - Loop through Cities\DFT - Load Forcast data - 3 hour\OLEDB_Dest - Staging_Forecast_3h.Inputs[OLE DB Destination Input].ExternalColumns[TimeofDataForecasted]"
                          dataType="wstr"
                          length="16"
                          name="TimeofDataForecasted" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop  - Loop through Cities\DFT - Load Forcast data - 3 hour\OLEDB_Dest - Staging_Forecast_3h.Inputs[OLE DB Destination Input].ExternalColumns[SysPod]"
                          dataType="wstr"
                          length="10"
                          name="SysPod" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop  - Loop through Cities\DFT - Load Forcast data - 3 hour\OLEDB_Dest - Staging_Forecast_3h.Inputs[OLE DB Destination Input].ExternalColumns[InsertedDateTime]"
                          dataType="dbTimeStamp"
                          name="InsertedDateTime" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop  - Loop through Cities\DFT - Load Forcast data - 3 hour\OLEDB_Dest - Staging_Forecast_3h.Inputs[OLE DB Destination Input].ExternalColumns[Calculated_DateTime]"
                          dataType="dbTimeStamp"
                          name="Calculated_DateTime" />
                      </externalMetadataColumns>
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop  - Loop through Cities\DFT - Load Forcast data - 3 hour\OLEDB_Dest - Staging_Forecast_3h.Outputs[OLE DB Destination Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="OLE DB Destination Error Output"
                      synchronousInputId="Package\Foreach Loop  - Loop through Cities\DFT - Load Forcast data - 3 hour\OLEDB_Dest - Staging_Forecast_3h.Inputs[OLE DB Destination Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop  - Loop through Cities\DFT - Load Forcast data - 3 hour\OLEDB_Dest - Staging_Forecast_3h.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop  - Loop through Cities\DFT - Load Forcast data - 3 hour\OLEDB_Dest - Staging_Forecast_3h.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach Loop  - Loop through Cities\DFT - Load Forcast data - 3 hour\OLEDB_Dest - Staging_Forecast_3h.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop  - Loop through Cities\DFT - Load Forcast data - 3 hour\OLEDB_Dest - Staging_Forecast_3h.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Loop  - Loop through Cities\DFT - Load Forcast data - 3 hour\SCR - Extract 3Hour Forecast data from API"
                  componentClassID="Microsoft.ManagedComponentHost"
                  contactInfo="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum.;Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;11"
                  description="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum."
                  name="SCR - Extract 3Hour Forecast data from API"
                  version="11">
                  <properties>
                    <property
                      dataType="System.String"
                      description="Stores the source code of the component"
                      isArray="true"
                      name="SourceCode"
                      state="cdata">
                      <arrayElements
                        arrayElementCount="30">
                        <arrayElement
                          dataType="System.String"><![CDATA[ComponentWrapper.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services component wrapper
*  This module defines the base class for your component
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

public class UserComponent: ScriptComponent
{
    public Connections Connections;
    public Variables Variables;
    public UserComponent()
    {
        Connections = new Connections(this);
        Variables = new Variables(this);
    }

    public Output0Buffer Output0Buffer;

    public virtual void FinishOutputs()
    {
    }

    private void MarkOutputsFinished()
    {

        if (null != Output0Buffer)
        {
            Output0Buffer.SetEndOfRowset();
            Output0Buffer = null;
        }

    }

    public override void PrimeOutput(int Outputs, int[] OutputIDs, PipelineBuffer[] Buffers, OutputNameMap OutputMap)
    {
       for(int Idx = 0; Idx < Outputs; Idx++)
       {
            if(OutputIDs[Idx] == GetOutputID(OutputMap, @"Output 0"))
            {
                Output0Buffer = new Output0Buffer(Buffers[Idx], GetColumnIndexes(OutputIDs[Idx]), OutputMap);
            }
        }

        CreateNewOutputRows();

        FinishOutputs();
        MarkOutputsFinished();

    }

    public virtual void CreateNewOutputRows()
    {
    }

}

public class Connections
{
    ScriptComponent ParentComponent;

    public Connections(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}

public class Variables
{
    ScriptComponent ParentComponent;

    public Variables(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

    public String APIKey
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["APIKey"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public String CitiID
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["CitiID"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public String Forecast3hURL
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["Forecast_3h_URL"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public String Units
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["Units"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Resources.resx]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[main.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[#region Help:  Introduction to the Script Component
/* The Script Component allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services data flow.
 *
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script component. */
#endregion

#region Namespaces
using System;
using System.Data;
using System.Net;
using System.Collections.Generic;
using System.Web.Script.Serialization;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

#endregion

/// <summary>
/// This is the class to which to add your code.  Do not change the name, attributes, or parent
/// of this class.
/// </summary>
[Microsoft.SqlServer.Dts.Pipeline.SSISScriptComponentEntryPointAttribute]
public class ScriptMain : UserComponent
{
    #region Help:  Using Integration Services variables and parameters
    /* To use a variable in this script, first ensure that the variable has been added to
     * either the list contained in the ReadOnlyVariables property or the list contained in
     * the ReadWriteVariables property of this script component, according to whether or not your
     * code needs to write into the variable.  To do so, save this script, close this instance of
     * Visual Studio, and update the ReadOnlyVariables and ReadWriteVariables properties in the
     * Script Transformation Editor window.
     * To use a parameter in this script, follow the same steps. Parameters are always read-only.
     *
     * Example of reading from a variable or parameter:
     *  DateTime startTime = Variables.MyStartTime;
     *
     * Example of writing to a variable:
     *  Variables.myStringVariable = "new value";
     */
    #endregion

    #region Help:  Using Integration Services Connnection Managers
    /* Some types of connection managers can be used in this script component.  See the help topic
     * "Working with Connection Managers Programatically" for details.
     *
     * To use a connection manager in this script, first ensure that the connection manager has
     * been added to either the list of connection managers on the Connection Managers page of the
     * script component editor.  To add the connection manager, save this script, close this instance of
     * Visual Studio, and add the Connection Manager to the list.
     *
     * If the component needs to hold a connection open while processing rows, override the
     * AcquireConnections and ReleaseConnections methods.
     * 
     * Example of using an ADO.Net connection manager to acquire a SqlConnection:
     *  object rawConnection = Connections.SalesDB.AcquireConnection(transaction);
     *  SqlConnection salesDBConn = (SqlConnection)rawConnection;
     *
     * Example of using a File connection manager to acquire a file path:
     *  object rawConnection = Connections.Prices_zip.AcquireConnection(transaction);
     *  string filePath = (string)rawConnection;
     *
     * Example of releasing a connection manager:
     *  Connections.SalesDB.ReleaseConnection(rawConnection);
     */
    #endregion

    #region Help:  Firing Integration Services Events
    /* This script component can fire events.
     *
     * Example of firing an error event:
     *  ComponentMetaData.FireError(10, "Process Values", "Bad value", "", 0, out cancel);
     *
     * Example of firing an information event:
     *  ComponentMetaData.FireInformation(10, "Process Values", "Processing has started", "", 0, fireAgain);
     *
     * Example of firing a warning event:
     *  ComponentMetaData.FireWarning(10, "Process Values", "No rows were received", "", 0);
     */
    #endregion

    /// <summary>
    /// This method is called once, before rows begin to be processed in the data flow.
    ///
    /// You can remove this method if you don't need to do anything here.
    /// </summary>
    public override void PreExecute()
    {
        base.PreExecute();
        /*
         * Add your code here
         */
    }

    /// <summary>
    /// This method is called after all the rows have passed through this component.
    ///
    /// You can delete this method if you don't need to do anything here.
    /// </summary>
    public override void PostExecute()
    {
        base.PostExecute();
        /*
         * Add your code here
         */
    }

    public override void CreateNewOutputRows()
    {
        /*
          Add rows by calling the AddRow method on the member variable named "<Output Name>Buffer".
          For example, call MyOutputBuffer.AddRow() if your output was named "MyOutput".
        */
        var forecastUrl = Variables.Forecast3hURL;
        var citiId = Variables.CitiID;
        var units = Variables.Units;
        var apiKey = Variables.APIKey; 

        //Set URL for the location 
        var apiUrl = forecastUrl + citiId + "&units=" + units + "&appid=" + apiKey;

        //Read file from web

        var textFromFile = (new System.Net.WebClient()).DownloadString(apiUrl);

        textFromFile.Replace("\"3h\":","\"RainVol_3h\":");

        var data = new JavaScriptSerializer().Deserialize<RootObject>(textFromFile);

        foreach (var item in data.list)
        {
            foreach (var weather in item.weather)
            {
                Output0Buffer.AddRow();
                Output0Buffer.CitiID = data.city.id;
                Output0Buffer.CitiName = data.city.name;
                Output0Buffer.Latitude = data.city.coord.lat;
                Output0Buffer.Longitude = data.city.coord.lon;
                Output0Buffer.CountryCode = data.city.country;
                Output0Buffer.TimeZone = data.city.timezone;
                Output0Buffer.SunRise = data.city.sunrise;
                Output0Buffer.SunSet = data.city.sunset;
                Output0Buffer.Code = data.cod;
                Output0Buffer.Message = data.message;
                Output0Buffer.Cnt = data.cnt;
                Output0Buffer.Temperature = item.main.temp;
                Output0Buffer.TempMin = item.main.temp_min;
                Output0Buffer.TempMax = item.main.temp_max;
                Output0Buffer.Pressure = item.main.pressure;
                Output0Buffer.SeaLevel = item.main.sea_level;
                Output0Buffer.GroundLevel = item.main.grnd_level;
                Output0Buffer.Humidity = item.main.humidity;
                Output0Buffer.TempKF = item.main.temp_kf;
                Output0Buffer.WeatherID = weather.id;
                Output0Buffer.WeatherMain = weather.main;
                Output0Buffer.WeatherDesc = weather.description;
                Output0Buffer.WeatherIcon = weather.icon;
                Output0Buffer.Cloudiness = item.clouds.all;
                Output0Buffer.WindDeg = item.wind.deg;
                Output0Buffer.WindSpeed = item.wind.speed;
                Output0Buffer.Rain3H = item.rain != null ? item.rain.RainVol_3h : null;
                Output0Buffer.CalculationDateTime = item.dt_txt;
                Output0Buffer.TimeofDataForecasted = item.dt;
                Output0Buffer.SysPod = item.sys.pod;

            }
        }
    }
    public class Main
    {
        public decimal temp { get; set; }
        public decimal temp_min { get; set; }
        public decimal temp_max { get; set; }
        public decimal pressure { get; set; }
        public decimal sea_level { get; set; }
        public decimal grnd_level { get; set; }
        public int humidity { get; set; }
        public decimal temp_kf { get; set; }
    }

    public class Weather
    {
        public int id { get; set; }
        public string main { get; set; }
        public string description { get; set; }
        public string icon { get; set; }
    }

    public class Clouds
    {
        public int all { get; set; }
    }

    public class Wind
    {
        public decimal speed { get; set; }
        public decimal deg { get; set; }
    }

    public class Rain
    {
        public string RainVol_3h { get; set; }
    }

    public class Sys
    {
        public string pod { get; set; }
    }

    public class WeatherData
    {
        public string dt { get; set; }
        public Main main { get; set; }
        public List<Weather> weather { get; set; }
        public Clouds clouds { get; set; }
        public Wind wind { get; set; }
        public Rain rain { get; set; }
        public Sys sys { get; set; }
        public DateTime dt_txt { get; set; }
    }

    public class Coord
    {
        public string lat { get; set; }
        public string lon { get; set; }
    }

    public class City
    {
        public int id { get; set; }
        public string name { get; set; }
        public Coord coord { get; set; }
        public string country { get; set; }
        public string timezone { get; set; }
        public string sunrise { get; set; }
        public string sunset { get; set; }
    }

    public class RootObject
    {
        public int cod { get; set; }
        public string message { get; set; }
        public int cnt { get; set; }
        public List<WeatherData> list { get; set; }
        public City city { get; set; }
    }
}]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[BufferWrapper.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services buffer wrappers
*  This module defines classes for accessing data flow buffers
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */



using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;

public class Output0Buffer: ScriptBuffer

{
    public Output0Buffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public Int32 CitiID
    {
        set
        {
            this[0] = value;
        }
    }
    public bool CitiID_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(0);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String CitiName
    {
        set
        {
            this[1] = value;
        }
    }
    public bool CitiName_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(1);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String Latitude
    {
        set
        {
            this[2] = value;
        }
    }
    public bool Latitude_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(2);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String Longitude
    {
        set
        {
            this[3] = value;
        }
    }
    public bool Longitude_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(3);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String CountryCode
    {
        set
        {
            this[4] = value;
        }
    }
    public bool CountryCode_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(4);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String TimeZone
    {
        set
        {
            this[5] = value;
        }
    }
    public bool TimeZone_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(5);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String SunRise
    {
        set
        {
            this[6] = value;
        }
    }
    public bool SunRise_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(6);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String SunSet
    {
        set
        {
            this[7] = value;
        }
    }
    public bool SunSet_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(7);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String Message
    {
        set
        {
            this[8] = value;
        }
    }
    public bool Message_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(8);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Int32 Cnt
    {
        set
        {
            this[9] = value;
        }
    }
    public bool Cnt_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(9);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Decimal Temperature
    {
        set
        {
            this[10] = value;
        }
    }
    public bool Temperature_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(10);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Decimal TempMin
    {
        set
        {
            this[11] = value;
        }
    }
    public bool TempMin_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(11);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Decimal TempMax
    {
        set
        {
            this[12] = value;
        }
    }
    public bool TempMax_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(12);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Decimal Pressure
    {
        set
        {
            this[13] = value;
        }
    }
    public bool Pressure_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(13);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Decimal SeaLevel
    {
        set
        {
            this[14] = value;
        }
    }
    public bool SeaLevel_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(14);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Decimal GroundLevel
    {
        set
        {
            this[15] = value;
        }
    }
    public bool GroundLevel_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(15);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Int32 Humidity
    {
        set
        {
            this[16] = value;
        }
    }
    public bool Humidity_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(16);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Decimal TempKF
    {
        set
        {
            this[17] = value;
        }
    }
    public bool TempKF_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(17);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Int32 WeatherID
    {
        set
        {
            this[18] = value;
        }
    }
    public bool WeatherID_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(18);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String WeatherMain
    {
        set
        {
            this[19] = value;
        }
    }
    public bool WeatherMain_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(19);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String WeatherDesc
    {
        set
        {
            this[20] = value;
        }
    }
    public bool WeatherDesc_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(20);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String WeatherIcon
    {
        set
        {
            this[21] = value;
        }
    }
    public bool WeatherIcon_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(21);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Int32 Cloudiness
    {
        set
        {
            this[22] = value;
        }
    }
    public bool Cloudiness_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(22);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Decimal WindSpeed
    {
        set
        {
            this[23] = value;
        }
    }
    public bool WindSpeed_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(23);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Decimal WindDeg
    {
        set
        {
            this[24] = value;
        }
    }
    public bool WindDeg_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(24);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String Rain3H
    {
        set
        {
            this[25] = value;
        }
    }
    public bool Rain3H_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(25);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public DateTime CalculationDateTime
    {
        set
        {
            this[26] = value;
        }
    }
    public bool CalculationDateTime_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(26);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String TimeofDataForecasted
    {
        set
        {
            this[27] = value;
        }
    }
    public bool TimeofDataForecasted_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(27);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String SysPod
    {
        set
        {
            this[28] = value;
        }
    }
    public bool SysPod_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(28);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Int32 Code
    {
        set
        {
            this[29] = value;
        }
    }
    public bool Code_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(29);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    new public void AddRow()
    {
        base.AddRow();
    }

    new public void SetEndOfRowset()
    {
        base.SetEndOfRowset();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[SC_8279450bdbef4eb6bb78e8632ec19adc.csproj]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{2B80E086-BABB-4611-BB53-C21D6448548D}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>SC_8279450bdbef4eb6bb78e8632ec19adc</RootNamespace>
    <AssemblyName>SC_8279450bdbef4eb6bb78e8632ec19adc</AssemblyName>
    <TargetFrameworkVersion>v4.5</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Web.Extensions" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.TxScript, Version=14.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSRuntimeWrap, Version=14.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSPipelineWrap, Version=14.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.PipelineHost, Version=14.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Compile Include="main.cs" />
    <Compile Include="BufferWrapper.cs" />
    <Compile Include="ComponentWrapper.cs" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <!-- This section defines VSTA properties that describe the host-changable project properties. -->
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" />
        <Host Name="ScriptComponent" IconIndex="0" />
        <ProjectClient>
          <HostIdentifier>SSIS_SC140</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Settings.Designer.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_8279450bdbef4eb6bb78e8632ec19adc.Properties.Settings.get_Default():SC_8279450bdbef4eb6bb78e8632ec19adc.Properties.Sett" +
    "ings")]

namespace SC_8279450bdbef4eb6bb78e8632ec19adc.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Project]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:CodeName>SC_8279450bdbef4eb6bb78e8632ec19adc</msb:CodeName>
    <msb:Language>msBuild</msb:Language>
    <msb:DisplayName>SC_8279450bdbef4eb6bb78e8632ec19adc</msb:DisplayName>
    <msb:ProjectId>{C569E78F-0628-4369-8623-F0E4917B1CD7}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="SC_8279450bdbef4eb6bb78e8632ec19adc.csproj" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="Properties\Settings.Designer.cs" />
    <msb:File Include="main.cs" />
    <msb:File Include="BufferWrapper.cs" />
    <msb:File Include="ComponentWrapper.cs" />
    <msb:File Include="Properties\Resources.resx" />
    <msb:File Include="Properties\Resources.Designer.cs" />
  </msb:ItemGroup>
</c:Project>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\AssemblyInfo.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("SC_8279450bdbef4eb6bb78e8632ec19adc")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("SC_8279450bdbef4eb6bb78e8632ec19adc")]
[assembly: AssemblyCopyright("Copyright @  2019")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.0.0")]
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Settings.settings]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Resources.Designer.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_8279450bdbef4eb6bb78e8632ec19adc.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_8279450bdbef4eb6bb78e8632ec19adc.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_8279450bdbef4eb6bb78e8632ec19adc.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace SC_8279450bdbef4eb6bb78e8632ec19adc.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SC_8279450bdbef4eb6bb78e8632ec19adc.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}
]]></arrayElement>
                      </arrayElements>
                    </property>
                    <property
                      dataType="System.String"
                      description="Stores the binary representation of the component"
                      isArray="true"
                      name="BinaryCode"
                      state="cdata">
                      <arrayElements
                        arrayElementCount="2">
                        <arrayElement
                          dataType="System.String"><![CDATA[SC_8279450bdbef4eb6bb78e8632ec19adc.dll]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[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
AAAEKiICA30kAAAEKh4CeyUAAAQqIgIDfSUAAAQqHgJ7JgAABCoiAgN9JgAABCoeAnsnAAAEKiIC
A30nAAAEKh4CeygAAAQqIgIDfSgAAAQqHgJ7KQAABCoiAgN9KQAABCoeAnsqAAAEKiICA30qAAAE
Kh4CeysAAAQqIgIDfSsAAAQqHgJ7LAAABCoiAgN9LAAABCoeAnstAAAEKiICA30tAAAEKh4Cey4A
AAQqIgIDfS4AAAQqHgJ7LwAABCoiAgN9LwAABCpCU0pCAQABAAAAAAAMAAAAdjQuMC4zMDMxOQAA
AAAFAGwAAADIGgAAI34AADQbAACoEgAAI1N0cmluZ3MAAAAA3C0AALQBAAAjVVMAkC8AABAAAAAj
R1VJRAAAAKAvAAAoAwAAI0Jsb2IAAAAAAAAAAgAAAVcVogkJCwAAAPoBMwAWAAABAAAAKgAAABIA
AAAvAAAArgAAAG0AAAAxAAAAhQAAAAIAAAAOAAAAagAAAJIAAAAEAAAAAQAAAAYAAAABAAAACgAA
AAEAAAAAAM0JAQAAAAAABgDyBwsPBgCGCAsPBgA+B9sODwB/DwAABgBrB2YNBgDVB2YNBgC2B2YN
BgBtCGYNBgASCGYNBgArCGYNBgCCB2YNBgCdBwEJCgBGCAEGBgA6AOEAOwC5DgAABgCVEH0MBgAG
BwsPBgBICX0MBgD4BX0MCgA4DgEGDgApDgEGCgDODQEGCgAxEQEGBgAhB9sOBgBJDisPBgDCDTEN
EgDxBlAJEgBSB1AJEgCtBhwNBgAjCX0MEgAJEaoQFgChDkYNBgCaBX0MBgBBAH0MBgB4DX0MGgAR
AHkOGgABAHkOXwDGEQAAGgAiAHkOBgBJBn0MBgCmBX0MBgBIEmYNAAAAAEcAAAAAAAEAAQABABAA
rAwAABAAAQABAAEAEAAbDgAAUQABAAUAAQAQABMRAABdAAEARQABABAAFxAAAEEABABKAAEAEADJ
DwAAQQAFAEsAAAAQADIPjg9BAAYAUAAAARAA+A+OD3UACABUAAIAEACyDAAAQQAJAFcAAgAQAFkO
AABBABEAaAACABAA7g4AAEEAFQBxAAIAEADOBAAAQQAWAHQAAgAQALcMAABBABgAeQACABAAZhAA
AEEAGQB8AAIAEACoAAAAQQAaAH8AAgAQABAFAABBACIAkAACABAAaRIAAEEAJACVAAIAEACREAAA
QQArAKQABgAXEO4ABgDJD/IABgAbDvYAAQAhEfoAAQAhEfoAEQCEDP4AEQCdBgIBEQAyBQYBAQCL
AwoBAQApAwoBAQBrBAoBAQA0AgoBAQCxAgoBAQDMAgoBAQC0BA4BAQBnAgoBAQCAAQ4BAQD9AhEB
AQBZAxEBAQBDAxEBAQDoAg4BAQBpAQoBAQCAAgoBAQCVAhEBAQC/AREBAQD8AxEBAQD9AhQBAQCh
AxgBAQC6AyABAQCUASQBAQATAygBAQDSAywBAQBTBDABAQDnAxEBAQB2AxEBAQCAAQ4BAQAEAhEB
AQDUATQBAQCFBBEBAQAaAhEBAQBOAhEBAQAQBBEBAQCqAQ4BAQDrAREBAQAoBA4BAQA9BDgBAQCe
BEABUCAAAAAAxgCkCAYAAQBYIAAAAADGAK8IBgABAGAgAAAAAMYAUhAGAAEARCQAAAAAhhjEDgYA
AQBMJAAAAACGGMQOgQABAFckAAAAAIYIWwABAAQAZiQAAAAAhgj1CUQBBQB9JAAAAACGCMoFEAAG
AIckAAAAAIYIAQtEAQcAniQAAAAAhghpBRAACACoJAAAAACGCNoKRAEJAL8kAAAAAIYIWwUQAAoA
ySQAAAAAhgjFCkQBCwDgJAAAAACGCEsFEAAMAOokAAAAAIYIrgpEAQ0AASUAAAAAhggiBhAADgAL
JQAAAACGCDQLRAEPACIlAAAAAIYIxQYQABAALCUAAAAAhghzC0QBEQBDJQAAAACGCLUQEAASAE0l
AAAAAIYIGwxEARMAZCUAAAAAhgh2BRAAFABuJQAAAACGCO4KRAEVAIUlAAAAAIYI8RABABYAlSUA
AAAAhggtDEQBFwCtJQAAAACGCHUGSQEYAL0lAAAAAIYIXAtEARkA1SUAAAAAhgiQDEkBGgDlJQAA
AACGCMQLRAEbAP0lAAAAAIYIExJJARwADSYAAAAAhgg8DEQBHQAlJgAAAACGCE4GSQEeADUmAAAA
AIYISAtEAR8ATSYAAAAAhghmCUkBIABdJgAAAACGCJkLRAEhAHUmAAAAAIYIcwlJASIAhSYAAAAA
hgitC0QBIwCdJgAAAACGCIASAQAkAK0mAAAAAIYITwxEASUAxSYAAAAAhgiAAEkBJgDVJgAAAACG
CBwKRAEnAO0mAAAAAIYIZgABACgA/SYAAAAAhggHCkQBKQAVJwAAAACGCJwMEAAqACAnAAAAAIYI
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
AAADANwNAAABALsIAAABALsIAAABALsIAAABALsIAAABALsIAAABALsIAAABALsIAAABALsIAAAB
ALsIAAABALsIAAABALsIAAABALsIAAABALsIAAABALsIAAABALsIAAABALsIAAABALsIAAABALsI
AAABALsIAAABALsIAAABALsIAAABALsIAAABALsIAAABALsIAAABALsIAAABALsIAAABALsIAAAB
ALsIAAABALsIAAABALsIAAABALsIAAABALsIAAABALsIAAABALsIAAABALsIAAABALsIAAABALsI
AAABALsIAAABALsIAAABALsIAAABALsIAAABALsIAAABALsIAAABALsIAAABALsIAAABALsIAAAB
ALsIAAABALsIAAABALsIAAABALsIAAABALsIAAABALsIAAABALsIAAABALsIAAABALsIAAABALsI
AAABALsIAAABALsIAAABALsIAAABALsIAAABAEoQAAACANEOAAADACMQAAAEANwNAAABADcRAAAB
ADcRAAABALsIAAABALsIAAABALsIAAABALsIAAABALsIAAABALsIAAABALsIAAABALsIAAABALsI
AAABALsIAAABALsIAAABALsIAAABALsIAAABALsIAAABALsIAAABALsIAAABALsIAAABALsIAAAB
ALsIAAABALsIAAABALsIAAABALsIAAABALsIAAABALsIAAABALsIAAABALsIAAABALsIAAABALsI
AAABALsIAAABALsIAAABALsIAAABALsIAAABALsIAAABALsIAAABALsIAAABALsIAAABALsIAAAB
ALsIAAABALsIAAABALsICQDEDgEAEQDEDgYAGQDEDgoAKQDEDhAAMQDEDhAAOQDEDhAAQQDEDhAA
SQDEDhAAUQDEDhAAWQDEDhAAYQDEDhAAaQDEDgYAiQDEDgYAwQDEDgYA4QDEDhUAuQCkCAYAuQCv
CAYA8QB6EDYA+QDEDgYA+QAbCTwA8QAqBUEAAQHEDgYAAQHBCEcADAC2DloAFABBEWoAHAC2DloA
JABBEWoAJACpEX0ACQHpBgYAFACpEX0AoQDEDoEAoQB0DIsAoQBjDAEAGQHEDhAAoQAMEgYAoQDW
EAYAoQDZEH0AuQDEDgYAuQB0AJUAuQDnD5wAgQDEDgYAuQC9D6IAIQFrDKgAuQDhEa8AKQGyEbUA
QQG4BbwAQQFEEsUAyQDEDssA6QDEDgYALgALAF8CLgATAGgCLgAbAIcCLgAjAJACLgArALkCLgAz
ALkCLgA7ALkCLgBDAJACLgBLAL8CLgBTALkCLgBbANYCQwBjACAD4wBzACADAQFrACADIQFrACAD
QQFrACADYQFrACADgQFrACADoQFrACADwQFrACAD4QFrACADAQJrACADIQJrACADQQJrACADYQJr
ACADgQJrACADoQJrACADwQJrACAD4QJrACADAQNrACADIQNrACADQQNrACADYQNrACADgQNrACAD
oQNrACADwQNrACAD4QNrACADAQRrACADIQRrACADQQRrACADYQRrACADgQRrACADoQRrACADwQRr
ACAD4QRrACADAQVrACADIQVrACADQQVrACADYQVrACADgQVrACADoQVrACADwQVrACAD4QVrACAD
KQh7AIcCSQh7AIcC4AprACADAAtrACADIAtrACADQAtrACADYAtrACADgAtrACADoAtrACADwAtr
ACAD4AtrACADAAxrACADIAxrACADQAxrACADYAxrACADgAxrACADoAxrACADwAxrACADAA1rACAD
IA1rACADQA1rACADYA1rACADgA1rACADoA1rACADwA1rACAD4A1rACADIA5rACADQA5rACADgA5r
ACADoA5rACADwA5rACAD4A5rACADIA9rACADQA9rACADgA9rACADoA9rACAD4A9rACADABBrACAD
IBBrACADQBBrACADYBBrACADgBBrACADoBBrACADwBBrACAD4BBrACADABFrACADIBFrACADQBFr
ACADYBFrACADgBFrACADoBFrACADwBFrACADABJrACADIBJrACADQBJrACADYBJrACADoBJrACAD
wBJrACAD4BJrACADABNrACADIBNrACADQBNrACADYBNrACADgBNrACADoBNrACADwBNrACAD4BNr
ACADABRrACADIBRrACADQBRrACADgBRrACADoBRrACADwBRrACAD4BRrACADABVrACADIBVrACAD
QBVrACADYBVrACADgBVrACADoBVrACADGwCRAAMAAQAGAD0ABwBBAAgAQwAJAEQACgBMAAsAUAAM
AFEADQBTAA4AVAAPAFUAEABdABEAXwASAGYAAABfAAUCAAD5CQkCAADOBQ0CAAAFCwkCAABtBQ0C
AADeCgkCAABfBQ0CAADJCgkCAABPBQ0CAACyCgkCAAAmBg0CAAA4CwkCAADJBg0CAAB3CwkCAAC5
EA0CAAAfDAkCAAB6BQ0CAADyCgkCAAD1EAUCAAAxDAkCAAB5BhECAABgCwkCAACUDBECAADICwkC
AAAXEhECAABADAkCAABSBhECAABMCwkCAABqCRECAACdCwkCAAB3CRECAACxCwkCAACEEgUCAABT
DAkCAACEABECAAAgCgkCAABqAAUCAAALCgkCAACgDA0CAADbCwkCAAAAAQ0CAABECgkCAAD+DA0C
AADyCwkCAAAvEAUCAAAJDAkCAAAQARECAABbCgkCAADpCBECAACKCwkCAACPAA0CAAAyCgkCAADt
BRYCAAAZCwkCAABGAQ0CAABwCgkCAADpBA0CAACQCgkCAABWBQUCAAC5CgkCAAA9Eg0CAABfAA0C
AACaAA0CAAA+EA0CAABJDhsCAAClBiACAADpECUCAAAWDhECAADxDBECAAAwEhECAABsBhECAACV
CRECAACyCRECAACeEgUCAADdCBECAABmAQUCAADJDA0CAACmDQ0CAAAXDQ0CAADJCQUCAAAoAREC
AAD9CBECAAA9CQ0CAAAMBQ0CAACnEA0CAADJDCoCAABxDi8CAAAEDzgCAADgBD0CAADbDEICAAB2
EEcCAAAFEhYCAACNEA0CAAC+DQ0CAABmAQUCAADkBQ0CAAAkBUwCAABhEg0CAABABg0CAADhBg0C
AADPEA0CAAD8BAUCAACSBQ0CAAAFEQUCAAB3EVECAAB7EloCAQAGAAMAAQAHAAUAAQAIAAcAAQAJ
AAkAAQAKAAsAAQALAA0AAQAMAA8AAQANABEAAQAOABMAAQAPABUAAQAQABcAAQARABkAAQASABsA
AQATAB0AAQAUAB8AAQAVACEAAQAWACMAAQAXACUAAQAYACcAAQAZACkAAQAaACsAAQAbAC0AAQAc
AC8AAQAdADEAAQAeADMAAQAfADUAAQAgADcAAQAhADkAAQAiADsAAQAjAD0AAQAkAD8AAQAlAEEA
AQAmAEMAAQAnAEUAAQAoAEcAAQApAEkAAQAqAEsAAQArAE0AAQAsAE8AAQAtAFEAAQAuAFMAAQAv
AFUAAQAwAFcAAQAxAFkAAQAyAFsAAQAzAF0AAQA0AF8AAQA1AGEAAQA2AGMAAQA3AGUAAQA4AGcA
AQA5AGkAAQA6AGsAAQA7AG0AAQA8AG8AAQA9AHEAAQA+AHMAAQA/AHUAAQBAAHcAAQBBAHkAAgBM
AHsAAgBNAH0AAgBOAH8AAgBPAIEAAgBRAIMAAgBSAIUAAQBTAIUAAgBUAIcAAgBXAIkAAQBYAIkA
AgBZAIsAAQBaAIsAAgBbAI0AAQBcAI0AAgBdAI8AAQBeAI8AAgBfAJEAAQBgAJEAAgBhAJMAAQBi
AJMAAgBjAJUAAQBkAJUAAgBlAJcAAQBmAJcAAgBoAJkAAQBpAJkAAgBqAJsAAQBrAJsAAgBsAJ0A
AQBtAJ0AAgBuAJ8AAQBvAJ8AAgBxAKEAAQByAKEAAgB0AKMAAQB1AKMAAgB2AKUAAQB3AKUAAgB5
AKcAAQB6AKcAAgB8AKkAAQB9AKkAAgB/AKsAAQCAAKsAAgCBAK0AAQCCAK0AAgCDAK8AAQCEAK8A
AgCFALEAAQCGALEAAgCHALMAAQCIALMAAgCJALUAAQCKALUAAgCLALcAAQCMALcAAgCNALkAAQCO
ALkAAgCQALsAAQCRALsAAgCSAL0AAQCTAL0AAgCVAL8AAQCWAL8AAgCXAMEAAQCYAMEAAgCZAMMA
AQCaAMMAAgCbAMUAAQCcAMUAAgCdAMcAAQCeAMcAAgCfAMkAAQCgAMkAAgChAMsAAQCiAMsAAgCk
AM0AAQClAM0AAgCmAM8AAQCnAM8AAgCoANEAAQCpANEAAgCqANMAAQCrANMAAgCsANUAAQCtANUA
UwBjAG8AdgAEgAAAAQAAAAAAAAAAAAAAAAC9AAAABAAAAAAAAAAAAAAA0wC0AAAAAAAOAAAAAAAA
AAAAAADcAE0RAAAAAA4AAAAAAAAAAAAAANwAfBEAAAAABAAAAAAAAAAAAAAA0wB9DAAAAAAEAAAA
AAAAAAAAAADlAAEQAAAAAA4AAAAAAAAAAAAAANwA5g0AAAAAAAAAAAEAAAA8DwAACQACAAoAAgAL
AAIADAACAA0AAgAOAAIADwACABAAAgARAAIAEgACAC8ATgAAAAAAAElEVFNWYXJpYWJsZTEwMABJ
RFRTVmFyaWFibGVzMTAwAElEVFNFdmFsdWF0b3JDb250ZXh0MTAwAExpc3RgMQBJbnQzMgA8TW9k
dWxlPgBnZXRfQ2l0aUlEAHNldF9DaXRpSUQAc2V0X1dlYXRoZXJJRABHZXRPdXRwdXRJRABzZXRf
VGVtcEtGAHNldF9SYWluM0gAZ2V0X0ZvcmVjYXN0M2hVUkwAV2VhdGhlckRhdGEAbXNjb3JsaWIA
U0NfODI3OTQ1MGJkYmVmNGViNmJiNzhlODYzMmVjMTlhZGMAU3lzdGVtLkNvbGxlY3Rpb25zLkdl
bmVyaWMAc2V0X1dlYXRoZXJEZXNjAHNldF9XaW5kU3BlZWQAZ2V0X3NwZWVkAHNldF9zcGVlZABN
YXJrT3V0cHV0c0ZpbmlzaGVkAHNldF9UaW1lb2ZEYXRhRm9yZWNhc3RlZABnZXRfaWQAc2V0X2lk
ADxzcGVlZD5rX19CYWNraW5nRmllbGQAPGlkPmtfX0JhY2tpbmdGaWVsZAA8d2luZD5rX19CYWNr
aW5nRmllbGQAPGNvZD5rX19CYWNraW5nRmllbGQAPHBvZD5rX19CYWNraW5nRmllbGQAPGNvb3Jk
PmtfX0JhY2tpbmdGaWVsZAA8bWVzc2FnZT5rX19CYWNraW5nRmllbGQAPG5hbWU+a19fQmFja2lu
Z0ZpZWxkADx0aW1lem9uZT5rX19CYWNraW5nRmllbGQAPHByZXNzdXJlPmtfX0JhY2tpbmdGaWVs
ZAA8c3VucmlzZT5rX19CYWNraW5nRmllbGQAPHRlbXBfa2Y+a19fQmFja2luZ0ZpZWxkADxkZWc+
a19fQmFja2luZ0ZpZWxkADxSYWluVm9sXzNoPmtfX0JhY2tpbmdGaWVsZAA8c2VhX2xldmVsPmtf
X0JhY2tpbmdGaWVsZAA8Z3JuZF9sZXZlbD5rX19CYWNraW5nRmllbGQAPGFsbD5rX19CYWNraW5n
RmllbGQAPG1haW4+a19fQmFja2luZ0ZpZWxkADxyYWluPmtfX0JhY2tpbmdGaWVsZAA8dGVtcF9t
aW4+a19fQmFja2luZ0ZpZWxkADxpY29uPmtfX0JhY2tpbmdGaWVsZAA8ZGVzY3JpcHRpb24+a19f
QmFja2luZ0ZpZWxkADxsb24+a19fQmFja2luZ0ZpZWxkADx0ZW1wPmtfX0JhY2tpbmdGaWVsZAA8
d2VhdGhlcj5rX19CYWNraW5nRmllbGQAPGNsb3Vkcz5rX19CYWNraW5nRmllbGQAPHN5cz5rX19C
YWNraW5nRmllbGQAPGxhdD5rX19CYWNraW5nRmllbGQAPGR0PmtfX0JhY2tpbmdGaWVsZAA8c3Vu
c2V0PmtfX0JhY2tpbmdGaWVsZAA8Y250PmtfX0JhY2tpbmdGaWVsZAA8bGlzdD5rX19CYWNraW5n
RmllbGQAPGR0X3R4dD5rX19CYWNraW5nRmllbGQAPHRlbXBfbWF4PmtfX0JhY2tpbmdGaWVsZAA8
Y291bnRyeT5rX19CYWNraW5nRmllbGQAPGNpdHk+a19fQmFja2luZ0ZpZWxkADxodW1pZGl0eT5r
X19CYWNraW5nRmllbGQAV2luZABnZXRfd2luZABzZXRfd2luZABzZXRfU3lzUG9kAGdldF9jb2QA
c2V0X2NvZABnZXRfcG9kAHNldF9wb2QAQ29vcmQAZ2V0X2Nvb3JkAHNldF9jb29yZABSZXBsYWNl
AGRlZmF1bHRJbnN0YW5jZQBzZXRfQ29kZQBzZXRfQ291bnRyeUNvZGUAc2V0X0xvbmdpdHVkZQBz
ZXRfTGF0aXR1ZGUAc2V0X01lc3NhZ2UAZ2V0X21lc3NhZ2UAc2V0X21lc3NhZ2UASURpc3Bvc2Fi
bGUAUnVudGltZVR5cGVIYW5kbGUAR2V0VHlwZUZyb21IYW5kbGUAc2V0X0NpdGlOYW1lAGdldF9u
YW1lAHNldF9uYW1lAHNldF9DYWxjdWxhdGlvbkRhdGVUaW1lAE1pY3Jvc29mdC5TcWxTZXJ2ZXIu
RHRzLlBpcGVsaW5lAHNldF9UaW1lWm9uZQBnZXRfdGltZXpvbmUAc2V0X3RpbWV6b25lAFR5cGUA
c2V0X1ByZXNzdXJlAGdldF9wcmVzc3VyZQBzZXRfcHJlc3N1cmUAc2V0X1RlbXBlcmF0dXJlAGdl
dF9DdWx0dXJlAHNldF9DdWx0dXJlAHJlc291cmNlQ3VsdHVyZQBBcHBsaWNhdGlvblNldHRpbmdz
QmFzZQBzZXRfU3VuUmlzZQBnZXRfc3VucmlzZQBzZXRfc3VucmlzZQBEaXNwb3NlAEVkaXRvckJy
b3dzYWJsZVN0YXRlAENvbXBpbGVyR2VuZXJhdGVkQXR0cmlidXRlAERlYnVnZ2VyTm9uVXNlckNv
ZGVBdHRyaWJ1dGUARGVidWdnYWJsZUF0dHJpYnV0ZQBFZGl0b3JCcm93c2FibGVBdHRyaWJ1dGUA
QXNzZW1ibHlUaXRsZUF0dHJpYnV0ZQBBc3NlbWJseVRyYWRlbWFya0F0dHJpYnV0ZQBUYXJnZXRG
cmFtZXdvcmtBdHRyaWJ1dGUAQXNzZW1ibHlDb25maWd1cmF0aW9uQXR0cmlidXRlAEFzc2VtYmx5
RGVzY3JpcHRpb25BdHRyaWJ1dGUAQ29tcGlsYXRpb25SZWxheGF0aW9uc0F0dHJpYnV0ZQBBc3Nl
bWJseVByb2R1Y3RBdHRyaWJ1dGUAQXNzZW1ibHlDb3B5cmlnaHRBdHRyaWJ1dGUAU1NJU1Njcmlw
dENvbXBvbmVudEVudHJ5UG9pbnRBdHRyaWJ1dGUAQXNzZW1ibHlDb21wYW55QXR0cmlidXRlAFJ1
bnRpbWVDb21wYXRpYmlsaXR5QXR0cmlidXRlAFByZUV4ZWN1dGUAUG9zdEV4ZWN1dGUAdmFsdWUA
RGVzZXJpYWxpemUAZ2V0X3RlbXBfa2YAc2V0X3RlbXBfa2YAc2V0X1dpbmREZWcAZ2V0X2RlZwBz
ZXRfZGVnAFN5c3RlbS5SdW50aW1lLlZlcnNpb25pbmcARG93bmxvYWRTdHJpbmcAZ2V0X1JhaW5W
b2xfM2gAc2V0X1JhaW5Wb2xfM2gARGVjaW1hbABTeXN0ZW0uQ29tcG9uZW50TW9kZWwAc2V0X1Nl
YUxldmVsAHNldF9Hcm91bmRMZXZlbABnZXRfc2VhX2xldmVsAHNldF9zZWFfbGV2ZWwAZ2V0X2dy
bmRfbGV2ZWwAc2V0X2dybmRfbGV2ZWwAZ2V0X2FsbABzZXRfYWxsAFNDXzgyNzk0NTBiZGJlZjRl
YjZiYjc4ZTg2MzJlYzE5YWRjLmRsbABzZXRfQ2l0aUlEX0lzTnVsbABzZXRfV2VhdGhlcklEX0lz
TnVsbABzZXRfVGVtcEtGX0lzTnVsbABzZXRfUmFpbjNIX0lzTnVsbABzZXRfV2VhdGhlckRlc2Nf
SXNOdWxsAHNldF9XaW5kU3BlZWRfSXNOdWxsAHNldF9UaW1lb2ZEYXRhRm9yZWNhc3RlZF9Jc051
bGwAc2V0X1N5c1BvZF9Jc051bGwAc2V0X0NvZGVfSXNOdWxsAHNldF9Db3VudHJ5Q29kZV9Jc051
bGwAc2V0X0xvbmdpdHVkZV9Jc051bGwAc2V0X0xhdGl0dWRlX0lzTnVsbABzZXRfTWVzc2FnZV9J
c051bGwAc2V0X0NpdGlOYW1lX0lzTnVsbABzZXRfQ2FsY3VsYXRpb25EYXRlVGltZV9Jc051bGwA
c2V0X1RpbWVab25lX0lzTnVsbABzZXRfUHJlc3N1cmVfSXNOdWxsAHNldF9UZW1wZXJhdHVyZV9J
c051bGwAc2V0X1N1blJpc2VfSXNOdWxsAHNldF9XaW5kRGVnX0lzTnVsbABzZXRfU2VhTGV2ZWxf
SXNOdWxsAHNldF9Hcm91bmRMZXZlbF9Jc051bGwAc2V0X1RlbXBNaW5fSXNOdWxsAHNldF9XZWF0
aGVyTWFpbl9Jc051bGwAc2V0X1dlYXRoZXJJY29uX0lzTnVsbABzZXRfQ2xvdWRpbmVzc19Jc051
bGwAc2V0X1N1blNldF9Jc051bGwAc2V0X0NudF9Jc051bGwAc2V0X1RlbXBNYXhfSXNOdWxsAHNl
dF9IdW1pZGl0eV9Jc051bGwAU2V0TnVsbABnZXRfSXRlbQBzZXRfSXRlbQBTeXN0ZW0AcmVzb3Vy
Y2VNYW4Ac2V0X1RlbXBNaW4Ac2V0X1dlYXRoZXJNYWluAFNjcmlwdE1haW4AUmFpbgBnZXRfbWFp
bgBzZXRfbWFpbgBnZXRfcmFpbgBzZXRfcmFpbgBnZXRfdGVtcF9taW4Ac2V0X3RlbXBfbWluAHNl
dF9XZWF0aGVySWNvbgBnZXRfaWNvbgBzZXRfaWNvbgBTeXN0ZW0uQ29uZmlndXJhdGlvbgBTeXN0
ZW0uR2xvYmFsaXphdGlvbgBTeXN0ZW0uV2ViLlNjcmlwdC5TZXJpYWxpemF0aW9uAFN5c3RlbS5S
ZWZsZWN0aW9uAEludmFsaWRPcGVyYXRpb25FeGNlcHRpb24AZ2V0X2Rlc2NyaXB0aW9uAHNldF9k
ZXNjcmlwdGlvbgBnZXRfbG9uAHNldF9sb24AQ3VsdHVyZUluZm8AT3V0cHV0TmFtZU1hcABPdXRw
dXRNYXAATWljcm9zb2Z0LlNxbFNlcnZlci5EVFNSdW50aW1lV3JhcABnZXRfdGVtcABzZXRfdGVt
cABPdXRwdXQwQnVmZmVyAFBpcGVsaW5lQnVmZmVyAFNjcmlwdEJ1ZmZlcgBnZXRfUmVzb3VyY2VN
YW5hZ2VyAFdlYXRoZXIAZ2V0X3dlYXRoZXIAc2V0X3dlYXRoZXIATWljcm9zb2Z0LlNxbFNlcnZl
ci5EdHMuUnVudGltZS5XcmFwcGVyAEphdmFTY3JpcHRTZXJpYWxpemVyAEdldEVudW1lcmF0b3IA
LmN0b3IALmNjdG9yAE91dHB1dElEcwBTeXN0ZW0uRGlhZ25vc3RpY3MAQ2xvdWRzAGdldF9jbG91
ZHMAc2V0X2Nsb3VkcwBTeXN0ZW0uUnVudGltZS5Db21waWxlclNlcnZpY2VzAFN5c3RlbS5SZXNv
dXJjZXMAU0NfODI3OTQ1MGJkYmVmNGViNmJiNzhlODYzMmVjMTlhZGMuUHJvcGVydGllcy5SZXNv
dXJjZXMucmVzb3VyY2VzAERlYnVnZ2luZ01vZGVzAFNDXzgyNzk0NTBiZGJlZjRlYjZiYjc4ZTg2
MzJlYzE5YWRjLlByb3BlcnRpZXMAZ2V0X1JlYWRPbmx5VmFyaWFibGVzAEJ1ZmZlckNvbHVtbklu
ZGV4ZXMAR2V0Q29sdW1uSW5kZXhlcwBTZXR0aW5ncwBTeXN0ZW0uV2ViLkV4dGVuc2lvbnMAQ29u
bmVjdGlvbnMAQnVmZmVycwBzZXRfQ2xvdWRpbmVzcwBnZXRfVW5pdHMARmluaXNoT3V0cHV0cwBD
cmVhdGVOZXdPdXRwdXRSb3dzAFN5cwBnZXRfc3lzAHNldF9zeXMAQ29uY2F0AGdldF9sYXQAc2V0
X2xhdABSb290T2JqZWN0AGdldF9kdABzZXRfZHQAU3lzdGVtLk5ldABzZXRfU3VuU2V0AGdldF9z
dW5zZXQAc2V0X3N1bnNldABTZXRFbmRPZlJvd3NldABnZXRfRGVmYXVsdABzZXRfQ250AGdldF9j
bnQAc2V0X2NudABXZWJDbGllbnQAVXNlckNvbXBvbmVudABQYXJlbnRDb21wb25lbnQAU2NyaXB0
Q29tcG9uZW50AGdldF9DdXJyZW50AE1pY3Jvc29mdC5TcWxTZXJ2ZXIuVHhTY3JpcHQAZ2V0X2xp
c3QAc2V0X2xpc3QATWljcm9zb2Z0LlNxbFNlcnZlci5QaXBlbGluZUhvc3QAUHJpbWVPdXRwdXQA
TW92ZU5leHQAR2V0VmFsdWVXaXRoQ29udGV4dABTY3JpcHRDb21wb25lbnRFdmFsQ29udGV4dABn
ZXRfRXZhbHVhdG9yQ29udGV4dABnZXRfZHRfdHh0AHNldF9kdF90eHQAQWRkUm93AHNldF9UZW1w
TWF4AGdldF90ZW1wX21heABzZXRfdGVtcF9tYXgAZ2V0X0FQSUtleQBnZXRfQXNzZW1ibHkAZ2V0
X2NvdW50cnkAc2V0X2NvdW50cnkAQ2l0eQBnZXRfY2l0eQBzZXRfY2l0eQBzZXRfSHVtaWRpdHkA
Z2V0X2h1bWlkaXR5AHNldF9odW1pZGl0eQAAAA8mAHUAbgBpAHQAcwA9AAAPJgBhAHAAcABpAGQA
PQAACyIAMwBoACIAOgAAGyIAUgBhAGkAbgBWAG8AbABfADMAaAAiADoAAICbSQBzAE4AdQBsAGwA
IABwAHIAbwBwAGUAcgB0AHkAIABjAGEAbgBuAG8AdAAgAGIAZQAgAHMAZQB0ACAAdABvACAARgBh
AGwAcwBlAC4AIABBAHMAcwBpAGcAbgAgAGEAIAB2AGEAbAB1AGUAIAB0AG8AIAB0AGgAZQAgAGMA
bwBsAHUAbQBuACAAaQBuAHMAdABlAGEAZAAuAAARTwB1AHQAcAB1AHQAIAAwAAANQQBQAEkASwBl
AHkAAA1DAGkAdABpAEkARAAAH0YAbwByAGUAYwBhAHMAdABfADMAaABfAFUAUgBMAAALVQBuAGkA
dABzAABxUwBDAF8AOAAyADcAOQA0ADUAMABiAGQAYgBlAGYANABlAGIANgBiAGIANwA4AGUAOAA2
ADMAMgBlAGMAMQA5AGEAZABjAC4AUAByAG8AcABlAHIAdABpAGUAcwAuAFIAZQBzAG8AdQByAGMA
ZQBzAAAAACx0sRIwHwhEn7w3p/Pr5qgABCABAQgDIAABBSABARERBCABAQ4FIAEBEW0aBwsODg4O
Dg4SSBURPQESPBI8FRE9ARIoEigFAAEOHQ4EIAEODgUgAg4ODgYwAQEeAA4ECgESSAYVEjkBEjwI
IAAVET0BEwAGFRE9ARI8BCAAEwAGFRI5ARIoBhURPQESKAMgAAIJIAMBElUdCBJZBSACAQgcAwcB
CAYAAggSWQ4FIAEdCAgFIAASgJEGIAESgJUcBQAAEoCZBiABHBKAnQgAARKAoRGApQUgABKAqQcg
AgEOEoCpCLd6XFYZNOCJCImEXc2AgMyRCDG/OFatNk41AwYSFAMGEhgDBhIMAwYSXQMGEmUDBhJp
AwYSIAMGEUkCBggCBg4DBhIkBwYVEjkBEigDBhIsAwYSMAMGEjQDBhI4AwYRTQMGEkAHBhUSOQES
PAMGEkQEIAEBAgUgAQERSQUgAQERTQsgBAEIHQgdElUSWQUgAQESXQMgAA4EAAASZQQAABJpBQAB
ARJpBAAAEiADAAABBCAAEUkDIAAIBCAAEiQFIAEBEiQIIAAVEjkBEigJIAEBFRI5ARIoBCAAEiwF
IAEBEiwEIAASMAUgAQESMAQgABI0BSABARI0BCAAEjgFIAEBEjgEIAARTQQgABJABSABARJACCAA
FRI5ARI8CSABARUSOQESPAQgABJEBSABARJEAygACAMoAAIDKAAOBCgAEUkEKAARTQQIABJlBAgA
EmkECAASIAQoABIkCCgAFRI5ARIoBCgAEiwEKAASMAQoABI0BCgAEjgEKAASQAgoABUSOQESPAQo
ABJECAEACAAAAAAAHgEAAQBUAhZXcmFwTm9uRXhjZXB0aW9uVGhyb3dzAQgBAAIAAAAAACgBACNT
Q184Mjc5NDUwYmRiZWY0ZWI2YmI3OGU4NjMyZWMxOWFkYwAABQEAAAAAFgEAEUNvcHlyaWdodCBA
ICAyMDE5AABJAQAaLk5FVEZyYW1ld29yayxWZXJzaW9uPXY0LjUBAFQOFEZyYW1ld29ya0Rpc3Bs
YXlOYW1lEi5ORVQgRnJhbWV3b3JrIDQuNQQBAAAAAAAAtAAAAM7K774BAAAAkQAAAGxTeXN0ZW0u
UmVzb3VyY2VzLlJlc291cmNlUmVhZGVyLCBtc2NvcmxpYiwgVmVyc2lvbj00LjAuMC4wLCBDdWx0
dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkjU3lzdGVtLlJlc291
cmNlcy5SdW50aW1lUmVzb3VyY2VTZXQCAAAAAAAAAAAAAABQQURQQURQtAAAALBgAAAAAAAAAAAA
AMpgAAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAC8YAAAAAAAAAAAAAAAAF9Db3JEbGxNYWluAG1z
Y29yZWUuZGxsAAAAAAD/JQAgABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAEAAAABgAAIAAAAAAAAAAAAAA
AAAAAAEAAQAAADAAAIAAAAAAAAAAAAAAAAAAAAEAAAAAAEgAAABYgAAA7AMAAAAAAAAAAAAA7AM0
AAAAVgBTAF8AVgBFAFIAUwBJAE8ATgBfAEkATgBGAE8AAAAAAL0E7/4AAAEAAAABAAAAAAAAAAEA
AAAAAD8AAAAAAAAABAAAAAIAAAAAAAAAAAAAAAAAAABEAAAAAQBWAGEAcgBGAGkAbABlAEkAbgBm
AG8AAAAAACQABAAAAFQAcgBhAG4AcwBsAGEAdABpAG8AbgAAAAAAAACwBEwDAAABAFMAdAByAGkA
bgBnAEYAaQBsAGUASQBuAGYAbwAAACgDAAABADAAMAAwADAAMAA0AGIAMAAAABoAAQABAEMAbwBt
AG0AZQBuAHQAcwAAAAAAAAAiAAEAAQBDAG8AbQBwAGEAbgB5AE4AYQBtAGUAAAAAAAAAAABwACQA
AQBGAGkAbABlAEQAZQBzAGMAcgBpAHAAdABpAG8AbgAAAAAAUwBDAF8AOAAyADcAOQA0ADUAMABi
AGQAYgBlAGYANABlAGIANgBiAGIANwA4AGUAOAA2ADMAMgBlAGMAMQA5AGEAZABjAAAAMAAIAAEA
RgBpAGwAZQBWAGUAcgBzAGkAbwBuAAAAAAAxAC4AMAAuADAALgAwAAAAcAAoAAEASQBuAHQAZQBy
AG4AYQBsAE4AYQBtAGUAAABTAEMAXwA4ADIANwA5ADQANQAwAGIAZABiAGUAZgA0AGUAYgA2AGIA
YgA3ADgAZQA4ADYAMwAyAGUAYwAxADkAYQBkAGMALgBkAGwAbAAAAEgAEgABAEwAZQBnAGEAbABD
AG8AcAB5AHIAaQBnAGgAdAAAAEMAbwBwAHkAcgBpAGcAaAB0ACAAQAAgACAAMgAwADEAOQAAACoA
AQABAEwAZQBnAGEAbABUAHIAYQBkAGUAbQBhAHIAawBzAAAAAAAAAAAAeAAoAAEATwByAGkAZwBp
AG4AYQBsAEYAaQBsAGUAbgBhAG0AZQAAAFMAQwBfADgAMgA3ADkANAA1ADAAYgBkAGIAZQBmADQA
ZQBiADYAYgBiADcAOABlADgANgAzADIAZQBjADEAOQBhAGQAYwAuAGQAbABsAAAAaAAkAAEAUABy
AG8AZAB1AGMAdABOAGEAbQBlAAAAAABTAEMAXwA4ADIANwA5ADQANQAwAGIAZABiAGUAZgA0AGUA
YgA2AGIAYgA3ADgAZQA4ADYAMwAyAGUAYwAxADkAYQBkAGMAAAA0AAgAAQBQAHIAbwBkAHUAYwB0
AFYAZQByAHMAaQBvAG4AAAAxAC4AMAAuADAALgAwAAAAOAAIAAEAQQBzAHMAZQBtAGIAbAB5ACAA
VgBlAHIAcwBpAG8AbgAAADEALgAwAC4AMAAuADAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAYAAADAAAANwwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAA==]]></arrayElement>
                      </arrayElements>
                    </property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the Microsoft Visual Studio Tools for Applications project. Project names must be unique within a package."
                      name="VSTAProjectName"
                      typeConverter="NOTBROWSABLE">SC_8279450bdbef4eb6bb78e8632ec19adc</property>
                    <property
                      dataType="System.String"
                      description="Specifies the programming language used by the script."
                      name="ScriptLanguage"
                      typeConverter="Microsoft.SqlServer.VSTAHosting.ScriptingLanguages">CSharp</property>
                    <property
                      dataType="System.String"
                      description="Specifies a comma-separated list of read-only variables."
                      name="ReadOnlyVariables"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIVariablePickerDlg">User::CitiID,User::Forecast_3h_URL,$Project::APIKey,$Project::Units</property>
                    <property
                      dataType="System.String"
                      description="Specifies a comma-separated list of read/write variables."
                      name="ReadWriteVariables"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIWriteableVariablePickerDlg"></property>
                    <property
                      dataType="System.String"
                      description="List of breakpoints present on the script."
                      isArray="true"
                      name="BreakpointCollection"
                      typeConverter="NOTBROWSABLE">
                      <arrayElements
                        arrayElementCount="0" />
                    </property>
                    <property
                      dataType="System.String"
                      description="Checksum to match component metedata against compiled codes."
                      name="MetadataChecksum140"
                      typeConverter="NOTBROWSABLE">55</property>
                    <property
                      dataType="System.String"
                      name="UserComponentTypeName">Microsoft.ScriptComponentHost</property>
                  </properties>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop  - Loop through Cities\DFT - Load Forcast data - 3 hour\SCR - Extract 3Hour Forecast data from API.Outputs[Output 0]"
                      hasSideEffects="true"
                      name="Output 0">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop  - Loop through Cities\DFT - Load Forcast data - 3 hour\SCR - Extract 3Hour Forecast data from API.Outputs[Output 0].Columns[CitiID]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop  - Loop through Cities\DFT - Load Forcast data - 3 hour\SCR - Extract 3Hour Forecast data from API.Outputs[Output 0].Columns[CitiID]"
                          name="CitiID" />
                        <outputColumn
                          refId="Package\Foreach Loop  - Loop through Cities\DFT - Load Forcast data - 3 hour\SCR - Extract 3Hour Forecast data from API.Outputs[Output 0].Columns[CitiName]"
                          dataType="wstr"
                          length="60"
                          lineageId="Package\Foreach Loop  - Loop through Cities\DFT - Load Forcast data - 3 hour\SCR - Extract 3Hour Forecast data from API.Outputs[Output 0].Columns[CitiName]"
                          name="CitiName" />
                        <outputColumn
                          refId="Package\Foreach Loop  - Loop through Cities\DFT - Load Forcast data - 3 hour\SCR - Extract 3Hour Forecast data from API.Outputs[Output 0].Columns[Latitude]"
                          dataType="wstr"
                          length="16"
                          lineageId="Package\Foreach Loop  - Loop through Cities\DFT - Load Forcast data - 3 hour\SCR - Extract 3Hour Forecast data from API.Outputs[Output 0].Columns[Latitude]"
                          name="Latitude" />
                        <outputColumn
                          refId="Package\Foreach Loop  - Loop through Cities\DFT - Load Forcast data - 3 hour\SCR - Extract 3Hour Forecast data from API.Outputs[Output 0].Columns[Longitude]"
                          dataType="wstr"
                          length="16"
                          lineageId="Package\Foreach Loop  - Loop through Cities\DFT - Load Forcast data - 3 hour\SCR - Extract 3Hour Forecast data from API.Outputs[Output 0].Columns[Longitude]"
                          name="Longitude" />
                        <outputColumn
                          refId="Package\Foreach Loop  - Loop through Cities\DFT - Load Forcast data - 3 hour\SCR - Extract 3Hour Forecast data from API.Outputs[Output 0].Columns[CountryCode]"
                          dataType="wstr"
                          length="2"
                          lineageId="Package\Foreach Loop  - Loop through Cities\DFT - Load Forcast data - 3 hour\SCR - Extract 3Hour Forecast data from API.Outputs[Output 0].Columns[CountryCode]"
                          name="CountryCode" />
                        <outputColumn
                          refId="Package\Foreach Loop  - Loop through Cities\DFT - Load Forcast data - 3 hour\SCR - Extract 3Hour Forecast data from API.Outputs[Output 0].Columns[TimeZone]"
                          dataType="wstr"
                          length="16"
                          lineageId="Package\Foreach Loop  - Loop through Cities\DFT - Load Forcast data - 3 hour\SCR - Extract 3Hour Forecast data from API.Outputs[Output 0].Columns[TimeZone]"
                          name="TimeZone" />
                        <outputColumn
                          refId="Package\Foreach Loop  - Loop through Cities\DFT - Load Forcast data - 3 hour\SCR - Extract 3Hour Forecast data from API.Outputs[Output 0].Columns[SunRise]"
                          dataType="wstr"
                          length="12"
                          lineageId="Package\Foreach Loop  - Loop through Cities\DFT - Load Forcast data - 3 hour\SCR - Extract 3Hour Forecast data from API.Outputs[Output 0].Columns[SunRise]"
                          name="SunRise" />
                        <outputColumn
                          refId="Package\Foreach Loop  - Loop through Cities\DFT - Load Forcast data - 3 hour\SCR - Extract 3Hour Forecast data from API.Outputs[Output 0].Columns[SunSet]"
                          dataType="wstr"
                          length="12"
                          lineageId="Package\Foreach Loop  - Loop through Cities\DFT - Load Forcast data - 3 hour\SCR - Extract 3Hour Forecast data from API.Outputs[Output 0].Columns[SunSet]"
                          name="SunSet" />
                        <outputColumn
                          refId="Package\Foreach Loop  - Loop through Cities\DFT - Load Forcast data - 3 hour\SCR - Extract 3Hour Forecast data from API.Outputs[Output 0].Columns[Message]"
                          dataType="wstr"
                          length="100"
                          lineageId="Package\Foreach Loop  - Loop through Cities\DFT - Load Forcast data - 3 hour\SCR - Extract 3Hour Forecast data from API.Outputs[Output 0].Columns[Message]"
                          name="Message" />
                        <outputColumn
                          refId="Package\Foreach Loop  - Loop through Cities\DFT - Load Forcast data - 3 hour\SCR - Extract 3Hour Forecast data from API.Outputs[Output 0].Columns[Cnt]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop  - Loop through Cities\DFT - Load Forcast data - 3 hour\SCR - Extract 3Hour Forecast data from API.Outputs[Output 0].Columns[Cnt]"
                          name="Cnt" />
                        <outputColumn
                          refId="Package\Foreach Loop  - Loop through Cities\DFT - Load Forcast data - 3 hour\SCR - Extract 3Hour Forecast data from API.Outputs[Output 0].Columns[Temperature]"
                          dataType="decimal"
                          lineageId="Package\Foreach Loop  - Loop through Cities\DFT - Load Forcast data - 3 hour\SCR - Extract 3Hour Forecast data from API.Outputs[Output 0].Columns[Temperature]"
                          name="Temperature" />
                        <outputColumn
                          refId="Package\Foreach Loop  - Loop through Cities\DFT - Load Forcast data - 3 hour\SCR - Extract 3Hour Forecast data from API.Outputs[Output 0].Columns[TempMin]"
                          dataType="decimal"
                          lineageId="Package\Foreach Loop  - Loop through Cities\DFT - Load Forcast data - 3 hour\SCR - Extract 3Hour Forecast data from API.Outputs[Output 0].Columns[TempMin]"
                          name="TempMin" />
                        <outputColumn
                          refId="Package\Foreach Loop  - Loop through Cities\DFT - Load Forcast data - 3 hour\SCR - Extract 3Hour Forecast data from API.Outputs[Output 0].Columns[TempMax]"
                          dataType="decimal"
                          lineageId="Package\Foreach Loop  - Loop through Cities\DFT - Load Forcast data - 3 hour\SCR - Extract 3Hour Forecast data from API.Outputs[Output 0].Columns[TempMax]"
                          name="TempMax" />
                        <outputColumn
                          refId="Package\Foreach Loop  - Loop through Cities\DFT - Load Forcast data - 3 hour\SCR - Extract 3Hour Forecast data from API.Outputs[Output 0].Columns[Pressure]"
                          dataType="decimal"
                          lineageId="Package\Foreach Loop  - Loop through Cities\DFT - Load Forcast data - 3 hour\SCR - Extract 3Hour Forecast data from API.Outputs[Output 0].Columns[Pressure]"
                          name="Pressure" />
                        <outputColumn
                          refId="Package\Foreach Loop  - Loop through Cities\DFT - Load Forcast data - 3 hour\SCR - Extract 3Hour Forecast data from API.Outputs[Output 0].Columns[SeaLevel]"
                          dataType="decimal"
                          lineageId="Package\Foreach Loop  - Loop through Cities\DFT - Load Forcast data - 3 hour\SCR - Extract 3Hour Forecast data from API.Outputs[Output 0].Columns[SeaLevel]"
                          name="SeaLevel" />
                        <outputColumn
                          refId="Package\Foreach Loop  - Loop through Cities\DFT - Load Forcast data - 3 hour\SCR - Extract 3Hour Forecast data from API.Outputs[Output 0].Columns[GroundLevel]"
                          dataType="decimal"
                          lineageId="Package\Foreach Loop  - Loop through Cities\DFT - Load Forcast data - 3 hour\SCR - Extract 3Hour Forecast data from API.Outputs[Output 0].Columns[GroundLevel]"
                          name="GroundLevel" />
                        <outputColumn
                          refId="Package\Foreach Loop  - Loop through Cities\DFT - Load Forcast data - 3 hour\SCR - Extract 3Hour Forecast data from API.Outputs[Output 0].Columns[Humidity]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop  - Loop through Cities\DFT - Load Forcast data - 3 hour\SCR - Extract 3Hour Forecast data from API.Outputs[Output 0].Columns[Humidity]"
                          name="Humidity" />
                        <outputColumn
                          refId="Package\Foreach Loop  - Loop through Cities\DFT - Load Forcast data - 3 hour\SCR - Extract 3Hour Forecast data from API.Outputs[Output 0].Columns[Temp_KF]"
                          dataType="decimal"
                          lineageId="Package\Foreach Loop  - Loop through Cities\DFT - Load Forcast data - 3 hour\SCR - Extract 3Hour Forecast data from API.Outputs[Output 0].Columns[Temp_KF]"
                          name="Temp_KF" />
                        <outputColumn
                          refId="Package\Foreach Loop  - Loop through Cities\DFT - Load Forcast data - 3 hour\SCR - Extract 3Hour Forecast data from API.Outputs[Output 0].Columns[WeatherID]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop  - Loop through Cities\DFT - Load Forcast data - 3 hour\SCR - Extract 3Hour Forecast data from API.Outputs[Output 0].Columns[WeatherID]"
                          name="WeatherID" />
                        <outputColumn
                          refId="Package\Foreach Loop  - Loop through Cities\DFT - Load Forcast data - 3 hour\SCR - Extract 3Hour Forecast data from API.Outputs[Output 0].Columns[WeatherMain]"
                          dataType="wstr"
                          length="60"
                          lineageId="Package\Foreach Loop  - Loop through Cities\DFT - Load Forcast data - 3 hour\SCR - Extract 3Hour Forecast data from API.Outputs[Output 0].Columns[WeatherMain]"
                          name="WeatherMain" />
                        <outputColumn
                          refId="Package\Foreach Loop  - Loop through Cities\DFT - Load Forcast data - 3 hour\SCR - Extract 3Hour Forecast data from API.Outputs[Output 0].Columns[WeatherDesc]"
                          dataType="wstr"
                          length="100"
                          lineageId="Package\Foreach Loop  - Loop through Cities\DFT - Load Forcast data - 3 hour\SCR - Extract 3Hour Forecast data from API.Outputs[Output 0].Columns[WeatherDesc]"
                          name="WeatherDesc" />
                        <outputColumn
                          refId="Package\Foreach Loop  - Loop through Cities\DFT - Load Forcast data - 3 hour\SCR - Extract 3Hour Forecast data from API.Outputs[Output 0].Columns[WeatherIcon]"
                          dataType="wstr"
                          length="10"
                          lineageId="Package\Foreach Loop  - Loop through Cities\DFT - Load Forcast data - 3 hour\SCR - Extract 3Hour Forecast data from API.Outputs[Output 0].Columns[WeatherIcon]"
                          name="WeatherIcon" />
                        <outputColumn
                          refId="Package\Foreach Loop  - Loop through Cities\DFT - Load Forcast data - 3 hour\SCR - Extract 3Hour Forecast data from API.Outputs[Output 0].Columns[Cloudiness]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop  - Loop through Cities\DFT - Load Forcast data - 3 hour\SCR - Extract 3Hour Forecast data from API.Outputs[Output 0].Columns[Cloudiness]"
                          name="Cloudiness" />
                        <outputColumn
                          refId="Package\Foreach Loop  - Loop through Cities\DFT - Load Forcast data - 3 hour\SCR - Extract 3Hour Forecast data from API.Outputs[Output 0].Columns[WindSpeed]"
                          dataType="decimal"
                          lineageId="Package\Foreach Loop  - Loop through Cities\DFT - Load Forcast data - 3 hour\SCR - Extract 3Hour Forecast data from API.Outputs[Output 0].Columns[WindSpeed]"
                          name="WindSpeed" />
                        <outputColumn
                          refId="Package\Foreach Loop  - Loop through Cities\DFT - Load Forcast data - 3 hour\SCR - Extract 3Hour Forecast data from API.Outputs[Output 0].Columns[WindDeg]"
                          dataType="decimal"
                          lineageId="Package\Foreach Loop  - Loop through Cities\DFT - Load Forcast data - 3 hour\SCR - Extract 3Hour Forecast data from API.Outputs[Output 0].Columns[WindDeg]"
                          name="WindDeg" />
                        <outputColumn
                          refId="Package\Foreach Loop  - Loop through Cities\DFT - Load Forcast data - 3 hour\SCR - Extract 3Hour Forecast data from API.Outputs[Output 0].Columns[Rain_3H]"
                          dataType="wstr"
                          length="10"
                          lineageId="Package\Foreach Loop  - Loop through Cities\DFT - Load Forcast data - 3 hour\SCR - Extract 3Hour Forecast data from API.Outputs[Output 0].Columns[Rain_3H]"
                          name="Rain_3H" />
                        <outputColumn
                          refId="Package\Foreach Loop  - Loop through Cities\DFT - Load Forcast data - 3 hour\SCR - Extract 3Hour Forecast data from API.Outputs[Output 0].Columns[CalculationDateTime]"
                          dataType="dbTimeStamp"
                          lineageId="Package\Foreach Loop  - Loop through Cities\DFT - Load Forcast data - 3 hour\SCR - Extract 3Hour Forecast data from API.Outputs[Output 0].Columns[CalculationDateTime]"
                          name="CalculationDateTime" />
                        <outputColumn
                          refId="Package\Foreach Loop  - Loop through Cities\DFT - Load Forcast data - 3 hour\SCR - Extract 3Hour Forecast data from API.Outputs[Output 0].Columns[TimeofDataForecasted]"
                          dataType="wstr"
                          length="16"
                          lineageId="Package\Foreach Loop  - Loop through Cities\DFT - Load Forcast data - 3 hour\SCR - Extract 3Hour Forecast data from API.Outputs[Output 0].Columns[TimeofDataForecasted]"
                          name="TimeofDataForecasted" />
                        <outputColumn
                          refId="Package\Foreach Loop  - Loop through Cities\DFT - Load Forcast data - 3 hour\SCR - Extract 3Hour Forecast data from API.Outputs[Output 0].Columns[SysPod]"
                          dataType="wstr"
                          length="10"
                          lineageId="Package\Foreach Loop  - Loop through Cities\DFT - Load Forcast data - 3 hour\SCR - Extract 3Hour Forecast data from API.Outputs[Output 0].Columns[SysPod]"
                          name="SysPod" />
                        <outputColumn
                          refId="Package\Foreach Loop  - Loop through Cities\DFT - Load Forcast data - 3 hour\SCR - Extract 3Hour Forecast data from API.Outputs[Output 0].Columns[Code]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop  - Loop through Cities\DFT - Load Forcast data - 3 hour\SCR - Extract 3Hour Forecast data from API.Outputs[Output 0].Columns[Code]"
                          name="Code" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
              </components>
              <paths>
                <path
                  refId="Package\Foreach Loop  - Loop through Cities\DFT - Load Forcast data - 3 hour.Paths[Output 0]"
                  endId="Package\Foreach Loop  - Loop through Cities\DFT - Load Forcast data - 3 hour\OLEDB_Dest - Staging_Forecast_3h.Inputs[OLE DB Destination Input]"
                  name="Output 0"
                  startId="Package\Foreach Loop  - Loop through Cities\DFT - Load Forcast data - 3 hour\SCR - Extract 3Hour Forecast data from API.Outputs[Output 0]" />
              </paths>
            </pipeline>
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
      <DTS:ForEachVariableMappings>
        <DTS:ForEachVariableMapping
          DTS:CreationName=""
          DTS:DTSID="{41CCEC3A-808F-49BE-8564-5938EAE4C14E}"
          DTS:ObjectName="{41CCEC3A-808F-49BE-8564-5938EAE4C14E}"
          DTS:ValueIndex="0"
          DTS:VariableName="User::CitiID" />
      </DTS:ForEachVariableMappings>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\SQL - Get Citi ID List from DIM_Cities"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{0D61712C-402C-4184-9658-7CD89D906767}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="SQL - Get Citi ID List from DIM_Cities"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{2F0B9ABE-B0F6-4174-9360-6F341960A908}"
          SQLTask:SqlStatementSource="SELECT cast([CitiNK] as nvarchar) FROM [WeatherDWH].[DIM].[Cities]"
          SQLTask:ResultType="ResultSetType_Rowset" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
          <SQLTask:ResultBinding
            SQLTask:ResultName="0"
            SQLTask:DtsVariableName="User::CitiIDsList" />
        </SQLTask:SqlTaskData>
      </DTS:ObjectData>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:PrecedenceConstraints>
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint]"
      DTS:CreationName=""
      DTS:DTSID="{98AF96A4-8E80-4AAC-8C34-F09C5509D0F1}"
      DTS:From="Package\SQL - Get Citi ID List from DIM_Cities"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint"
      DTS:To="Package\Foreach Loop  - Loop through Cities" />
  </DTS:PrecedenceConstraints>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--This CDATA section contains the layout information of the package. The section includes information such as (x,y) coordinates, width, and height.-->
<!--If you manually edit this section and make a mistake, you can delete it. -->
<!--The package will still be able to load normally but the previous layout information will be lost and the designer will automatically re-arrange the elements on the design surface.-->
<Objects
  Version="8">
  <!--Each node below will contain properties that do not affect runtime behavior.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml">
        <NodeLayout
          Size="234,42"
          Id="Package\Foreach Loop  - Loop through Cities\DFT - Load Forcast data - 3 hour"
          TopLeft="40,25" />
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="308,139"
          Size="308,182"
          Id="Package\Foreach Loop  - Loop through Cities"
          TopLeft="266,197" />
        <NodeLayout
          Size="256,42"
          Id="Package\SQL - Get Citi ID List from DIM_Cities"
          TopLeft="284,88" />
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint]"
          TopLeft="412,130">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="8,67"
              Start="0,0"
              End="8,59.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,29.5" />
                  <mssgle:CubicBezierSegment
                    Point1="0,29.5"
                    Point2="0,33.5"
                    Point3="4,33.5" />
                  <mssgle:LineSegment
                    End="4,33.5" />
                  <mssgle:CubicBezierSegment
                    Point1="4,33.5"
                    Point2="8,33.5"
                    Point3="8,37.5" />
                  <mssgle:LineSegment
                    End="8,59.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </Package>
  <TaskHost
    design-time-name="Package\Foreach Loop  - Loop through Cities\DFT - Load Forcast data - 3 hour">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml">
        <NodeLayout
          Size="285,42"
          Id="Package\Foreach Loop  - Loop through Cities\DFT - Load Forcast data - 3 hour\SCR - Extract 3Hour Forecast data from API"
          TopLeft="274,89" />
        <NodeLayout
          Size="247,42"
          Id="Package\Foreach Loop  - Loop through Cities\DFT - Load Forcast data - 3 hour\OLEDB_Dest - Staging_Forecast_3h"
          TopLeft="298,227" />
        <EdgeLayout
          Id="Package\Foreach Loop  - Loop through Cities\DFT - Load Forcast data - 3 hour.Paths[Output 0]"
          TopLeft="419,131">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,96"
              Start="0,0"
              End="0,88.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,88.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\Foreach Loop  - Loop through Cities\DFT - Load Forcast data - 3 hour\OLEDB_Dest - Staging_Forecast_3h">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>